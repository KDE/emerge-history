
1. separate package build time dependencies from development system build 
   time dependencies 
   Background: Recent package dependencies are a mixture of package and development system 
               dependencies. For automatic release dependency creating the development 
               system dependencies should be separated from the package dependencies. 
   
   link: emerge-development-system-dependencies.pdf
   
   contact: Ralf Habacker <ralf.habacker@freenet.de>
   
   tester: Patrick von Reth
   
   state: started 
          initial implementation is in trunk and could be enabled by setting the following 
          environment variable: 
          
            set EMERGE_ENABLE_IMPLICID_BUILDTIME_DEPENDENCIES=1
            
          after settings this variable, running emerge -v development system dependencies 
          are collected from the portage/internal category 
          
            emerge debug: dependency: ['kdesupport', 'taglib', '1.6.1.20100107', 'svnHEAD', False]
            emerge debug: dependency: ['virtual', 'base', '0.2', '0.2', False]
            emerge debug: dependency: ['dev-util', 'pexports', '0.44', '0.44', False]
            emerge debug: dependency: ['internal', 'CMakeBuildSystem', 'internal', 'svnHEAD', False]
            emerge debug: dependency: ['dev-util', 'cmake', '2.8.2', 'v2.8.2', False]
            emerge debug: dependency: ['dev-util', 'jom', '100-20101025', '094', False]
            emerge debug: dependency: ['internal', 'ArchiveSource', 'internal', 'svnHEAD', False]
            emerge debug: dependency: ['gnuwin32', 'patch', '2.5.9-7', '2.5.9', False]
            emerge debug: dependency: ['internal', 'KDEWinPackager', 'internal', 'svnHEAD', False]
            emerge debug: dependency: ['dev-util', 'kdewin-packager', '0.9.6', '0.9.6', False]
            emerge debug: dependency: ['internal', 'FileSource', 'internal', 'svnHEAD', False]
            emerge debug: dependency: ['gnuwin32', 'wget', '1.11.4', 'dummy', False]
            emerge debug: dependency: ['dev-util', '7zip', '9.16', '9.16', False]
            emerge debug: dependency: ['internal', 'KDEWinPackager', 'internal', 'svnHEAD', False]
            emerge debug: dependency: ['internal', 'BinaryBuildSystem', 'internal', 'svnHEAD', False]
            emerge debug: dependency: ['internal', 'ArchiveSource', 'internal', 'svnHEAD', False]          
               

2. separate trace messages from verbose messages 
   In python classes there are trace messages added using utils.debug(). For those methods a different  
   function utils.trace() should be added. If python has build in trace mode this should be used instead. 
   Trace message should be printable by using the --trace command line option.
   
   state: not started 
   contact: Ralf Habacker <ralf.habacker@freenet.de>
   
3. extend source system 
    - the recent implementation of the source system have some limitations 
      - only one type of source either archive or repositories (self.targets, self.svnTargets) 
      - only one host possible 

   state: not started 
   contact: none
      
4. separate build time dependencies from runtime dependencies 
   Recent dependencies are a mixture of build and runtime dependencies. This should be separated 
   This relates also to topic 1 
   There are still thing to analyze
    1. how to autodetect if a specific target of a specific package is a static build (no runtime 
       dependency required) or not 
   
   state: started 
   contact: Patrick Spendrin <ps_ml@gmx.de> 

5. target specific dependencies 
   Some packages may require a specific target build for a package it depends on, this should be implemented 
   
   state: not started 
   contact: none 
   
