From e541ce0bc44b3799ea386e71c37419ad82fad932 Mon Sep 17 00:00:00 2001
From: Andreas Holzammer <andy@kdab.com>
Date: Fri, 15 Oct 2010 13:01:54 +0200
Subject: [PATCH] - fix async handler thread

---
 src/corelib/kernel/qeventdispatcher_win.cpp |   15 +++++++++++----
 1 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/src/corelib/kernel/qeventdispatcher_win.cpp b/src/corelib/kernel/qeventdispatcher_win.cpp
index 153ccdf..607061c 100644
--- a/src/corelib/kernel/qeventdispatcher_win.cpp
+++ b/src/corelib/kernel/qeventdispatcher_win.cpp
@@ -97,6 +97,8 @@ QT_BEGIN_INCLUDE_NAMESPACE
 #include <qmutex.h>
 QT_END_INCLUDE_NAMESPACE
 
+#include <qthreadstorage.h>
+
 //#define QCE_ASYNC_DEBUG
 
 namespace {
@@ -249,21 +251,25 @@ namespace {
     }
 } // namespace
 
-Q_GLOBAL_STATIC(SocketAsyncHandler, qt_async_handler)
+QThreadStorage<SocketAsyncHandler *> qt_async_handler;
 
 int WSAAsyncSelect(SOCKET sock, HWND handle, unsigned int msg, long ev)
 {
+    if (!qt_async_handler.hasLocalData()){
+      qt_async_handler.setLocalData(new SocketAsyncHandler());
+    }
+
     if (sock == 0 || handle == 0 || handle == INVALID_HANDLE_VALUE) {
         WSASetLastError(WSAEINVAL);
         return SOCKET_ERROR;
     }
 
     if (msg == 0 && ev == 0)
-        qt_async_handler()->safeRemove(sock);
+        qt_async_handler.localData()->safeRemove(sock);
     else
-        qt_async_handler()->select(sock, handle, msg, ev);
+        qt_async_handler.localData()->select(sock, handle, msg, ev);
 
-    qt_async_handler()->start(QThread::LowPriority);
+    qt_async_handler.localData()->start();
     WSASetLastError(0);
     return 0;
 }
@@ -816,6 +822,7 @@ bool QEventDispatcherWin32::processEvents(QEventLoop::ProcessEventsFlags flags)
 
         // still nothing - wait for message or signalled objects
         canWait = (!retVal
+                   && !needWM_QT_SENDPOSTEDEVENTS
                    && !d->interrupt
                    && (flags & QEventLoop::WaitForMoreEvents));
         if (canWait) {
-- 
1.7.0.2.msysgit.0

