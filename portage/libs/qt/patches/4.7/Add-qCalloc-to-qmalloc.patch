From 2347cb311975b8cd459ca665297e2f440f503d18 Mon Sep 17 00:00:00 2001
From: Andre Heinecke <aheinecke@intevation.de>
Date: Wed, 26 Jan 2011 13:23:11 +0000
Subject: [PATCH 1/2] Add qCalloc to qmalloc

---
 src/corelib/global/qglobal.h   |    1 +
 src/corelib/global/qmalloc.cpp |   15 +++++++++++++++
 2 files changed, 16 insertions(+), 0 deletions(-)

diff --git a/src/corelib/global/qglobal.h b/src/corelib/global/qglobal.h
index 35607d5..ebe4d66 100644
--- a/src/corelib/global/qglobal.h
+++ b/src/corelib/global/qglobal.h
@@ -2108,6 +2108,7 @@ Q_DECLARE_TYPEINFO(long double, Q_PRIMITIVE_TYPE);
    a similar name from Qt header files (especially template classes).
 */
 Q_CORE_EXPORT void *qMalloc(size_t size);
+Q_CORE_EXPORT void *qCalloc(size_t num, size_t size);
 Q_CORE_EXPORT void qFree(void *ptr);
 Q_CORE_EXPORT void *qRealloc(void *ptr, size_t size);
 Q_CORE_EXPORT void *qMallocAligned(size_t size, size_t alignment);
diff --git a/src/corelib/global/qmalloc.cpp b/src/corelib/global/qmalloc.cpp
index 00f9763..4ecd76f 100644
--- a/src/corelib/global/qmalloc.cpp
+++ b/src/corelib/global/qmalloc.cpp
@@ -88,6 +88,21 @@ void *qMalloc(size_t size)
 #endif
 }
 
+void *qCalloc(size_t num, size_t size)
+{
+#ifdef _WIN32_WCE
+    if (!initialized) {
+        qmalloc_init();
+    }
+    if (use_dlmalloc) {
+        return ::dlcalloc(num, size);
+    } else {
+        return ::calloc(num, size);
+    }
+#else
+    return ::calloc(num, size);
+#endif
+}
 void qFree(void *ptr)
 {
 #ifdef _WIN32_WCE
-- 
1.7.0.4

