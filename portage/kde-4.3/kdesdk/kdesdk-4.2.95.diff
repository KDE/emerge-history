--- kate/plugins/konsole/kateconsole.cpp
+++ kate/plugins/konsole/kateconsole.cpp
@@ -207,7 +207,7 @@
 
 void KateConsole::cd (const KUrl &url)
 {
-  sendInput("cd " + KShell::quoteArg(url.path()) + '\n');
+  sendInput("cd " + KShell::quoteArg(url.toLocalFile()) + '\n');
 }
 
 void KateConsole::sendInput( const QString& text )
--- kate/plugins/openheader/plugin_kateopenheader.cpp
+++ kate/plugins/openheader/plugin_kateopenheader.cpp
@@ -89,7 +89,10 @@
   QFileInfo info( url.toLocalFile() );
   QString extension = info.suffix().toLower();
 
-  QStringList headers( QStringList() << "h" << "H" << "hh" << "hpp" );
+  QStringList headers( QStringList() << "h" << "hh" << "hpp" );
+#ifndef Q_OS_WIN
+  headers << "H";
+#endif
   QStringList sources( QStringList() << "c" << "cpp" << "cc" << "cp" << "cxx" );
 
   if( sources.contains( extension ) ) {
@@ -109,8 +112,13 @@
   KUrl newURL( url );
   for( QStringList::ConstIterator it = extensions.begin(); it != extensions.end(); ++it ) {
     newURL.setFileName( basename + '.' + *it );
-    if( KIO::NetAccess::exists( newURL , KIO::NetAccess::SourceSide, application()->activeMainWindow()->window()) )
+    if( KIO::NetAccess::exists( newURL , KIO::NetAccess::SourceSide, application()->activeMainWindow()->window()) ) {
       application()->activeMainWindow()->openUrl( newURL );
+#ifdef Q_OS_WIN
+      /* on windows the files foo.h and foo.H can't coexist - so don't look for another version of the same file. */
+      continue;
+#endif
+    }
     newURL.setFileName( basename + '.' + (*it).toUpper() );
     if( KIO::NetAccess::exists( newURL , KIO::NetAccess::SourceSide, application()->activeMainWindow()->window()) )
       application()->activeMainWindow()->openUrl( newURL );
--- umbrello/umbrello/CMakeLists.txt
+++ umbrello/umbrello/CMakeLists.txt
@@ -433,7 +433,7 @@
     ${libumbrello_SRCS}
 )
 
-kde4_add_app_icon(umbrello_SRCS "${CMAKE_CURRENT_SOURCE_DIR}/hi*-app-umbrello.png")
+kde4_add_app_icon(umbrello_SRCS "${CMAKE_CURRENT_SOURCE_DIR}/pics/hi*-app-umbrello.png")
 kde4_add_executable(umbrello ${umbrello_SRCS})
 target_link_libraries(umbrello  ${KDE4_KFILE_LIBS} ${KDE4_KDE3SUPPORT_LIBS} ${LIBXML2_LIBRARIES} ${LIBXSLT_LIBRARIES} ${LIBUUID} )
 install(TARGETS umbrello ${INSTALL_TARGETS_DEFAULT_ARGS} )
