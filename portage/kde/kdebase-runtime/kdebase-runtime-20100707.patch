Index: cmake/modules/FindWcecompat.cmake
===================================================================
--- cmake/modules/FindWcecompat.cmake
+++ cmake/modules/FindWcecompat.cmake
@@ -0,0 +1,33 @@
+# Try to find Wcecompat functionality
+# Once done this will define
+#
+#  WCECOMPAT_FOUND - system has Wcecompat
+#  WCECOMPAT_INCLUDE_DIR - Wcecompat include directory
+#  WCECOMPAT_LIBRARIES - Libraries needed to use Wcecompat
+#
+# Copyright (c) 2010, Andreas Holzammer, <andy@kdab.com>
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+
+if(WCECOMPAT_INCLUDE_DIR AND WCECOMPAT_LIB_FOUND)
+  set(Wcecompat_FIND_QUIETLY TRUE)
+endif(WCECOMPAT_INCLUDE_DIR AND WCECOMPAT_LIB_FOUND)
+
+find_path(WCECOMPAT_INCLUDE_DIR errno.h PATH_SUFFIXES wcecompat)
+
+set(WCECOMPAT_LIB_FOUND FALSE)
+
+if(WCECOMPAT_INCLUDE_DIR)
+    find_library(WCECOMPAT_LIBRARIES NAMES wcecompat wcecompatex )
+    if(WCECOMPAT_LIBRARIES)
+      set(WCECOMPAT_LIB_FOUND TRUE)
+    endif(WCECOMPAT_LIBRARIES)
+endif(WCECOMPAT_INCLUDE_DIR)
+
+# I have no idea what this is about, but it seems to be used quite often, so I add this here
+set(WCECOMPAT_CONST const)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(Wcecompat  DEFAULT_MSG  WCECOMPAT_LIBRARIES  WCECOMPAT_LIB_FOUND)
+
+mark_as_advanced(WCECOMPAT_INCLUDE_DIR  WCECOMPAT_LIBRARIES  WCECOMPAT_CONST  WCECOMPAT_LIB_FOUND)
Index: kioexec/CMakeLists.txt
===================================================================
--- kioexec/CMakeLists.txt
+++ kioexec/CMakeLists.txt
@@ -4,6 +4,10 @@
 kde4_add_executable(kioexec NOGUI ${kioexec_SRCS})
 
 target_link_libraries(kioexec ${KDE4_KIO_LIBS})
+if(WINCE)
+target_link_libraries(kioexec ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
 
+
 install(TARGETS kioexec DESTINATION ${LIBEXEC_INSTALL_DIR} )
 
Index: kcontrol/componentchooser/CMakeLists.txt
===================================================================
--- kcontrol/componentchooser/CMakeLists.txt
+++ kcontrol/componentchooser/CMakeLists.txt
@@ -42,6 +42,10 @@
 
 target_link_libraries(kcm_componentchooser  ${KDE4_KIO_LIBS})
 
+if(WINCE)
+target_link_libraries(kcm_componentchooser ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
+
 install(TARGETS kcm_componentchooser  DESTINATION ${PLUGIN_INSTALL_DIR} )
 
 
Index: kcontrol/icons/CMakeLists.txt
===================================================================
--- kcontrol/icons/CMakeLists.txt
+++ kcontrol/icons/CMakeLists.txt
@@ -11,6 +11,10 @@
 
 target_link_libraries(kcm_icons ${KDE4_KIO_LIBS} ${KDE4_KNEWSTUFF2_LIBS})
 
+if(WINCE)
+target_link_libraries(kcm_icons ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
+
 install(TARGETS kcm_icons  DESTINATION ${PLUGIN_INSTALL_DIR} )
 
 
Index: kpasswdserver/CMakeLists.txt
===================================================================
--- kpasswdserver/CMakeLists.txt
+++ kpasswdserver/CMakeLists.txt
@@ -8,6 +8,10 @@
 
 target_link_libraries(kded_kpasswdserver ${KDE4_KIO_LIBS})
 
+if(WINCE)
+target_link_libraries(kded_kpasswdserver ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
+
 install(TARGETS kded_kpasswdserver  DESTINATION ${PLUGIN_INSTALL_DIR} )
 
 install( FILES kpasswdserver.desktop  DESTINATION  ${SERVICES_INSTALL_DIR}/kded )
Index: platforms/CMakeLists.txt
===================================================================
--- platforms/CMakeLists.txt
+++ platforms/CMakeLists.txt
@@ -1,3 +1,3 @@
-if(WIN32)
+if(WIN32 AND NOT WINCE)
    add_subdirectory( win ) 
-endif(WIN32)
+endif(WIN32 AND NOT WINCE)
Index: kwalletd/backend/CMakeLists.txt
===================================================================
--- kwalletd/backend/CMakeLists.txt
+++ kwalletd/backend/CMakeLists.txt
@@ -21,9 +21,9 @@
 target_link_libraries(kwalletbackend ${KDE4_KDEUI_LIBS} )
 
 # link with advapi32 on windows
-if(WIN32)
+if(WIN32 AND NOT WINCE)
    target_link_libraries(kwalletbackend advapi32)
-endif(WIN32)
+endif(WIN32 AND NOT WINCE)
 
 set_target_properties(kwalletbackend PROPERTIES VERSION ${GENERIC_LIB_VERSION} SOVERSION ${GENERIC_LIB_SOVERSION} )
 install(TARGETS kwalletbackend ${INSTALL_TARGETS_DEFAULT_ARGS})
Index: kwalletd/CMakeLists.txt
===================================================================
--- kwalletd/CMakeLists.txt
+++ kwalletd/CMakeLists.txt
@@ -38,6 +38,9 @@
 install(TARGETS kdeinit_kwalletd  ${INSTALL_TARGETS_DEFAULT_ARGS})
 
 target_link_libraries(kwalletd kdeinit_kwalletd)
+if(WINCE)
+target_link_libraries(kwalletd ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
 install(TARGETS kwalletd  ${INSTALL_TARGETS_DEFAULT_ARGS} )
 
 ########### install files ###############
Index: ktimezoned/ktimezoned_win.cpp
===================================================================
--- ktimezoned/ktimezoned_win.cpp
+++ ktimezoned/ktimezoned_win.cpp
@@ -68,6 +68,8 @@
 
     void run()
     {
+//FIXME: the timezonechange needs to be handled diffrently
+#ifndef _WIN32
         if ( RegOpenKeyEx( HKEY_LOCAL_MACHINE, currentTimeZoneKey, 0, KEY_READ, &key ) == ERROR_SUCCESS )
         {
             while(true)
@@ -77,6 +79,7 @@
                 q->updateLocalZone();
             }
         }
+#endif
     }
     private:
         KTimeZoned* q;
Index: CMakeLists.txt
===================================================================
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -3,6 +3,12 @@
 # where to look first for cmake modules, before ${CMAKE_ROOT}/Modules/ is checked
 set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules ${CMAKE_MODULE_PATH})
 
+if(WINCE)
+    find_package(Wcecompat REQUIRED)
+    #Needs to be set because otherwise he wouldn't find kde parts
+    set(KDE4_DATA_DIR "${CMAKE_PREFIX_PATH}/share/apps")
+endif(WINCE)
+
 #search packages used by KDE
 set(KDE_MIN_VERSION "4.4.80")  # for the < 4.2 macro
 find_package(KDE4 4.4.80 REQUIRED)
@@ -47,6 +53,13 @@
 
 include_directories (${CMAKE_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR} ${KDE4_INCLUDES})
 
+if(WINCE)
+    SET(QT_DBUSCPP2XML_EXECUTABLE ${HOST_BINDIR}/qdbuscpp2xml.exe)
+    SET(QT_DBUSXML2CPP_EXECUTABLE ${HOST_BINDIR}/qdbusxml2cpp.exe)
+    SET(PNG2ICO_EXECUTABLE ${HOST_BINDIR}/png2ico.exe)
+    SET(KDE4_KCFGC_EXECUTABLE ${HOST_BINDIR}/kconfig_compiler.exe)
+endif(WINCE)
+
 # Build infrastructure
 add_subdirectory(cmake)
 
@@ -116,8 +129,10 @@
 # Default settings, content and config
 add_subdirectory(l10n)
 add_subdirectory(localization)
+if(NOT WINCE)
 add_subdirectory(kde-menu)
 macro_optional_add_subdirectory(doc)
+endif(NOT WINCE)
 
 # Artwork
 add_subdirectory(desktoptheme)
Index: kioslave/archive/CMakeLists.txt
===================================================================
--- kioslave/archive/CMakeLists.txt
+++ kioslave/archive/CMakeLists.txt
@@ -7,6 +7,9 @@
 kde4_add_plugin(kio_archive ${kio_archive_SRCS})
 
 target_link_libraries(kio_archive ${KDE4_KIO_LIBS} )
+if(WINCE)
+target_link_libraries(kio_archive ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
 
 install(TARGETS kio_archive DESTINATION ${PLUGIN_INSTALL_DIR} )
 install( FILES tar.protocol ar.protocol zip.protocol  DESTINATION  ${SERVICES_INSTALL_DIR} )
Index: kioslave/thumbnail/CMakeLists.txt
===================================================================
--- kioslave/thumbnail/CMakeLists.txt
+++ kioslave/thumbnail/CMakeLists.txt
@@ -7,7 +7,9 @@
 
 macro_bool_to_01(EXIV2_FOUND HAVE_EXIV2)
 
-include_directories(${JPEG_INCLUDE_DIR} ${EXIV2_INCLUDE_DIR})
+if(EXIV2_FOUND)
+    include_directories(${JPEG_INCLUDE_DIR} ${EXIV2_INCLUDE_DIR})
+endif(EXIV2_FOUND)
 
 ########### next target ###############
 
@@ -16,6 +18,9 @@
 kde4_add_plugin(kio_thumbnail ${kio_thumbnail_PART_SRCS})
 
 target_link_libraries(kio_thumbnail ${KDE4_KIO_LIBS})
+if(WINCE)
+target_link_libraries(kio_thumbnail ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
 
 install(TARGETS kio_thumbnail DESTINATION ${PLUGIN_INSTALL_DIR})
 
@@ -71,6 +76,7 @@
 
 ########### next target ###############
 
+if(NOT WINCE)
 set(htmlthumbnail_PART_SRCS htmlcreator.cpp)
 
 kde4_add_plugin(htmlthumbnail ${htmlthumbnail_PART_SRCS})
@@ -78,6 +84,7 @@
 target_link_libraries(htmlthumbnail ${KDE4_KHTML_LIBS})
 
 install(TARGETS htmlthumbnail DESTINATION ${PLUGIN_INSTALL_DIR})
+endif(NOT WINCE)
 
 ########### next target ###############
 
Index: kioslave/applications/CMakeLists.txt
===================================================================
--- kioslave/applications/CMakeLists.txt
+++ kioslave/applications/CMakeLists.txt
@@ -3,6 +3,9 @@
 kde4_add_plugin(kio_applications kio_applications.cpp)
 
 target_link_libraries(kio_applications  ${KDE4_KIO_LIBS} )
+if(WINCE)
+target_link_libraries(kio_applications ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
 
 install(TARGETS kio_applications  DESTINATION ${PLUGIN_INSTALL_DIR} )
 
Index: kioslave/fish/CMakeLists.txt
===================================================================
--- kioslave/fish/CMakeLists.txt
+++ kioslave/fish/CMakeLists.txt
@@ -40,6 +40,9 @@
    kde4_add_plugin(kio_fish ${kio_fish_PART_SRCS})
 
    target_link_libraries(kio_fish ${KDE4_KIO_LIBS})
+   if(WINCE)
+    target_link_libraries(kio_fish ${WCECOMPAT_LIBRARIES})
+    endif(WINCE)
 
    if (UTIL_LIBRARIES)
       target_link_libraries(kio_fish ${UTIL_LIBRARIES})
Index: kioslave/settings/CMakeLists.txt
===================================================================
--- kioslave/settings/CMakeLists.txt
+++ kioslave/settings/CMakeLists.txt
@@ -3,6 +3,9 @@
 kde4_add_plugin(kio_settings kio_settings.cpp)
 
 target_link_libraries(kio_settings  ${KDE4_KIO_LIBS} )
+if(WINCE)
+target_link_libraries(kio_settings ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
 
 install(TARGETS kio_settings  DESTINATION ${PLUGIN_INSTALL_DIR} )
 
Index: kioslave/CMakeLists.txt
===================================================================
--- kioslave/CMakeLists.txt
+++ kioslave/CMakeLists.txt
@@ -12,13 +12,19 @@
 
 add_subdirectory( about )
 add_subdirectory( bookmarks )
+if(NOT WINCE)
 add_subdirectory( cgi )
+endif(NOT WINCE)
 add_subdirectory( filter )
+if(NOT WINCE)
 add_subdirectory( info )
+endif(NOT WINCE)
 add_subdirectory( archive )
 add_subdirectory( settings )
 add_subdirectory( applications )
+if(NOT WINCE)
 add_subdirectory( trash )
+endif(NOT WINCE)
 if(NOT WIN32)
 add_subdirectory( network )
 endif(NOT WIN32)
@@ -38,7 +44,7 @@
    add_subdirectory( nfs )  
 endif(NOT WIN32)
 
-if(SAMBA_FOUND OR WIN32)
+if(SAMBA_FOUND OR WIN32 AND NOT WINCE)
     add_subdirectory(smb)
-endif(SAMBA_FOUND OR WIN32)
+endif(SAMBA_FOUND OR WIN32 AND NOT WINCE)
 
Index: kurifilter-plugins/shorturi/CMakeLists.txt
===================================================================
--- kurifilter-plugins/shorturi/CMakeLists.txt
+++ kurifilter-plugins/shorturi/CMakeLists.txt
@@ -10,6 +10,9 @@
 
 
 target_link_libraries(kshorturifilter  ${KDE4_KIO_LIBS})
+if(WINCE)
+target_link_libraries(kshorturifilter ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
 
 install(TARGETS kshorturifilter  DESTINATION ${PLUGIN_INSTALL_DIR} )
 
Index: kurifilter-plugins/ikws/CMakeLists.txt
===================================================================
--- kurifilter-plugins/ikws/CMakeLists.txt
+++ kurifilter-plugins/ikws/CMakeLists.txt
@@ -7,6 +7,9 @@
 kde4_add_plugin(kuriikwsfilter ${kuriikwsfilter_PART_SRCS})
 
 target_link_libraries(kuriikwsfilter ${KDE4_KDEUI_LIBS} ${KDE4_KIO_LIBS})
+if(WINCE)
+target_link_libraries(kuriikwsfilter ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
 
 install(TARGETS kuriikwsfilter DESTINATION ${PLUGIN_INSTALL_DIR})
 
@@ -22,6 +25,9 @@
 kde4_add_plugin(kurisearchfilter ${kurisearchfilter_PART_SRCS})
 
 target_link_libraries(kurisearchfilter ${KDE4_KDEUI_LIBS} ${KDE4_KIO_LIBS})
+if(WINCE)
+target_link_libraries(kurisearchfilter ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
 
 install(TARGETS kurisearchfilter DESTINATION ${PLUGIN_INSTALL_DIR})
 
Index: kglobalaccel/main.cpp
===================================================================
--- kglobalaccel/main.cpp
+++ kglobalaccel/main.cpp
@@ -84,8 +84,11 @@
     app.setQuitOnLastWindowClosed( false );
 
     // Stop gracefully
+    //There is no SIGINT and SIGTERM under wince
+#ifndef _WIN32_WCE
     KDE_signal(SIGINT, sighandler);
     KDE_signal(SIGTERM, sighandler);
+#endif
     KDE_signal(SIGHUP, sighandler);
 
     // Restart on a crash
