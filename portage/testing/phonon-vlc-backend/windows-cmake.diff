diff --git a/CMakeLists.txt b/CMakeLists.txt
index 73b5acf..bb8956d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -120,7 +120,8 @@ if (CMAKE_COMPILER_IS_GNUCXX)
       string(REGEX MATCH "(--enable-libstdcxx-allocator=mt)" _GCC_COMPILED_WITH_BAD_ALLOCATOR "${_gcc_alloc_info}")
    endif (GCC_IS_NEWER_THAN_4_1)
 
-   if (__KDE_HAVE_GCC_VISIBILITY AND GCC_IS_NEWER_THAN_4_1 AND NOT _GCC_COMPILED_WITH_BAD_ALLOCATOR)
+
+   if (__KDE_HAVE_GCC_VISIBILITY AND GCC_IS_NEWER_THAN_4_1 AND NOT _GCC_COMPILED_WITH_BAD_ALLOCATOR AND NOT WIN32)
       set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fvisibility=hidden")
       set (KDE4_C_FLAGS "-fvisibility=hidden")
       # check that Qt defines Q_DECL_EXPORT as __attribute__ ((visibility("default")))
@@ -142,9 +143,9 @@ if (CMAKE_COMPILER_IS_GNUCXX)
       if (GCC_IS_NEWER_THAN_4_2)
           set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fvisibility-inlines-hidden")
       endif (GCC_IS_NEWER_THAN_4_2)
-   else (__KDE_HAVE_GCC_VISIBILITY AND GCC_IS_NEWER_THAN_4_1 AND NOT _GCC_COMPILED_WITH_BAD_ALLOCATOR)
+   else (__KDE_HAVE_GCC_VISIBILITY AND GCC_IS_NEWER_THAN_4_1 AND NOT _GCC_COMPILED_WITH_BAD_ALLOCATOR  AND NOT WIN32)
       set (__KDE_HAVE_GCC_VISIBILITY 0)
-   endif (__KDE_HAVE_GCC_VISIBILITY AND GCC_IS_NEWER_THAN_4_1 AND NOT _GCC_COMPILED_WITH_BAD_ALLOCATOR)
+   endif (__KDE_HAVE_GCC_VISIBILITY AND GCC_IS_NEWER_THAN_4_1 AND NOT _GCC_COMPILED_WITH_BAD_ALLOCATOR  AND NOT WIN32)
 
 endif (CMAKE_COMPILER_IS_GNUCXX)
 
@@ -227,9 +228,9 @@ if (CMAKE_SYSTEM_NAME MATCHES Linux)
    endif (CMAKE_C_COMPILER MATCHES "icc")
 endif (CMAKE_SYSTEM_NAME MATCHES Linux)
 
-list(APPEND PHONON_LIBS phonon ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY})
+list(APPEND PHONON_LIBS ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY})
 if(QT_QTDBUS_FOUND)
-    list(APPEND PHONON_LIBS phonon ${QT_QTDBUS_LIBRARY})
+    list(APPEND PHONON_LIBS ${QT_QTDBUS_LIBRARY})
 endif(QT_QTDBUS_FOUND)
 
 set(EXECUTABLE_OUTPUT_PATH ${Phonon_BINARY_DIR}/bin)
@@ -256,8 +257,8 @@ if(APPLE)
    set(CMAKE_INSTALL_NAME_DIR ${LIB_INSTALL_DIR})
 endif(APPLE)
 
-if (Q_WS_X11)
-   add_subdirectory(vlc)
-endif (Q_WS_X11)
+
+add_subdirectory(vlc)
+
 
 macro_display_feature_log()
diff --git a/cmake/modules/FindVLC.cmake b/cmake/modules/FindVLC.cmake
index eec5c57..bc1e5ab 100644
--- a/cmake/modules/FindVLC.cmake
+++ b/cmake/modules/FindVLC.cmake
@@ -19,6 +19,8 @@ if(VLC_INCLUDE_DIR AND VLC_LIBRARIES)
    set(VLC_FIND_QUIETLY TRUE)
 endif(VLC_INCLUDE_DIR AND VLC_LIBRARIES)
 
+set( VLC_VERSION_OK = True )
+
 # use pkg-config to get the directories and then use these values
 # in the FIND_PATH() and FIND_LIBRARY() calls
 if(NOT WIN32)
@@ -26,11 +28,12 @@ if(NOT WIN32)
   pkg_check_modules(VLC libvlc>=1.0.0)
   set(VLC_DEFINITIONS ${VLC_CFLAGS})
   set(VLC_LIBRARIES ${VLC_LDFLAGS})
+  # TODO add argument support to pass version on find_package
+  include(MacroEnsureVersion)
+  macro_ensure_version(1.0.0 ${VLC_VERSION} VLC_VERSION_OK)
 endif(NOT WIN32)
 
-# TODO add argument support to pass version on find_package
-include(MacroEnsureVersion)
-macro_ensure_version(1.0.0 ${VLC_VERSION} VLC_VERSION_OK)
+
 if(VLC_VERSION_OK)
   set(VLC_FOUND TRUE)
   message(STATUS "VLC library found")
