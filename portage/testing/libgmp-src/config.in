/* config.in.  Generated automatically from configure.in by autoheader.  */
/* Templates for defines setup by configure.

Copyright 2000, 2001, 2002 Free Software Foundation, Inc.

This file is part of the GNU MP Library.

The GNU MP Library is free software; you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation; either version 2.1 of the License, or (at your
option) any later version.

The GNU MP Library is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
License for more details.

You should have received a copy of the GNU Lesser General Public License
along with the GNU MP Library; see the file COPYING.LIB.  If not, write to
the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
MA 02111-1307, USA. */



/* Define one (and only one) of these for the CPU host.
   Only hosts that are going to be tested for need to be in this list,
   not everything that can possibly be selected.
 */
#cmakedefine HAVE_HOST_CPU_alpha
#cmakedefine HAVE_HOST_CPU_alphaev5
#cmakedefine HAVE_HOST_CPU_alphaev6
#cmakedefine HAVE_HOST_CPU_alphaev67

#cmakedefine HAVE_HOST_CPU_m68k
#cmakedefine HAVE_HOST_CPU_m68000
#cmakedefine HAVE_HOST_CPU_m68010
#cmakedefine HAVE_HOST_CPU_m68020
#cmakedefine HAVE_HOST_CPU_m68030
#cmakedefine HAVE_HOST_CPU_m68040
#cmakedefine HAVE_HOST_CPU_m68060
#cmakedefine HAVE_HOST_CPU_m68302
#cmakedefine HAVE_HOST_CPU_m68360

#cmakedefine HAVE_HOST_CPU_powerpc604
#cmakedefine HAVE_HOST_CPU_powerpc604e
#cmakedefine HAVE_HOST_CPU_powerpc750
#cmakedefine HAVE_HOST_CPU_powerpc7400

#cmakedefine HAVE_HOST_CPU_sparc
#cmakedefine HAVE_HOST_CPU_sparcv8
#cmakedefine HAVE_HOST_CPU_supersparc
#cmakedefine HAVE_HOST_CPU_sparclite
#cmakedefine HAVE_HOST_CPU_microsparc
#cmakedefine HAVE_HOST_CPU_ultrasparc1
#cmakedefine HAVE_HOST_CPU_ultrasparc2
#cmakedefine HAVE_HOST_CPU_sparc64

#cmakedefine HAVE_HOST_CPU_hppa1_0
#cmakedefine HAVE_HOST_CPU_hppa1_1
#cmakedefine HAVE_HOST_CPU_hppa2_0n
#cmakedefine HAVE_HOST_CPU_hppa2_0w

#cmakedefine HAVE_HOST_CPU_i386
#cmakedefine HAVE_HOST_CPU_i486 1
#cmakedefine HAVE_HOST_CPU_i586
#cmakedefine HAVE_HOST_CPU_i686
#cmakedefine HAVE_HOST_CPU_pentium
#cmakedefine HAVE_HOST_CPU_pentiummmx
#cmakedefine HAVE_HOST_CPU_pentiumpro
#cmakedefine HAVE_HOST_CPU_pentium2
#cmakedefine HAVE_HOST_CPU_pentium3
#cmakedefine HAVE_HOST_CPU_k5
#cmakedefine HAVE_HOST_CPU_k6
#cmakedefine HAVE_HOST_CPU_k62
#cmakedefine HAVE_HOST_CPU_k63
#cmakedefine HAVE_HOST_CPU_athlon

/* a dummy to make autoheader happy */
#cmakedefine HAVE_HOST_CPU_


/* Define one (and only one) of these for the CPU host family.
   Only hosts that are going to be tested for need to be in this list,
   not everything that can possibly be selected.
 */
#cmakedefine HAVE_HOST_CPU_FAMILY_power
#cmakedefine HAVE_HOST_CPU_FAMILY_powerpc
#cmakedefine HAVE_HOST_CPU_FAMILY_x86 1


/* Define if we have native implementation of function. */
#cmakedefine HAVE_NATIVE_mpn_add
#cmakedefine HAVE_NATIVE_mpn_add_1
#cmakedefine HAVE_NATIVE_mpn_add_n 1
#cmakedefine HAVE_NATIVE_mpn_add_nc 1
#cmakedefine HAVE_NATIVE_mpn_addmul_1
#cmakedefine HAVE_NATIVE_mpn_addmul_1c
#cmakedefine HAVE_NATIVE_mpn_addmul_2
#cmakedefine HAVE_NATIVE_mpn_addmul_3
#cmakedefine HAVE_NATIVE_mpn_addmul_4
#cmakedefine HAVE_NATIVE_mpn_addsub_n
#cmakedefine HAVE_NATIVE_mpn_addsub_nc
#cmakedefine HAVE_NATIVE_mpn_and_n
#cmakedefine HAVE_NATIVE_mpn_andn_n
#cmakedefine HAVE_NATIVE_mpn_bdivmod
#cmakedefine HAVE_NATIVE_mpn_cmp
#cmakedefine HAVE_NATIVE_mpn_com_n
#cmakedefine HAVE_NATIVE_mpn_copyd
#cmakedefine HAVE_NATIVE_mpn_copyi
#cmakedefine HAVE_NATIVE_mpn_divexact_1
#cmakedefine HAVE_NATIVE_mpn_divexact_by3c
#cmakedefine HAVE_NATIVE_mpn_divrem
#cmakedefine HAVE_NATIVE_mpn_divrem_1
#cmakedefine HAVE_NATIVE_mpn_divrem_1c
#cmakedefine HAVE_NATIVE_mpn_divrem_2
#cmakedefine HAVE_NATIVE_mpn_divrem_newton
#cmakedefine HAVE_NATIVE_mpn_divrem_classic
#cmakedefine HAVE_NATIVE_mpn_dump
#cmakedefine HAVE_NATIVE_mpn_gcd
#cmakedefine HAVE_NATIVE_mpn_gcd_1
#cmakedefine HAVE_NATIVE_mpn_gcd_finda
#cmakedefine HAVE_NATIVE_mpn_gcdext
#cmakedefine HAVE_NATIVE_mpn_get_str
#cmakedefine HAVE_NATIVE_mpn_hamdist
#cmakedefine HAVE_NATIVE_mpn_invert_limb
#cmakedefine HAVE_NATIVE_mpn_ior_n
#cmakedefine HAVE_NATIVE_mpn_iorn_n
#cmakedefine HAVE_NATIVE_mpn_lshift
#cmakedefine HAVE_NATIVE_mpn_mod_1
#cmakedefine HAVE_NATIVE_mpn_mod_1c
#cmakedefine HAVE_NATIVE_mpn_modexact_1_odd
#cmakedefine HAVE_NATIVE_mpn_modexact_1c_odd
#cmakedefine HAVE_NATIVE_mpn_mul
#cmakedefine HAVE_NATIVE_mpn_mul_1
#cmakedefine HAVE_NATIVE_mpn_mul_1c
#cmakedefine HAVE_NATIVE_mpn_mul_2
#cmakedefine HAVE_NATIVE_mpn_mul_3
#cmakedefine HAVE_NATIVE_mpn_mul_4
#cmakedefine HAVE_NATIVE_mpn_mul_basecase
#cmakedefine HAVE_NATIVE_mpn_mul_n
#cmakedefine HAVE_NATIVE_mpn_nand_n
#cmakedefine HAVE_NATIVE_mpn_nior_n
#cmakedefine HAVE_NATIVE_mpn_perfect_square_p
#cmakedefine HAVE_NATIVE_mpn_popcount
#cmakedefine HAVE_NATIVE_mpn_preinv_mod_1
#cmakedefine HAVE_NATIVE_mpn_random2
#cmakedefine HAVE_NATIVE_mpn_random
#cmakedefine HAVE_NATIVE_mpn_rawrandom
#cmakedefine HAVE_NATIVE_mpn_rshift
#cmakedefine HAVE_NATIVE_mpn_scan0
#cmakedefine HAVE_NATIVE_mpn_scan1
#cmakedefine HAVE_NATIVE_mpn_set_str
#cmakedefine HAVE_NATIVE_mpn_sqrtrem
#cmakedefine HAVE_NATIVE_mpn_sqr_basecase
#cmakedefine HAVE_NATIVE_mpn_sqr_diagonal
#cmakedefine HAVE_NATIVE_mpn_sub
#cmakedefine HAVE_NATIVE_mpn_sub_1
#cmakedefine HAVE_NATIVE_mpn_sub_n 1
#cmakedefine HAVE_NATIVE_mpn_sub_nc 1
#cmakedefine HAVE_NATIVE_mpn_submul_1
#cmakedefine HAVE_NATIVE_mpn_submul_1c
#cmakedefine HAVE_NATIVE_mpn_udiv_w_sdiv
#cmakedefine HAVE_NATIVE_mpn_umul_ppmm
#cmakedefine HAVE_NATIVE_mpn_udiv_qrnnd
#cmakedefine HAVE_NATIVE_mpn_xor_n
#cmakedefine HAVE_NATIVE_mpn_xnor_n

/* a dummy to make autoheader happy */
#cmakedefine HAVE_NATIVE_

/* bits per unsigned long, if not in gmp-mparam.h */
#cmakedefine BITS_PER_ULONG BITS_PER_MP_LIMB

/* bytes per mp_limb_t, if not in gmp-mparam.h */
#cmakedefine BYTES_PER_MP_LIMB

/* The gmp-mparam.h to update when tuning. */
#cmakedefine GMP_MPARAM_H_SUGGEST "./mpn/x86/p6/gmp-mparam.h"

/* Define if you have the `alarm' function. */
#cmakedefine HAVE_ALARM 1

/* Define if alloca() works (via gmp-impl.h). */
#cmakedefine HAVE_ALLOCA 1

/* Define if you have <alloca.h> and it should be used (not on Ultrix). */
#cmakedefine HAVE_ALLOCA_H 1

/* Define if the compiler accepts gcc style __attribute__ ((const)) */
#cmakedefine HAVE_ATTRIBUTE_CONST 1

/* Define if the compiler accepts gcc style __attribute__ ((malloc)) */
#cmakedefine HAVE_ATTRIBUTE_MALLOC 1

/* Define if the compiler accepts gcc style __attribute__ ((mode (XX))) */
#cmakedefine HAVE_ATTRIBUTE_MODE 1

/* Define if the compiler accepts gcc style __attribute__ ((noreturn)) */
#cmakedefine HAVE_ATTRIBUTE_NORETURN 1

/* Define if tests/libtests has calling conventions checking for the CPU */
#cmakedefine HAVE_CALLING_CONVENTIONS 1

/* Define if you have the `clock' function. */
#cmakedefine HAVE_CLOCK 1

/* Define if you have the `clock_gettime' function. */
#cmakedefine HAVE_CLOCK_GETTIME 1

/* Define if you have the `cputime' function. */
#cmakedefine HAVE_CPUTIME 1

/* Define to 1 if you have the declaration of `fgetc', and to 0 if you don't.
   */
#cmakedefine HAVE_DECL_FGETC 1

/* Define to 1 if you have the declaration of `fscanf', and to 0 if you don't.
   */
#cmakedefine HAVE_DECL_FSCANF 1

/* Define to 1 if you have the declaration of `optarg', and to 0 if you don't.
   */
#cmakedefine HAVE_DECL_OPTARG 1

/* Define to 1 if you have the declaration of `ungetc', and to 0 if you don't.
   */
#cmakedefine HAVE_DECL_UNGETC 1

/* Define to 1 if you have the declaration of `vfprintf', and to 0 if you
   don't. */
#cmakedefine HAVE_DECL_VFPRINTF 1

/* Define if denormalized floats work. */
#cmakedefine HAVE_DENORMS

/* Define if you have the <dlfcn.h> header file. */
#cmakedefine HAVE_DLFCN_H 1

/* Define one (and only one) of the following for the format of a `double'.
   If your format is not among these choices, or you don't know what it is,
   then leave all of them undefined.
   "IEEE_LITTLE_SWAPPED" means little endian, but with the two 4-byte halves
   swapped, as used by ARM CPUs in little endian mode.  */
#cmakedefine HAVE_DOUBLE_IEEE_BIG_ENDIAN
#cmakedefine HAVE_DOUBLE_IEEE_LITTLE_ENDIAN 1
#cmakedefine HAVE_DOUBLE_IEEE_LITTLE_SWAPPED
#cmakedefine HAVE_DOUBLE_VAX_D
#cmakedefine HAVE_DOUBLE_VAX_G
#cmakedefine HAVE_DOUBLE_CRAY_CFP

/* Define if you have the <fcntl.h> header file. */
#cmakedefine HAVE_FCNTL_H 1

/* Define if you have the <fpu_control.h> header file. */
#cmakedefine HAVE_FPU_CONTROL_H 1

/* Define if you have the `getpagesize' function. */
#cmakedefine HAVE_GETPAGESIZE 1

/* Define if you have the `getrusage' function. */
#cmakedefine HAVE_GETRUSAGE 1

/* Define if you have the `gettimeofday' function. */
#cmakedefine HAVE_GETTIMEOFDAY 1

/* Define if 0/0, 1/0, -1/0 and sqrt(-1) work to generate NaN/infinities. */
#cmakedefine HAVE_INFS

/* Define if the system has the type `intmax_t'. */
#cmakedefine HAVE_INTMAX_T 1

/* Define if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H 1

/* Define one (just one) of the following for the endiannes of `mp_limb_t'.
   If the endianness is not a simple big or little, or you don't know what
   it is, then leave both of these undefined. */
#cmakedefine HAVE_LIMB_BIG_ENDIAN 1
#cmakedefine HAVE_LIMB_LITTLE_ENDIAN 1

/* Define if you have the `localeconv' function. */
#cmakedefine HAVE_LOCALECONV 1

/* Define if you have the <locale.h> header file. */
#cmakedefine HAVE_LOCALE_H 1

/* Define if the system has the type `long double'. */
#cmakedefine HAVE_LONG_DOUBLE 1

/* Define if the system has the type `long long'. */
#cmakedefine HAVE_LONG_LONG 1

/* Define if you have the `lrand48' function. */
#cmakedefine HAVE_LRAND48 1

/* Define if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H 1

/* Define if you have the `memset' function. */
#cmakedefine HAVE_MEMSET 1

/* Define if you have the `mmap' function. */
#cmakedefine HAVE_MMAP 1

/* Define if you have the `mprotect' function. */
#cmakedefine HAVE_MPROTECT 1

/* Define if you have the `obstack_vprintf' function. */
#cmakedefine HAVE_OBSTACK_VPRINTF 1

/* Define if you have the `popen' function. */
#cmakedefine HAVE_POPEN 1

/* Define if you have the `processor_info' function. */
#cmakedefine HAVE_PROCESSOR_INFO 1

/* Define if the system has the type `ptrdiff_t'. */
#cmakedefine HAVE_PTRDIFF_T 1

/* Define if the system has the type `quad_t'. */
#cmakedefine HAVE_QUAD_T 1

/* Define if you have the `read_real_time' function. */
#cmakedefine HAVE_READ_REAL_TIME 1

/* Define if you have the `sigaction' function. */
#cmakedefine HAVE_SIGACTION 1

/* Define if you have the `sigaltstack' function. */
#cmakedefine HAVE_SIGALTSTACK 1

/* Define if you have the `sigstack' function. */
#cmakedefine HAVE_SIGSTACK 1

/* Tune directory speed_cyclecounter, undef=none, 1=32bits, 2=64bits) */
#cmakedefine HAVE_SPEED_CYCLECOUNTER 2

/* Define if the system has the type `stack_t'. */
#cmakedefine HAVE_STACK_T 1

/* Define if <stdarg.h> exists and works */
#cmakedefine HAVE_STDARG 1

/* Define if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H 1

/* Define if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H 1

/* Define if you have the `strcasecmp' function. */
#cmakedefine HAVE_STRCASECMP 1

/* Define if you have the `strchr' function. */
#cmakedefine HAVE_STRCHR 1

/* Define if cpp supports the ANSI # stringizing operator. */
#cmakedefine HAVE_STRINGIZE 1

/* Define if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H 1

/* Define if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H 1

/* Define if you have the `strnlen' function. */
#cmakedefine HAVE_STRNLEN 1

/* Define if you have the `strtoul' function. */
#cmakedefine HAVE_STRTOUL 1

/* Define if you have the `sysconf' function. */
#cmakedefine HAVE_SYSCONF 1

/* Define if you have the `sysctl' function. */
#cmakedefine HAVE_SYSCTL 1

/* Define if you have the `sysctlbyname' function. */
#cmakedefine HAVE_SYSCTLBYNAME 1

/* Define if you have the `syssgi' function. */
#cmakedefine HAVE_SYSSGI 1

/* Define if you have the <sys/mman.h> header file. */
#cmakedefine HAVE_SYS_MMAN_H 1

/* Define if you have the <sys/param.h> header file. */
#cmakedefine HAVE_SYS_PARAM_H 1

/* Define if you have the <sys/processor.h> header file. */
#cmakedefine HAVE_SYS_PROCESSOR_H 1

/* Define if you have the <sys/resource.h> header file. */
#cmakedefine HAVE_SYS_RESOURCE_H 1

/* Define if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H 1

/* Define if you have the <sys/sysctl.h> header file. */
#cmakedefine HAVE_SYS_SYSCTL_H 1

/* Define if you have the <sys/syssgi.h> header file. */
#cmakedefine HAVE_SYS_SYSSGI_H 1

/* Define if you have the <sys/systemcfg.h> header file. */
#cmakedefine HAVE_SYS_SYSTEMCFG_H 1

/* Define if you have the <sys/times.h> header file. */
#cmakedefine HAVE_SYS_TIMES_H 1

/* Define if you have the <sys/time.h> header file. */
#cmakedefine HAVE_SYS_TIME_H 1

/* Define if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H 1

/* Define if you have the `times' function. */
#cmakedefine HAVE_TIMES 1

/* Define if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H 1

/* Define if you have vsnprintf and it works properly. */
#cmakedefine HAVE_VSNPRINTF 1

/* Assembler local label prefix */
#cmakedefine LSYM_PREFIX "L"

/* Define if you have the `fesetround' function via the <fenv.h> header file.
   */
#cmakedefine MPFR_HAVE_FESETROUND

/* Name of package */
#define PACKAGE "gmp"

/* Define if compiler has function prototypes */
#cmakedefine PROTOTYPES 1

/* Define as the return type of signal handlers (`int' or `void'). */
#cmakedefine RETSIGTYPE void

/* The size of a `mp_limb_t', as computed by sizeof. */
#cmakedefine SIZEOF_MP_LIMB_T

/* The size of a `unsigned long', as computed by sizeof. */
#cmakedefine SIZEOF_UNSIGNED_LONG

/* Define if sscanf requires writable inputs */
#cmakedefine SSCANF_WRITABLE_INPUT

/* Define if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS 1

/* Define if you can safely include both <sys/time.h> and <time.h>. */
#cmakedefine TIME_WITH_SYS_TIME 1

/* Maximum size the tune program can test for SQR_KARATSUBA_THRESHOLD */
#cmakedefine TUNE_SQR_KARATSUBA_MAX 67

/* Version number of package */
#define VERSION "4.1"

/* ./configure --enable-assert option, to enable some ASSERT()s */
#cmakedefine WANT_ASSERT

/* ./configure --enable-fft option, to enable FFTs for multiplication */
#cmakedefine WANT_FFT 1

/* --enable-alloca=yes */
#cmakedefine WANT_TMP_ALLOCA 1

/* --enable-alloca=debug */
#cmakedefine WANT_TMP_DEBUG 1

/* --enable-alloca=malloc-notreentrant */
#cmakedefine WANT_TMP_NOTREENTRANT 1

/* --enable-alloca=malloc-reentrant */
#cmakedefine WANT_TMP_REENTRANT 1

/* Define if your processor stores words with the most significant byte first
   (like Motorola and SPARC, unlike Intel and VAX). */
#cmakedefine WORDS_BIGENDIAN

/* Define if `lex' declares `yytext' as a `char *' by default, not a `char[]'.
   */
#cmakedefine YYTEXT_POINTER

/* Define as `__inline' if that's what the C compiler calls it, or to nothing
   if it is not supported. */
#cmakedefine inline __inline

/* Define as `__restrict' if that's what the C compiler calls it, or to
   nothing if it is not supported. */
#cmakedefine restrict __restrict
