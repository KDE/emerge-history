diff -Nru libical-0.44.orig/CMakeLists.txt libical-0.44/CMakeLists.txt
--- libical-0.44.orig/CMakeLists.txt	Sun Sep 27 02:38:55 2009
+++ libical-0.44/CMakeLists.txt	Mon Jul  5 14:56:11 2010
@@ -27,6 +27,15 @@
 #cannot use the following line with cmake 2.4.x
 #cmake_policy(VERSION 2.6)
 
+set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules)
+
+if(WINCE)
+    find_package(Wcecompat REQUIRED)
+    include_directories(${WCECOMPAT_INCLUDE_DIR})
+    set(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES} ${WCECOMPAT_INCLUDE_DIR})
+    set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
+
 set(LIBICAL_LIB_MAJOR_VERSION "0")
 set(LIBICAL_LIB_MINOR_VERSION "44")
 set(LIBICAL_LIB_PATCH_VERSION "0")
@@ -41,7 +50,7 @@
 # make msvc less verbose
 if(WIN32)
   if(MSVC)
-    add_definitions(-D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE)
+    add_definitions(-D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DYY_NO_UNISTD_H)
   endif(MSVC)
   add_definitions(-DBIG_ENDIAN=0 -DLITTLE_ENDIAN=1 -DBYTE_ORDER=BIG_ENDIAN)
 endif(WIN32)
diff -Nru libical-0.44.orig/cmake/modules/FindWcecompat.cmake libical-0.44/cmake/modules/FindWcecompat.cmake
--- libical-0.44.orig/cmake/modules/FindWcecompat.cmake	Thu Jan  1 00:00:00 1970
+++ libical-0.44/cmake/modules/FindWcecompat.cmake	Wed May 12 13:23:08 2010
@@ -0,0 +1,33 @@
+# Try to find Wcecompat functionality
+# Once done this will define
+#
+#  WCECOMPAT_FOUND - system has Wcecompat
+#  WCECOMPAT_INCLUDE_DIR - Wcecompat include directory
+#  WCECOMPAT_LIBRARIES - Libraries needed to use Wcecompat
+#
+# Copyright (c) 2010, Andreas Holzammer, <andy@kdab.com>
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+
+if(WCECOMPAT_INCLUDE_DIR AND WCECOMPAT_LIB_FOUND)
+  set(Wcecompat_FIND_QUIETLY TRUE)
+endif(WCECOMPAT_INCLUDE_DIR AND WCECOMPAT_LIB_FOUND)
+
+find_path(WCECOMPAT_INCLUDE_DIR errno.h PATH_SUFFIXES wcecompat)
+
+set(WCECOMPAT_LIB_FOUND FALSE)
+
+if(WCECOMPAT_INCLUDE_DIR)
+    find_library(WCECOMPAT_LIBRARIES NAMES wcecompat wcecompatex )
+    if(WCECOMPAT_LIBRARIES)
+      set(WCECOMPAT_LIB_FOUND TRUE)
+    endif(WCECOMPAT_LIBRARIES)
+endif(WCECOMPAT_INCLUDE_DIR)
+
+# I have no idea what this is about, but it seems to be used quite often, so I add this here
+set(WCECOMPAT_CONST const)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(Wcecompat  DEFAULT_MSG  WCECOMPAT_LIBRARIES  WCECOMPAT_LIB_FOUND)
+
+mark_as_advanced(WCECOMPAT_INCLUDE_DIR  WCECOMPAT_LIBRARIES  WCECOMPAT_CONST  WCECOMPAT_LIB_FOUND)
diff -Nru libical-0.44.orig/src/ical.def libical-0.44/src/ical.def
--- libical-0.44.orig/src/ical.def	Sun Sep 27 02:38:53 2009
+++ libical-0.44/src/ical.def	Mon Jul  5 14:56:59 2010
@@ -1,4 +1,4 @@
-LIBRARY ical.dll
+LIBRARY libical.dll
 EXPORTS
 caldat
 compare_map DATA
diff -Nru libical-0.44.orig/src/ical.h libical-0.44/src/ical.h
--- libical-0.44.orig/src/ical.h	Sun Sep 27 02:38:53 2009
+++ libical-0.44/src/ical.h	Mon Jul  5 14:57:08 2010
@@ -18,6 +18,9 @@
     the License at http://www.mozilla.org/MPL/
 
  ************************************************************************/
-
+#ifdef _MSC_VER
+#pragma message("WARNING: #include <ical.h> is deprecated.  Please #include <libical/ical.h> instead.")
+#else
 #warning "#include <ical.h> is deprecated.  Please #include <libical/ical.h> instead."
+#endif
 #include <libical/ical.h>
diff -Nru libical-0.44.orig/src/icalss.def libical-0.44/src/icalss.def
--- libical-0.44.orig/src/icalss.def	Sun Sep 27 02:38:53 2009
+++ libical-0.44/src/icalss.def	Mon Jul  5 14:57:18 2010
@@ -1,4 +1,4 @@
-LIBRARY icalss.dll
+LIBRARY libicalss.dll
 EXPORTS
 icalcalendar_create
 icalcalendar_free
@@ -179,8 +179,6 @@
 ss_create_buffer
 ss_delete_buffer
 ss_flush_buffer
-ss_init_buffer
-ss_load_buffer_state
 ss_scan_buffer
 ss_scan_bytes
 ss_scan_string
@@ -379,8 +377,6 @@
 ss_create_buffer
 ss_delete_buffer
 ss_flush_buffer
-ss_init_buffer
-ss_load_buffer_state
 ss_scan_buffer
 ss_scan_bytes
 ss_scan_string
@@ -579,8 +575,6 @@
 ss_create_buffer
 ss_delete_buffer
 ss_flush_buffer
-ss_init_buffer
-ss_load_buffer_state
 ss_scan_buffer
 ss_scan_bytes
 ss_scan_string
@@ -779,8 +773,6 @@
 ss_create_buffer
 ss_delete_buffer
 ss_flush_buffer
-ss_init_buffer
-ss_load_buffer_state
 ss_scan_buffer
 ss_scan_bytes
 ss_scan_string
diff -Nru libical-0.44.orig/src/icalvcal.def libical-0.44/src/icalvcal.def
--- libical-0.44.orig/src/icalvcal.def	Sun Sep 27 02:38:53 2009
+++ libical-0.44/src/icalvcal.def	Mon Jul  5 14:57:26 2010
@@ -1,4 +1,4 @@
-LIBRARY icalvcal.dll
+LIBRARY libicalvcal.dll
 EXPORTS
 Parse_MIME
 Parse_MIME_FromFile
diff -Nru libical-0.44.orig/src/libical/CMakeLists.txt libical-0.44/src/libical/CMakeLists.txt
--- libical-0.44.orig/src/libical/CMakeLists.txt	Sun Sep 27 02:38:51 2009
+++ libical-0.44/src/libical/CMakeLists.txt	Mon Jul  5 14:58:38 2010
@@ -7,6 +7,13 @@
   ${CMAKE_BINARY_DIR}/src/libical
 )
 
+if(WIN32)
+  if(MSVC)
+    add_definitions(-DBUILD_LIBICALDLL)
+  endif(MSVC)
+endif(WIN32)
+
+
 set(PACKAGE_DATA_DIR "\\\"${CMAKE_INSTALL_PREFIX}/share/libical\\\"")
 add_definitions(-DPACKAGE_DATA_DIR=${PACKAGE_DATA_DIR})
 
@@ -232,9 +239,18 @@
 
 target_link_libraries(ical ${CMAKE_THREAD_LIBS_INIT})
 
+if (WINCE)
+target_link_libraries(ical ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
+
+if(MSVC)
+  set_target_properties(ical PROPERTIES OUTPUT_NAME "libical")
+  set_target_properties(ical-static PROPERTIES OUTPUT_NAME "libical-static")
+else(MSVC)
+  set_target_properties(ical-static PROPERTIES OUTPUT_NAME "ical")
+endif(MSVC)
 set_target_properties(ical PROPERTIES VERSION ${LIBICAL_LIB_VERSION_STRING} SOVERSION ${LIBICAL_LIB_MAJOR_VERSION})
 set_target_properties(ical PROPERTIES CLEAN_DIRECT_OUTPUT 1)
-set_target_properties(ical-static PROPERTIES OUTPUT_NAME "ical")
 set_target_properties(ical-static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
 
 install(TARGETS ical ical-static ${INSTALL_TARGETS_DEFAULT_ARGS})
diff -Nru libical-0.44.orig/src/libical/icalerror.h libical-0.44/src/libical/icalerror.h
--- libical-0.44.orig/src/libical/icalerror.h	Sun Sep 27 02:38:51 2009
+++ libical-0.44/src/libical/icalerror.h	Mon Jul  5 15:00:11 2010
@@ -69,7 +69,17 @@
  *  @warning NOT THREAD SAFE -- recommended that you do not change
  *           this in a multithreaded program.
  */
-extern int icalerror_errors_are_fatal;
+#ifdef _MSC_VER
+  #ifdef BUILD_LIBICALDLL
+    #define LIBICAL_EXPORT __declspec(dllexport)
+  #else
+    #define LIBICAL_EXPORT __declspec(dllimport)
+  #endif
+#else
+  #define LIBICAL_EXPORT extern
+#endif
+
+LIBICAL_EXPORT int icalerror_errors_are_fatal;
 
 /* Warning messages */
 
diff -Nru libical-0.44.orig/src/libical/icalperiod.c libical-0.44/src/libical/icalperiod.c
--- libical-0.44.orig/src/libical/icalperiod.c	Sun Sep 27 02:38:51 2009
+++ libical-0.44/src/libical/icalperiod.c	Fri Jul  2 09:55:51 2010
@@ -117,8 +117,8 @@
 char* icalperiodtype_as_ical_string_r(struct icalperiodtype p)
 {
 
-    const char* start;
-    const char* end;
+    char* start;
+    char* end;
 
     char *buf;
     size_t buf_size = 40;
diff -Nru libical-0.44.orig/src/libical/icalrecur.c libical-0.44/src/libical/icalrecur.c
--- libical-0.44.orig/src/libical/icalrecur.c	Sun Sep 27 02:38:51 2009
+++ libical-0.44/src/libical/icalrecur.c	Mon Jul  5 14:58:50 2010
@@ -1593,11 +1593,12 @@
       int day;
       int days_in_month = icaltime_days_in_month(impl->last.month,
                                                    impl->last.year);
-      assert( BYDAYPTR[0]!=ICAL_RECURRENCE_ARRAY_MAX);
-
       int set_pos_counter = 0;
       int set_pos_total = 0;
+      int found = 0;
       
+      assert( BYDAYPTR[0]!=ICAL_RECURRENCE_ARRAY_MAX);
+
       /* Count the past positions for the BYSETPOS calculation */
       if(has_by_data(impl,BY_SET_POS)){
           int last_day = impl->last.day;
@@ -1612,8 +1613,6 @@
 	  }
           impl->last.day = last_day;
       }
-
-      int found = 0;
       
       for(day = impl->last.day+1; day <= days_in_month; day++){
           impl->last.day = day;
@@ -1927,8 +1926,8 @@
     /* BY_WEEK_NO together with BY_MONTH - may conflict, in this case BY_MONTH wins */
     if( (flags & 1<<BY_MONTH) && (flags & 1<<BY_WEEK_NO) ){
         int valid_weeks[ICAL_BY_WEEKNO_SIZE];
-        memset(valid_weeks, 0, sizeof(valid_weeks));
         int valid = 1;    
+        memset(valid_weeks, 0, sizeof(valid_weeks));
         t.year = year;
         t.is_date = 1;
 
diff -Nru libical-0.44.orig/src/libical/icaltimezone.c libical-0.44/src/libical/icaltimezone.c
--- libical-0.44.orig/src/libical/icaltimezone.c	Sun Sep 27 02:38:51 2009
+++ libical-0.44/src/libical/icaltimezone.c	Mon Jul  5 14:58:57 2010
@@ -45,7 +45,9 @@
 #include <sys/stat.h>
 
 #ifdef WIN32
+#ifndef _WIN32_WCE
 #include <mbstring.h>
+#endif
 #include <windows.h>
 /* Undef the similar macro from pthread.h, it doesn't check if
  * gmtime() returns NULL.
@@ -54,6 +56,12 @@
 
 /* The gmtime() in Microsoft's C library is MT-safe */
 #define gmtime_r(tp,tmp) (gmtime(tp)?(*(tmp)=*gmtime(tp),(tmp)):0)
+
+// MSVC lacks the POSIX macro S_ISDIR, however it's a trivial one:
+#ifndef S_ISDIR
+#define S_ISDIR(m) (((m) & _S_IFMT) == _S_IFDIR)
+#endif
+
 #endif
 
 /** This is the toplevel directory where the timezone data is installed in. */
@@ -1947,10 +1955,18 @@
 	return zone_files_directory == NULL ? ZONEINFO_DIRECTORY : zone_files_directory;
 #else
 	wchar_t wbuffer[1000];
+#ifndef _WIN32_WCE
 	char buffer[1000], zoneinfodir[1000], dirname[1000];
+#else
+    wchar_t zoneinfodir[1000], dirname[1000];
+#endif
 	int used_default;
 	static char *cache = NULL;
+#ifndef _WIN32_WCE
 	char *dirslash, *zislash;
+#else
+    wchar_t *dirslash, *zislash;
+#endif
 	struct stat st;
 
 	if (zone_files_directory)
@@ -1963,6 +1979,8 @@
 	if (!GetModuleFileNameW (NULL, wbuffer, sizeof (wbuffer) / sizeof (wbuffer[0])))
 	    return ZONEINFO_DIRECTORY;
 
+/*wince supports only unicode*/
+#ifndef _WIN32_WCE
 	/* Convert to system codepage */
 	if (!WideCharToMultiByte (CP_ACP, 0, wbuffer, -1, buffer, sizeof (buffer),
 				  NULL, &used_default) ||
@@ -1975,6 +1993,7 @@
 		used_default)
 		return ZONEINFO_DIRECTORY;
 	}
+#endif
 	/* Look for the zoneinfo directory somewhere in the path where
 	 * the app is installed. If the path to the app is
 	 *
@@ -2010,10 +2029,38 @@
 	 */
 
 	/* Strip away basename of app .exe first */
+#ifndef _WIN32_WCE
 	dirslash = _mbsrchr (buffer, '\\');
+#else
+    dirslash = wcsrchr (wbuffer, L'\\');
+#endif
 	if (dirslash)
+#ifndef _WIN32_WCE
 	    *dirslash = '\0';
+#else
+	    *dirslash = L'\0';
+#endif
 
+#ifdef _WIN32_WCE
+	while ((dirslash = wcsrchr (wbuffer, '\\'))) {
+	    /* Strip one more directory from app .exe location */
+	    *dirslash = L'\0';
+	    
+        MultiByteToWideChar(CP_ACP,0,ZONEINFO_DIRECTORY,-1,zoneinfodir,1000);
+        
+	    while ((zislash = wcschr (zoneinfodir, L'/'))) {
+		*zislash = L'.';
+		wcscpy (dirname, wbuffer);
+		wcscat (dirname, "/");
+		wcscat (dirname, zislash + 1);
+		if (stat (dirname, &st) == 0 &&
+		    S_ISDIR (st.st_mode)) {
+		    cache = wce_wctomb (dirname);
+		    return cache;
+		}
+	    }
+	}
+#else
 	while ((dirslash = _mbsrchr (buffer, '\\'))) {
 	    /* Strip one more directory from app .exe location */
 	    *dirslash = '\0';
@@ -2031,6 +2078,7 @@
 		}
 	    }
 	}
+#endif
 	return ZONEINFO_DIRECTORY;
 #endif
 }
diff -Nru libical-0.44.orig/src/libical/icaltz-util.c libical-0.44/src/libical/icaltz-util.c
--- libical-0.44.orig/src/libical/icaltz-util.c	Sun Sep 27 02:38:51 2009
+++ libical-0.44/src/libical/icaltz-util.c	Mon Jul  5 14:59:03 2010
@@ -297,12 +297,16 @@
 	icalproperty *icalprop;
 	icaltimetype dtstart, icaltime;
 	struct icalrecurrencetype ical_recur;
+	const char* basedir;
 	       
-	if (!zdir) 
-		set_zone_directory ();
+	basedir = icaltzutil_get_zone_directory();
+	if (!basedir) {
+		icalerror_set_errno (ICAL_FILE_ERROR);
+		return NULL;
+	}
 	
-	full_path = (char *) malloc (strlen (zdir) + strlen (location) + 2);
-	sprintf (full_path,"%s/%s",zdir, location);
+	full_path = (char *) malloc (strlen (basedir) + strlen (location) + 2);
+	sprintf (full_path,"%s/%s",basedir, location);
 
 	if ((f = fopen (full_path, "rb")) == 0) {
 		icalerror_set_errno (ICAL_FILE_ERROR);
diff -Nru libical-0.44.orig/src/libical/icalvalue.c libical-0.44/src/libical/icalvalue.c
--- libical-0.44.orig/src/libical/icalvalue.c	Sun Sep 27 02:38:51 2009
+++ libical-0.44/src/libical/icalvalue.c	Fri Jul  2 12:29:41 2010
@@ -307,7 +307,9 @@
 #define TMP_NUM_SIZE 100
     char *start=NULL, *end=NULL, *cur=(char*)from ;
     char tmp_buf[TMP_NUM_SIZE+1] ; /*hack*/
+#ifndef _WIN32_WCE
     struct lconv *loc_data = localeconv () ;
+#endif
     int i=0 ;
 
     /*sanity checks*/
@@ -344,6 +346,7 @@
      * care to have the (optional) decimal separator be the one
      * of the current locale.
      */
+#ifndef _WIN32_WCE
     for (i=0 ; i < end - from ;++i) {
         if (start[i] == '.'
             && loc_data
@@ -356,6 +359,9 @@
             tmp_buf[i] = start[i] ;
         }
     }
+#else
+    GetNumberFormat(LOCALE_SYSTEM_DEFAULT,0,start, NULL, tmp_buf,TMP_NUM_SIZE);
+#endif
     if (to)
         *to = end ;
     *result = atof(tmp_buf) ;
diff -Nru libical-0.44.orig/src/libicalss/CMakeLists.txt libical-0.44/src/libicalss/CMakeLists.txt
--- libical-0.44.orig/src/libicalss/CMakeLists.txt	Sun Sep 27 02:38:52 2009
+++ libical-0.44/src/libicalss/CMakeLists.txt	Mon Jul  5 14:59:18 2010
@@ -76,9 +76,14 @@
 
 target_link_libraries(icalss ical)
 
+if(MSVC)
+  set_target_properties(icalss PROPERTIES OUTPUT_NAME "libicalss")
+  set_target_properties(icalss-static PROPERTIES OUTPUT_NAME "libicalss-static")
+else(MSVC)
+  set_target_properties(icalss-static PROPERTIES OUTPUT_NAME "icalss")
+endif(MSVC)
 set_target_properties(icalss PROPERTIES VERSION ${LIBICAL_LIB_VERSION_STRING} SOVERSION ${LIBICAL_LIB_MAJOR_VERSION})
 set_target_properties(icalss PROPERTIES CLEAN_DIRECT_OUTPUT 1)
-set_target_properties(icalss-static PROPERTIES OUTPUT_NAME "icalss")
 set_target_properties(icalss-static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
 
 install(TARGETS icalss icalss-static ${INSTALL_TARGETS_DEFAULT_ARGS})
diff -Nru libical-0.44.orig/src/libicalss/icalfileset.c libical-0.44/src/libicalss/icalfileset.c
--- libical-0.44.orig/src/libicalss/icalfileset.c	Sun Sep 27 02:38:52 2009
+++ libical-0.44/src/libicalss/icalfileset.c	Mon Jul  5 14:12:36 2010
@@ -38,8 +38,10 @@
 #include <unistd.h> /* for stat, getpid */
 #else
 #include <io.h>
+#ifndef _WIN32_WCE
 #include <share.h>
 #endif
+#endif
 #include <stdlib.h>
 #include <string.h>
 #include <fcntl.h> /* for fcntl */
@@ -56,6 +58,10 @@
 #define S_ISREG(mode)    _S_ISTYPE((mode), _S_IFREG)
 #endif
 
+#ifdef _WIN32_WCE
+#include <winbase.h>
+#endif
+
 /** Default options used when NULL is passed to icalset_new() **/
 icalfileset_options icalfileset_options_default = {O_RDWR|O_CREAT, 0644, 0};
 
@@ -366,6 +372,10 @@
     icalcomponent *c;
     off_t write_size=0;
     icalfileset *fset = (icalfileset*) set;
+#ifdef _WIN32_WCE
+    wchar_t *wtmp=0;
+    PROCESS_INFORMATION pi;
+#endif
 
     icalerror_check_arg_re((fset!=0),"set",ICAL_BADARG_ERROR);  
     
@@ -378,18 +388,28 @@
     
     if (fset->options.safe_saves == 1) {
 #ifndef WIN32
-	char *quoted_file = shell_quote(fset->path);
-	snprintf(tmp,ICAL_PATH_MAX,"cp '%s' '%s.bak'",fset->path, fset->path);
-	free(quoted_file);
+        char *quoted_file = shell_quote(fset->path);
+        snprintf(tmp,ICAL_PATH_MAX,"cp '%s' '%s.bak'",fset->path, fset->path);
+        free(quoted_file);
 #else
-	snprintf(tmp,ICAL_PATH_MAX,"copy %s %s.bak", fset->path, fset->path);
+        snprintf(tmp,ICAL_PATH_MAX,"copy %s %s.bak", fset->path, fset->path);
 #endif
 
-	if(system(tmp) < 0){
-	    icalerror_set_errno(ICAL_FILE_ERROR);
-	    return ICAL_FILE_ERROR;
-	}
+#ifndef _WIN32_WCE
+        if(system(tmp) < 0){
+#else
+
+        wtmp = wce_mbtowc(tmp);
+
+        if (CreateProcess (wtmp, L"", NULL, NULL, FALSE, 0, NULL, NULL, NULL,&pi)){
+#endif
+            icalerror_set_errno(ICAL_FILE_ERROR);
+            return ICAL_FILE_ERROR;
+        }
     }
+#ifdef _WIN32_WCE
+    free(wtmp);
+#endif
 
     if(lseek(fset->fd, 0, SEEK_SET) < 0){
 	icalerror_set_errno(ICAL_FILE_ERROR);
@@ -422,7 +442,11 @@
 	return ICAL_FILE_ERROR;
     }
 #else
+#ifndef _WIN32_WCE
 	chsize( fset->fd, tell( fset->fd ) );
+#else
+    SetEndOfFile(fset->fd);
+#endif
 #endif
     
     return ICAL_NO_ERROR;
diff -Nru libical-0.44.orig/src/libicalss/icalsslexer.c libical-0.44/src/libicalss/icalsslexer.c
--- libical-0.44.orig/src/libicalss/icalsslexer.c	Sun Sep 27 02:38:52 2009
+++ libical-0.44/src/libicalss/icalsslexer.c	Mon Jul  5 14:36:39 2010
@@ -39,6 +39,10 @@
 #include <errno.h>
 #include <stdlib.h>
 
+#ifdef _WIN32_WCE
+#include <io.h>
+#endif
+
 /* end standard C headers. */
 
 /* flex integer type definitions */
diff -Nru libical-0.44.orig/src/libicalvcal/CMakeLists.txt libical-0.44/src/libicalvcal/CMakeLists.txt
--- libical-0.44.orig/src/libicalvcal/CMakeLists.txt	Sun Sep 27 02:38:52 2009
+++ libical-0.44/src/libicalvcal/CMakeLists.txt	Mon Jul  5 14:59:28 2010
@@ -32,9 +32,14 @@
 
 target_link_libraries(icalvcal ical)
 
+if(MSVC)
+  set_target_properties(icalvcal PROPERTIES OUTPUT_NAME "libicalvcal")
+  set_target_properties(icalvcal-static PROPERTIES OUTPUT_NAME "libicalvcal-static")
+else(MSVC)
+  set_target_properties(icalvcal-static PROPERTIES OUTPUT_NAME "icalvcal")
+endif(MSVC)
 set_target_properties(icalvcal PROPERTIES VERSION ${LIBICAL_LIB_VERSION_STRING} SOVERSION ${LIBICAL_LIB_MAJOR_VERSION})
 set_target_properties(icalvcal PROPERTIES CLEAN_DIRECT_OUTPUT 1)
-set_target_properties(icalvcal-static PROPERTIES OUTPUT_NAME "icalvcal")
 set_target_properties(icalvcal-static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
 
 install(TARGETS icalvcal icalvcal-static ${INSTALL_TARGETS_DEFAULT_ARGS})
diff -Nru libical-0.44.orig/src/libicalvcal/icalvcal.c libical-0.44/src/libicalvcal/icalvcal.c
--- libical-0.44.orig/src/libicalvcal/icalvcal.c	Sun Sep 27 02:38:52 2009
+++ libical-0.44/src/libicalvcal/icalvcal.c	Mon Jul  5 14:39:40 2010
@@ -51,6 +51,10 @@
 #define strcasecmp	stricmp
 #endif
 
+#ifdef _WIN32_WCE
+#undef IGNORE
+#endif
+
 enum datatype {
     COMPONENT,
     PROPERTY,
