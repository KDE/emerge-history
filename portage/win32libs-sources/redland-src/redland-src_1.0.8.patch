diff -Nru redland-1.0.8.orig/cmake/config.cpp.in redland-1.0.8/cmake/config.cpp.in
--- redland-1.0.8.orig/cmake/config.cpp.in	1970-01-01 01:00:00.000000000 +0100
+++ redland-1.0.8/cmake/config.cpp.in	2009-09-23 23:40:49.729000000 +0200
@@ -0,0 +1,26 @@
+#include <stdio.h>
+#include <string.h>
+#include <@PROGRAMM@.h>
+
+int main(int argc, char **argv)
+{
+    if(argc != 2)
+        return 1;
+    if(strcmp(argv[1], "--version") == 0) {
+        fprintf(stdout, "%s", @PROGRAMM@_version_string);
+        return 0;
+    }
+    if(strcmp(argv[1], "--version-decimal") == 0) {
+        fprintf(stdout, "%d", @PROGRAMM@_version_decimal);
+        return 0;
+    }
+    if(strcmp(argv[1], "--cflags") == 0) {
+        fprintf(stdout, "\n");
+        return 0;
+    }
+    if(strcmp(argv[1], "--libs") == 0) {
+        fprintf(stdout, "\n");
+        return 0;
+    }
+    return 1;
+}
diff -Nru redland-1.0.8.orig/cmake/FindPCRE.cmake redland-1.0.8/cmake/FindPCRE.cmake
--- redland-1.0.8.orig/cmake/FindPCRE.cmake	1970-01-01 01:00:00.000000000 +0100
+++ redland-1.0.8/cmake/FindPCRE.cmake	2009-09-23 23:40:49.738000000 +0200
@@ -0,0 +1,44 @@
+# - Try to find the PCRE regular expression library
+# Once done this will define
+#
+#  PCRE_FOUND - system has the PCRE library
+#  PCRE_INCLUDE_DIR - the PCRE include directory
+#  PCRE_LIBRARIES - The libraries needed to use PCRE
+
+# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+
+
+if (PCRE_INCLUDE_DIR AND PCRE_PCREPOSIX_LIBRARY AND PCRE_PCRE_LIBRARY)
+  # Already in cache, be silent
+  set(PCRE_FIND_QUIETLY TRUE)
+endif (PCRE_INCLUDE_DIR AND PCRE_PCREPOSIX_LIBRARY AND PCRE_PCRE_LIBRARY)
+
+
+if (NOT WIN32)
+  # use pkg-config to get the directories and then use these values
+  # in the FIND_PATH() and FIND_LIBRARY() calls
+  find_package(PkgConfig)
+
+  pkg_check_modules(PC_PCRE libpcre)
+
+  set(PCRE_DEFINITIONS ${PC_PCRE_CFLAGS_OTHER})
+
+endif (NOT WIN32)
+
+find_path(PCRE_INCLUDE_DIR pcre.h
+          HINTS ${PC_PCRE_INCLUDEDIR} ${PC_PCRE_INCLUDE_DIRS}
+          PATH_SUFFIXES pcre)
+
+find_library(PCRE_PCRE_LIBRARY NAMES pcre HINTS ${PC_PCRE_LIBDIR} ${PC_PCRE_LIBRARY_DIRS})
+
+find_library(PCRE_PCREPOSIX_LIBRARY NAMES pcreposix HINTS ${PC_PCRE_LIBDIR} ${PC_PCRE_LIBRARY_DIRS})
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(PCRE DEFAULT_MSG PCRE_INCLUDE_DIR PCRE_PCRE_LIBRARY PCRE_PCREPOSIX_LIBRARY )
+
+set(PCRE_LIBRARIES ${PCRE_PCRE_LIBRARY} ${PCRE_PCREPOSIX_LIBRARY})
+
+mark_as_advanced(PCRE_INCLUDE_DIR PCRE_LIBRARIES PCRE_PCREPOSIX_LIBRARY PCRE_PCRE_LIBRARY)
diff -Nru redland-1.0.8.orig/cmake/FindSQLite3.cmake redland-1.0.8/cmake/FindSQLite3.cmake
--- redland-1.0.8.orig/cmake/FindSQLite3.cmake	1970-01-01 01:00:00.000000000 +0100
+++ redland-1.0.8/cmake/FindSQLite3.cmake	2009-09-23 23:40:49.741000000 +0200
@@ -0,0 +1,19 @@
+# - Try to find the SQLite3 library
+# Once done this will define
+#
+#  SQLITE3_FOUND - system has the SQLite3 library
+#  SQLITE3_INCLUDE_DIR - the SQLite3 include directory
+#  SQLITE3_LIBRARIES - The libraries needed to use SQLite3
+
+if (SQLITE3_INCLUDE_DIR AND SQLITE3_LIBRARIES)
+  # Already in cache, be silent
+  set(SQLITE3_FIND_QUIETLY TRUE)
+endif (SQLITE3_INCLUDE_DIR AND SQLITE3_LIBRARIES)
+
+find_path(SQLITE3_INCLUDE_DIR sqlite3.h)
+find_library(SQLITE3_LIBRARIES NAMES sqlite3)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(SQLite3 DEFAULT_MSG SQLITE3_INCLUDE_DIR SQLITE3_LIBRARIES)
+
+mark_as_advanced(SQLITE3_INCLUDE_DIR SQLITE3_LIBRARIES)
diff -Nru redland-1.0.8.orig/CMakeLists.txt redland-1.0.8/CMakeLists.txt
--- redland-1.0.8.orig/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ redland-1.0.8/CMakeLists.txt	2009-09-23 23:40:49.745000000 +0200
@@ -0,0 +1,11 @@
+project(redland)
+cmake_minimum_required(VERSION 2.6.2)
+set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
+
+if(MSVC)
+  add_definitions(-D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE)
+endif(MSVC)
+
+add_subdirectory(librdf)
+add_subdirectory(raptor)
+add_subdirectory(rasqal)
diff -Nru redland-1.0.8.orig/librdf/CMakeLists.txt redland-1.0.8/librdf/CMakeLists.txt
--- redland-1.0.8.orig/librdf/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ redland-1.0.8/librdf/CMakeLists.txt	2009-09-23 23:40:49.748000000 +0200
@@ -0,0 +1,120 @@
+project(librdf)
+
+find_package(SQLite3 REQUIRED)
+find_package(OpenSSL REQUIRED)
+include_directories(${SQLITE3_INCLUDE_DIR})
+include_directories(${OPENSSL_INCLUDE_DIR})
+
+set(librdf_SRCS
+    rdf_avltree.c
+    rdf_concepts.c
+    rdf_digest.c
+    rdf_digest_md5.c
+    rdf_digest_openssl.c
+    rdf_digest_sha1.c
+    rdf_files.c
+    rdf_hash.c
+# Berkley DB backend
+#    rdf_hash_bdb.c
+    rdf_hash_cursor.c
+    rdf_hash_memory.c
+    rdf_heuristics.c
+    rdf_init.c
+    rdf_iterator.c
+    rdf_list.c
+    rdf_log.c
+    rdf_model.c
+    rdf_model_storage.c
+    rdf_node.c
+    rdf_parser.c
+    rdf_parser_raptor.c
+    rdf_query.c
+    rdf_query_rasqal.c
+    rdf_query_results.c
+    rdf_query_triples.c
+    rdf_serializer.c
+    rdf_serializer_raptor.c
+    rdf_statement.c
+    rdf_storage.c
+    rdf_storage_file.c
+    rdf_storage_hashes.c
+    rdf_storage_list.c
+# MySQL backend
+#    rdf_storage_mysql.c
+# PostgreSQL backend
+#    rdf_storage_postgresql.c
+#    rdf_storage_sql.c
+    rdf_storage_sqlite.c
+#    rdf_storage_sql_test.c
+    rdf_storage_trees.c
+#    rdf_storage_tstore.c
+    rdf_stream.c
+    rdf_uri.c
+    rdf_utf8.c
+)
+
+set(librdf_HDRS
+    rdf_avltree_internal.h
+    rdf_concepts_internal.h
+    rdf_digest_internal.h
+    rdf_files.h
+    rdf_hash_internal.h
+    rdf_heuristics.h
+    rdf_init_internal.h
+    rdf_internal.h
+    rdf_iterator.h
+    rdf_iterator_internal.h
+    rdf_list.h
+    rdf_list_internal.h
+    rdf_log_internal.h
+    rdf_model_internal.h
+    rdf_node_internal.h
+    rdf_parser_internal.h
+    rdf_query_internal.h
+    rdf_serializer_internal.h
+    rdf_statement_internal.h
+    rdf_storage_internal.h
+    rdf_stream_internal.h
+    rdf_types.h
+    rdf_uri_internal.h
+    win32_rdf_config.h
+)
+
+set(librdf_HDRS_INST
+    librdf.h
+    rdf_concepts.h
+    rdf_digest.h
+    rdf_hash.h
+    rdf_init.h
+    rdf_iterator.h
+    rdf_log.h
+    rdf_model.h
+    rdf_node.h
+    rdf_query.h
+    rdf_parser.h
+    rdf_serializer.h
+    rdf_statement.h
+    rdf_storage.h
+    rdf_stream.h
+    rdf_uri.h
+    rdf_utf8.h
+    redland.h
+)
+
+include_directories(${CMAKE_CURRENT_SOURCE_DIR})
+include_directories(${CMAKE_SOURCE_DIR}/raptor/src)
+include_directories(${CMAKE_SOURCE_DIR}/rasqal/src)
+add_library(rdf SHARED ${librdf_SRCS} ${librdf_HDRS} ${librdf_HDRS_INST})
+set_target_properties(rdf PROPERTIES DEFINE_SYMBOL LIBRDF_INTERNAL)
+target_link_libraries(rdf raptor rasqal ${SQLITE3_LIBRARIES})
+if(MSVC)
+  set_target_properties(rdf PROPERTIES OUTPUT_NAME librdf)
+endif(MSVC)
+
+set(PROGRAMM librdf)
+configure_file(${CMAKE_SOURCE_DIR}/cmake/config.cpp.in ${CMAKE_CURRENT_BINARY_DIR}/redland-config.cpp)
+add_executable(redland-config ${CMAKE_CURRENT_BINARY_DIR}/redland-config.cpp)
+target_link_libraries(redland-config rdf)
+
+install(TARGETS rdf redland-config RUNTIME DESTINATION bin ARCHIVE DESTINATION lib)
+install(FILES   ${librdf_HDRS_INST} DESTINATION include/redland)
diff -Nru redland-1.0.8.orig/librdf/win32_rdf_config.h redland-1.0.8/librdf/win32_rdf_config.h
--- redland-1.0.8.orig/librdf/win32_rdf_config.h	2008-07-01 05:10:26.000000000 +0200
+++ redland-1.0.8/librdf/win32_rdf_config.h	2009-09-23 23:42:24.128000000 +0200
@@ -43,7 +43,9 @@
 #define HAVE_STRICMP 1
 
 /* MS names for these functions */
+#ifndef _MSC_VER
 #define vsnprintf _vsnprintf
+#endif
 #define snprintf _snprintf
 #define access _access
 #define stricmp _stricmp
@@ -87,7 +89,7 @@
 #define HAVE_BDB_FD_2_ARGS 1
 
 /* Have BDB hash support */
-#define HAVE_BDB_HASH 1
+//#define HAVE_BDB_HASH 1
 
 /* BDB has open method with 6 args */
 /* #undef HAVE_BDB_OPEN_6_ARGS */
@@ -255,7 +257,7 @@
 #define STORAGE_FILE 1
 
 /* Building MySQL storage */
-#define STORAGE_MYSQL 1
+/*#define STORAGE_MYSQL 1*/
 
 /* Building PostgreSQL storage */
 /*#undef STORAGE_POSTGRESQL*/
diff -Nru redland-1.0.8.orig/raptor/CMakeLists.txt redland-1.0.8/raptor/CMakeLists.txt
--- redland-1.0.8.orig/raptor/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ redland-1.0.8/raptor/CMakeLists.txt	2009-09-23 23:40:49.758000000 +0200
@@ -0,0 +1,100 @@
+project(raptor)
+
+find_package(CURL REQUIRED)
+find_package(LibXml2 REQUIRED)
+find_package(LibXslt REQUIRED)
+
+set(raptor_SRCS
+    src/n3_lexer.c
+    src/n3_parser.c
+    src/ntriples_parse.c
+    src/parsedate.c
+    src/raptor_abbrev.c
+    src/raptor_avltree.c
+#    src/raptor_expat.c
+    src/raptor_feature.c
+    src/raptor_general.c
+    src/raptor_grddl.c
+    src/raptor_guess.c
+    src/raptor_identifier.c
+    src/raptor_iostream.c
+    src/raptor_json_writer.c
+#    src/raptor_librdfa.c
+    src/raptor_libxml.c
+    src/raptor_locator.c
+    src/raptor_namespace.c
+    src/raptor_nfc.c
+    src/raptor_nfc_data.c
+#    src/raptor_nfc_test.c
+    src/raptor_parse.c
+    src/raptor_qname.c
+    src/raptor_rdfxml.c
+    src/raptor_rfc2396.c
+    src/raptor_rss.c
+    src/raptor_rss_common.c
+    src/raptor_sax2.c
+    src/raptor_sequence.c
+    src/raptor_serialize.c
+    src/raptor_serialize_dot.c
+    src/raptor_serialize_json.c
+    src/raptor_serialize_ntriples.c
+    src/raptor_serialize_rdfxml.c
+    src/raptor_serialize_rdfxmla.c
+    src/raptor_serialize_rss.c
+    src/raptor_serialize_simple.c
+    src/raptor_serialize_turtle.c
+    src/raptor_set.c
+    src/raptor_statement.c
+    src/raptor_stringbuffer.c
+    src/raptor_turtle_writer.c
+    src/raptor_uri.c
+    src/raptor_utf8.c
+    src/raptor_win32.c
+    src/raptor_www.c
+    src/raptor_www_curl.c
+    src/raptor_www_libfetch.c
+    src/raptor_www_libxml.c
+#    src/raptor_www_test.c
+    src/raptor_xml.c
+    src/raptor_xml_writer.c
+    src/raptor_xsd.c
+    src/snprintf.c
+    src/strcasecmp.c
+    src/turtle_common.c
+    src/turtle_lexer.c
+    src/turtle_parser.c
+)
+
+set(raptor_HDRS
+    src/n3_common.h
+    src/n3_lexer.h
+    src/n3_parser.h
+    src/raptor.h
+    src/raptor_internal.h
+    src/raptor_nfc.h
+    src/raptor_rss.h
+    src/turtle_common.h
+    src/turtle_lexer.h
+    src/turtle_parser.h
+    src/win32_raptor_config.h
+)
+
+set(raptor_HDRS_INST
+    src/raptor.h
+)
+
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/src)
+include_directories(${CURL_INCLUDE_DIR})
+include_directories(${LIBXML2_INCLUDE_DIR})
+include_directories(${LIBXSLT_INCLUDE_DIR})
+add_library(raptor SHARED ${raptor_SRCS} ${raptor_HDRS} ${raptor_HDRS_INST})
+set_target_properties(raptor PROPERTIES DEFINE_SYMBOL RAPTOR_INTERNAL)
+target_link_libraries(raptor ${CURL_LIBRARIES} ${LIBXML2_LIBRARIES} ${LIBXSLT_LIBRARIES})
+
+set(PROGRAMM raptor)
+configure_file(${CMAKE_SOURCE_DIR}/cmake/config.cpp.in ${CMAKE_CURRENT_BINARY_DIR}/raptor-config.cpp)
+add_executable(raptor-config ${CMAKE_CURRENT_BINARY_DIR}/raptor-config.cpp)
+target_link_libraries(raptor-config raptor)
+
+install(TARGETS raptor raptor-config RUNTIME DESTINATION bin ARCHIVE DESTINATION lib)
+install(FILES   ${raptor_HDRS_INST} DESTINATION include/redland)
diff -Nru redland-1.0.8.orig/raptor/src/raptor_win32.c redland-1.0.8/raptor/src/raptor_win32.c
--- redland-1.0.8.orig/raptor/src/raptor_win32.c	2008-06-14 05:39:35.000000000 +0200
+++ redland-1.0.8/raptor/src/raptor_win32.c	2009-09-23 23:40:49.761000000 +0200
@@ -33,8 +33,26 @@
 
 
 #ifdef WIN32
+#include <windows.h>
+#include <Winsock2.h>
+
+#define KDE_SECONDS_SINCE_1601	11644473600LL
+#define KDE_USEC_IN_SEC			1000000LL
 
 /* Only on WIN32 systems */
+int gettimeofday(struct timeval *__p, void *__t)
+{
+	union {
+		unsigned long long ns100; /*time since 1 Jan 1601 in 100ns units */
+		FILETIME ft;
+	} now;
+
+	GetSystemTimeAsFileTime (&now.ft);
+	__p->tv_usec = (long) ((now.ns100 / 10LL) % KDE_USEC_IN_SEC);
+	__p->tv_sec  = (long)(((now.ns100 / 10LL ) / KDE_USEC_IN_SEC) - KDE_SECONDS_SINCE_1601);
+
+	return (0);
+}
 
 
 /* DLL entry point */
diff -Nru redland-1.0.8.orig/raptor/src/win32_raptor_config.h redland-1.0.8/raptor/src/win32_raptor_config.h
--- redland-1.0.8.orig/raptor/src/win32_raptor_config.h	2008-04-02 06:50:14.000000000 +0200
+++ redland-1.0.8/raptor/src/win32_raptor_config.h	2009-09-23 23:41:52.458000000 +0200
@@ -69,7 +69,9 @@
 #define HAVE_STRICMP 1
 
 /* MS names for these functions */
+#ifndef _MSC_VER
 #define vsnprintf _vsnprintf
+#endif
 #define snprintf _snprintf
 #define access _access
 #define stricmp _stricmp
diff -Nru redland-1.0.8.orig/rasqal/CMakeLists.txt redland-1.0.8/rasqal/CMakeLists.txt
--- redland-1.0.8.orig/rasqal/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ redland-1.0.8/rasqal/CMakeLists.txt	2009-09-23 23:40:49.764000000 +0200
@@ -0,0 +1,63 @@
+project(rasqal)
+
+find_package(PCRE REQUIRED)
+
+set(rasqal_SRCS
+    src/rasqal_datetime.c
+    src/rasqal_decimal.c
+    src/rasqal_engine.c
+    src/rasqal_expr.c
+    src/rasqal_feature.c
+    src/rasqal_general.c
+    src/rasqal_graph_pattern.c
+#    src/rasqal_limit_test.c
+    src/rasqal_literal.c
+    src/rasqal_map.c
+    src/rasqal_query.c
+    src/rasqal_query_results.c
+    src/rasqal_query_test.c
+    src/rasqal_raptor.c
+# only when rasqal links against redland and not the other way round
+#    src/rasqal_redland.c
+    src/rasqal_result_formats.c
+    src/rasqal_rowsource.c
+    src/rasqal_sparql_xml.c
+    src/rasqal_xsd_datatypes.c
+    src/rdql_lexer.c
+    src/rdql_parser.c
+    src/sparql_lexer.c
+    src/sparql_parser.c
+    src/strcasecmp.c
+)
+
+set(rasqal_HDRS
+    src/rasqal_internal.h
+    src/rdql_common.h
+    src/rdql_lexer.h
+    src/rdql_parser.h
+    src/sparql_common.h
+    src/sparql_lexer.h
+    src/sparql_parser.h
+    src/win32_rasqal_config.h
+)
+
+set(rasqal_HDRS_INST
+    src/rasqal.h
+)
+
+add_definitions(-DRASQAL_DECIMAL_NONE)
+include_directories(${CMAKE_SOURCE_DIR}/raptor/src)
+include_directories(${CMAKE_SOURCE_DIR}/librdf)
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/src)
+include_directories(${PCRE_INCLUDE_DIR})
+add_library(rasqal SHARED ${rasqal_SRCS})
+set_target_properties(rasqal PROPERTIES DEFINE_SYMBOL RASQAL_INTERNAL)
+target_link_libraries(rasqal raptor ${PCRE_LIBRARIES})
+
+set(PROGRAMM rasqal)
+configure_file(${CMAKE_SOURCE_DIR}/cmake/config.cpp.in ${CMAKE_CURRENT_BINARY_DIR}/rasqal-config.cpp)
+add_executable(rasqal-config ${CMAKE_CURRENT_BINARY_DIR}/rasqal-config.cpp)
+target_link_libraries(rasqal-config rasqal)
+
+install(TARGETS rasqal rasqal-config RUNTIME DESTINATION bin ARCHIVE DESTINATION lib)
+install(FILES   ${rasqal_HDRS_INST} DESTINATION include/redland)
diff -Nru redland-1.0.8.orig/rasqal/src/sparql_lexer.c redland-1.0.8/rasqal/src/sparql_lexer.c
--- redland-1.0.8.orig/rasqal/src/sparql_lexer.c	2008-06-26 20:52:33.000000000 +0200
+++ redland-1.0.8/rasqal/src/sparql_lexer.c	2009-09-23 23:40:49.771000000 +0200
@@ -1166,7 +1166,7 @@
 
 #include <rasqal.h>
 #include <rasqal_internal.h>
-
+#undef DELETE
 #include <sparql_parser.h>
 
 #include <sparql_common.h>
diff -Nru redland-1.0.8.orig/rasqal/src/sparql_parser.c redland-1.0.8/rasqal/src/sparql_parser.c
--- redland-1.0.8.orig/rasqal/src/sparql_parser.c	2008-06-26 20:52:33.000000000 +0200
+++ redland-1.0.8/rasqal/src/sparql_parser.c	2009-09-23 23:40:49.779000000 +0200
@@ -43,6 +43,14 @@
    define necessary library symbols; they are noted "INFRINGES ON
    USER NAME SPACE" below.  */
 
+#ifdef WIN32
+//undefine some constants which are used below
+#define _WINSOCK2_H
+#include <windows.h>
+#undef DELETE
+#undef OPTIONAL
+#endif
+
 /* Identify Bison output.  */
 #define YYBISON 1
 
diff -Nru redland-1.0.8.orig/rasqal/src/win32_rasqal_config.h redland-1.0.8/rasqal/src/win32_rasqal_config.h
--- redland-1.0.8.orig/rasqal/src/win32_rasqal_config.h	2008-06-27 04:02:09.000000000 +0200
+++ redland-1.0.8/rasqal/src/win32_rasqal_config.h	2009-09-23 23:42:08.970000000 +0200
@@ -40,7 +40,9 @@
 #define HAVE_STRICMP 1
 
 /* MS names for these functions */
+#ifndef _MSC_VER
 #define vsnprintf _vsnprintf
+#endif
 #define snprintf _snprintf
 #define access _access
 #define stricmp _stricmp
