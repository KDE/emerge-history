diff -Nru libxml2-2.7.7.orig/CMakeLists.txt libxml2-2.7.7/CMakeLists.txt
--- libxml2-2.7.7.orig/CMakeLists.txt	Thu Jan  1 00:00:00 1970
+++ libxml2-2.7.7/CMakeLists.txt	Wed May 12 15:30:05 2010
@@ -0,0 +1,257 @@
+# This file is copyrighted under the BSD-license for buildsystem files of KDE
+# copyright 2010, Patrick Spendrin <ps_ml@gmx.de>
+
+project(libxml2)
+
+cmake_minimum_required(VERSION 2.6)
+
+set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules)
+
+set(PACKAGE "libxml2")
+set(VERSION "2.7.7")
+
+find_package(ZLIB)
+find_package(Libiconv REQUIRED)
+
+include_directories(
+    ${CMAKE_BINARY_DIR} 
+    ${CMAKE_SOURCE_DIR}/include 
+    ${ZLIB_INCLUDE_DIR}
+    ${Libiconv_INCLUDE_DIR}
+    ${CMAKE_SOURCE_DIR}/win32/wince
+)
+
+if(WINCE)
+    find_package(Wcecompat REQUIRED)
+    include_directories(${WCECOMPAT_INCLUDE_DIR})
+endif(WINCE)
+
+option(SUPPORT_IP6 "support IPv6" ON)
+option(ENABLE_THREADS "enable threading in libxml" ON)
+option(ENABLE_TRIO "enable trio IO in libxml" OFF)
+option(BUILD_tests "build all the test executables in libxml" ON)
+
+include(ConfigureChecks.cmake)
+
+######################################### Library ###############################################
+
+set(libxml2_SRCS
+    SAX.c 
+    entities.c 
+    encoding.c 
+    error.c 
+    parserInternals.c
+    parser.c
+    tree.c
+    hash.c
+    list.c
+    xmlIO.c
+    xmlmemory.c
+    uri.c
+    valid.c
+    xlink.c
+    HTMLparser.c
+    HTMLtree.c
+    debugXML.c
+    xpath.c
+    xpointer.c
+    xinclude.c
+    nanohttp.c
+    nanoftp.c
+    DOCBparser.c
+    catalog.c
+    globals.c
+    threads.c
+    c14n.c
+    xmlstring.c
+    xmlregexp.c
+    xmlschemas.c
+    xmlschemastypes.c
+    xmlunicode.c
+    xmlreader.c
+    relaxng.c
+    dict.c
+    SAX2.c
+    xmlwriter.c
+    legacy.c
+    chvalid.c
+    pattern.c
+    xmlsave.c
+    xmlmodule.c
+    schematron.c
+)
+if(WINCE)
+set(libxml2_SRCS
+    ${libxml2_SRCS}
+    win32/wince/wincecompat.c)
+endif(WINCE)
+
+# the trio code is yet untested, you need to change the xmlversion.h for that too
+# this is currently not supported as you'd need to configure the xmlversion.h.in
+if(ENABLE_TRIO)
+    set(libxml2_SRCS
+        ${libxml2_SRCS}
+        triostr.c 
+        trio.c
+    )
+endif(ENABLE_TRIO)
+
+add_library(xml2 SHARED ${libxml2_SRCS})
+target_link_libraries(xml2 ${LIBICONV_LIBRARIES})
+install(TARGETS xml2    RUNTIME DESTINATION bin
+                        LIBRARY DESTINATION lib
+                        ARCHIVE DESTINATION lib)
+
+if(WIN32)
+    if(MSVC)
+        set_target_properties(xml2 PROPERTIES OUTPUT_NAME libxml2)
+    endif(MSVC)
+    if(WINCE)
+        target_link_libraries(xml2 ws2)
+    else(WINCE)
+        target_link_libraries(xml2 ws2_32)
+    endif(WINCE)
+endif(WIN32)
+
+if(ZLIB_FOUND)
+    target_link_libraries(xml2 ${ZLIB_LIBRARIES})
+endif(ZLIB_FOUND)
+
+
+######################################### Utilities ###############################################
+
+# For WINCE the utils are not compiled
+if(NOT WINCE)
+add_executable(xmllint xmllint.c)
+target_link_libraries(xmllint xml2)
+install(TARGETS xmllint RUNTIME DESTINATION bin
+                        LIBRARY DESTINATION lib
+                        ARCHIVE DESTINATION lib)
+
+add_executable(xmlcatalog xmlcatalog.c)
+target_link_libraries(xmlcatalog xml2)
+install(TARGETS xmlcatalog  RUNTIME DESTINATION bin
+                            LIBRARY DESTINATION lib
+                            ARCHIVE DESTINATION lib)
+                            
+endif(NOT WINCE)
+
+######################################### headers & docs ###############################################
+set(libxml2_HDRS
+include/libxml/SAX.h
+include/libxml/entities.h
+include/libxml/encoding.h
+include/libxml/parser.h
+include/libxml/parserInternals.h
+include/libxml/xmlerror.h
+include/libxml/HTMLparser.h
+include/libxml/HTMLtree.h
+include/libxml/debugXML.h
+include/libxml/tree.h
+include/libxml/list.h
+include/libxml/hash.h
+include/libxml/xpath.h
+include/libxml/xpathInternals.h
+include/libxml/xpointer.h
+include/libxml/xinclude.h
+include/libxml/xmlIO.h
+include/libxml/xmlmemory.h
+include/libxml/nanohttp.h
+include/libxml/nanoftp.h
+include/libxml/uri.h
+include/libxml/valid.h
+include/libxml/xlink.h
+include/libxml/xmlversion.h
+include/libxml/DOCBparser.h
+include/libxml/catalog.h
+include/libxml/threads.h
+include/libxml/globals.h
+include/libxml/c14n.h
+include/libxml/xmlautomata.h
+include/libxml/xmlregexp.h
+include/libxml/xmlmodule.h
+include/libxml/xmlschemas.h
+include/libxml/schemasInternals.h
+include/libxml/xmlschemastypes.h
+include/libxml/xmlstring.h
+include/libxml/xmlunicode.h
+include/libxml/xmlreader.h
+include/libxml/relaxng.h
+include/libxml/dict.h
+include/libxml/SAX2.h
+include/libxml/xmlexports.h
+include/libxml/xmlwriter.h
+include/libxml/chvalid.h
+include/libxml/pattern.h
+include/libxml/xmlsave.h
+include/libxml/schematron.h)
+
+if(WINCE)
+set(libxml2_HDRS
+    ${libxml2_HDRS}
+    win32/wince/wincecompat.h)
+endif(WINCE)
+
+install(FILES ${libxml2_HDRS} DESTINATION include/libxml)
+
+set(_html_DOCS 
+doc/xml.html
+doc/encoding.html
+doc/FAQ.html
+doc/structure.gif
+doc/DOM.gif
+doc/smallfootonly.gif
+doc/redhat.gif
+doc/libxml.gif
+doc/w3c.png
+doc/Libxml2-Logo-180x168.gif
+doc/Libxml2-Logo-90x34.gif
+)
+
+file(GLOB html_DOCS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "${CMAKE_CURRENT_SOURCE_DIR}/doc/html/*.html")
+file(GLOB png_DOCS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "${CMAKE_CURRENT_SOURCE_DIR}/doc/html/*.png")
+install(FILES ${html_DOCS} ${png_DOCS} DESTINATION doc/libxml/html)
+
+file(GLOB tut_DOCS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "${CMAKE_CURRENT_SOURCE_DIR}/doc/tutorial/*.*")
+install(FILES ${tut_DOCS} DESTINATION doc/libxml/html/tutorial)
+
+
+######################################### Tests ###############################################
+if(BUILD_tests)
+macro(buildTests)
+    foreach(target ${ARGN})
+        add_executable(${target} ${target}.c)
+        target_link_libraries(${target} xml2)
+    endforeach(target ${ARGN})
+endmacro(buildTests)
+
+buildTests(
+    testSchemas 
+    testRelax 
+    testSAX 
+    testHTML 
+    testXPath 
+    testURI
+    testC14N
+    testAutomata
+    testRegexp
+    testReader
+    testapi
+    testModule
+    runtest
+    runsuite
+    testchar
+    testdict
+    runxmlconf
+    testrecurse
+)
+if(WIN32)
+    buildTests(
+        testThreadsWin32
+    )
+else(WIN32)
+    buildTests(
+        testThreads
+    )
+endif(WIN32)
+endif(BUILD_tests)
diff -Nru libxml2-2.7.7.orig/ConfigureChecks.cmake libxml2-2.7.7/ConfigureChecks.cmake
--- libxml2-2.7.7.orig/ConfigureChecks.cmake	Thu Jan  1 00:00:00 1970
+++ libxml2-2.7.7/ConfigureChecks.cmake	Wed May 12 13:25:55 2010
@@ -0,0 +1,138 @@
+#some configure checks
+
+# LIBXML_ENABLE_THREADS
+if(ENABLE_THREADS)
+    if(UNIX)
+        add_definitions(-DLIBXML_THREAD_ENABLED)
+    else(UNIX)
+        add_definitions(-DHAVE_WIN32_THREADS)
+    endif(UNIX)
+endif(ENABLE_THREADS)
+
+# set ICONV_CONST
+set(ICONV_CONST ${LIBICONV_CONST})
+
+# HAVE_LIBZ
+if(ZLIB_FOUND)
+    set(HAVE_LIBZ ON)
+endif(ZLIB_FOUND)
+
+# HAVE_LIBM
+if(UNIX)
+    set(HAVE_LIBM ON)
+endif(UNIX)
+
+# HAVE_LIBPTHREAD
+if(CMAKE_SYSTEM_NAME STREQUAL GNU)
+    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -pthread")
+    set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -pthread")
+    set(HAVE_LIBPTHREAD ON)
+endif(CMAKE_SYSTEM_NAME STREQUAL GNU)
+
+# HAVE_LIBHISTORY
+# HAVE_LIBREADLINE
+
+set(CMAKE_REQUIRED_INCLUDES ${ZLIB_INCLUDE_DIR} ${CMAKE_REQUIRED_INCLUDES})
+set(CMAKE_REQUIRED_LIBRARIES ${ZLIB_LIBRARIES} ${CMAKE_REQUIRED_LIBRARIES})
+include(CheckIncludeFile)
+include(CheckFunctionExists)
+include(CheckSymbolExists)
+
+check_include_file("fcntl.h" HAVE_FCNTL_H)
+check_include_file("pthread.h" HAVE_PTHREAD_H)
+check_include_file("ansidecl.h" HAVE_ANSIDECL_H)
+check_include_file("arpa/inet.h" HAVE_ARPA_INET_H)
+check_include_file("arpa/nameser.h" HAVE_ARPA_NAMESER_H)
+check_include_file("ctype.h" HAVE_CTYPE_H)
+check_include_file("dirent.h" HAVE_DIRENT_H)
+check_include_file("dlfcn.h" HAVE_DLFCN_H)
+check_include_file("dl.h" HAVE_DL_H)
+check_include_file("errno.h" HAVE_ERRNO_H)
+check_include_file("float.h" HAVE_FLOAT_H)
+check_include_file("fp_class.h" HAVE_FP_CLASS_H)
+check_include_file("ieeefp.h" HAVE_IEEEFP_H)
+check_include_file("inttypes.h" HAVE_INTTYPES_H)
+check_include_file("inttypes.h.h" HAVE_INTTYPES_H_H)
+check_include_file("limits.h" HAVE_LIMITS_H)
+check_include_file("malloc.h" HAVE_MALLOC_H)
+check_include_file("math.h" HAVE_MATH_H)
+check_include_file("memory.h" HAVE_MEMORY_H)
+check_include_file("nan.h" HAVE_NAN_H)
+check_include_file("ndir.h" HAVE_NDIR_H)
+check_include_file("netdb.h" HAVE_NETDB_H)
+check_include_file("netinet/in.h" HAVE_NETINET_IN_H)
+check_include_file("poll.h" HAVE_POLL_H)
+check_include_file("pthread.h" HAVE_PTHREAD_H)
+check_include_file("resolv.h" HAVE_RESOLV_H)
+check_include_file("signal.h" HAVE_SIGNAL_H)
+check_include_file("stdarg.h" HAVE_STDARG_H)
+check_include_file("stdint.h" HAVE_STDINT_H)
+check_include_file("stdlib.h" HAVE_STDLIB_H)
+check_include_file("strings.h" HAVE_STRINGS_H)
+check_include_file("string.h" HAVE_STRING_H)
+check_include_file("sys/dir.h" HAVE_SYS_DIR_H)
+check_include_file("sys/mman.h" HAVE_SYS_MMAN_H)
+check_include_file("sys/ndir.h" HAVE_SYS_NDIR_H)
+check_include_file("sys/select.h" HAVE_SYS_SELECT_H)
+check_include_file("sys/socket.h" HAVE_SYS_SOCKET_H)
+check_include_file("sys/stat.h" HAVE_SYS_STAT_H)
+check_include_file("sys/timeb.h" HAVE_SYS_TIMEB_H)
+check_include_file("sys/time.h" HAVE_SYS_TIME_H)
+check_include_file("sys/types.h" HAVE_SYS_TYPES_H)
+check_include_file("time.h" HAVE_TIME_H)
+check_include_file("unistd.h" HAVE_UNISTD_H)
+check_include_file("zlib.h" HAVE_ZLIB_H)
+
+if(NOT HAVE_RESOLV_H)
+set(SUPPORT_IP6 OFF)
+endif(NOT HAVE_RESOLV_H)
+
+#/* Whether struct sockaddr::__ss_family exists */ ???
+#cmakedefine HAVE_BROKEN_SS_FAMILY
+
+check_function_exists("strdup" HAVE_STRDUP)
+check_function_exists("getaddrinfo" HAVE_GETADDRINFO)
+check_function_exists("class" HAVE_CLASS)
+check_function_exists("dlopen" HAVE_DLOPEN)
+check_function_exists("shl_load" HAVE_SHLLOAD)
+check_function_exists("finite" HAVE_FINITE)
+check_function_exists("fpclass" HAVE_FPCLASS)
+check_function_exists("fprintf" HAVE_FPRINTF)
+check_function_exists("fp_class" HAVE_FP_CLASS)
+check_function_exists("ftime" HAVE_FTIME)
+check_function_exists("gettimeofday" HAVE_GETTIMEOFDAY)
+check_function_exists("isinf" HAVE_ISINF)
+check_function_exists("isnan" HAVE_ISNAN)
+check_function_exists("isnand" HAVE_ISNAND)
+check_function_exists("localtime" HAVE_LOCALTIME)
+check_function_exists("printf" HAVE_PRINTF)
+check_function_exists("signal" HAVE_SIGNAL)
+check_function_exists("snprintf" HAVE_SNPRINTF)
+check_function_exists("sprintf" HAVE_SPRINTF)
+check_function_exists("sscanf" HAVE_SSCANF)
+check_function_exists("stat" HAVE_STAT)
+check_function_exists("strdup" HAVE_STRDUP)
+check_function_exists("strerror" HAVE_STRERROR)
+check_function_exists("strftime" HAVE_STRFTIME)
+check_function_exists("strndup" HAVE_STRNDUP)
+check_function_exists("vfprintf" HAVE_VFPRINTF)
+check_function_exists("vsnprintf" HAVE_VSNPRINTF)
+check_function_exists("vsprintf" HAVE_VSPRINTF)
+check_function_exists("va_copy" HAVE_VA_COPY)
+check_function_exists("_stat" HAVE__STAT)
+check_function_exists("__va_copy" HAVE___VA_COPY)
+
+if(MSVC)
+    add_definitions(-D_CRT_SECURE_NO_WARNINGS)
+endif(MSVC)
+
+if(ZLIB_FOUND)
+    # disable large file support in case the functions are not contained in the dll
+    check_symbol_exists("gzopen64" "zlib.h" GZOPEN64)
+    if(NOT GZOPEN64)
+        add_definitions(-DNO_LARGEFILE_SOURCE)
+        message(STATUS "No Large File Support in libz!")
+    endif(NOT GZOPEN64)
+endif(ZLIB_FOUND)
+
+configure_file(config.h.cmake config.h)
\ No newline at end of file
diff -Nru libxml2-2.7.7.orig/cmake/modules/FindLibiconv.cmake libxml2-2.7.7/cmake/modules/FindLibiconv.cmake
--- libxml2-2.7.7.orig/cmake/modules/FindLibiconv.cmake	Thu Jan  1 00:00:00 1970
+++ libxml2-2.7.7/cmake/modules/FindLibiconv.cmake	Wed May 12 13:25:55 2010
@@ -0,0 +1,33 @@
+# Try to find Libiconv functionality
+# Once done this will define
+#
+#  LIBICONV_FOUND - system has Libiconv
+#  LIBICONV_INCLUDE_DIR - Libiconv include directory
+#  LIBICONV_LIBRARIES - Libraries needed to use Libiconv
+#
+# Copyright (c) 2010, Patrick Spendrin, <ps_ml@gmx.de>
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+
+if(LIBICONV_INCLUDE_DIR AND LIBICONV_LIB_FOUND)
+  set(Libiconv_FIND_QUIETLY TRUE)
+endif(LIBICONV_INCLUDE_DIR AND LIBICONV_LIB_FOUND)
+
+find_path(LIBICONV_INCLUDE_DIR iconv.h)
+
+set(LIBICONV_LIB_FOUND FALSE)
+
+if(LIBICONV_INCLUDE_DIR)
+    find_library(LIBICONV_LIBRARIES NAMES iconv iconv2 iconv-2 libiconv libiconv2 libiconv-2 )
+    if(LIBICONV_LIBRARIES)
+      set(LIBICONV_LIB_FOUND TRUE)
+    endif(LIBICONV_LIBRARIES)
+endif(LIBICONV_INCLUDE_DIR)
+
+# I have no idea what this is about, but it seems to be used quite often, so I add this here
+set(LIBICONV_CONST const)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(Libiconv  DEFAULT_MSG  LIBICONV_LIBRARIES  LIBICONV_LIB_FOUND)
+
+mark_as_advanced(LIBICONV_INCLUDE_DIR  LIBICONV_LIBRARIES  LIBICONV_CONST  LIBICONV_LIB_FOUND)
diff -Nru libxml2-2.7.7.orig/cmake/modules/FindWcecompat.cmake libxml2-2.7.7/cmake/modules/FindWcecompat.cmake
--- libxml2-2.7.7.orig/cmake/modules/FindWcecompat.cmake	Thu Jan  1 00:00:00 1970
+++ libxml2-2.7.7/cmake/modules/FindWcecompat.cmake	Wed May 12 13:23:08 2010
@@ -0,0 +1,33 @@
+# Try to find Wcecompat functionality
+# Once done this will define
+#
+#  WCECOMPAT_FOUND - system has Wcecompat
+#  WCECOMPAT_INCLUDE_DIR - Wcecompat include directory
+#  WCECOMPAT_LIBRARIES - Libraries needed to use Wcecompat
+#
+# Copyright (c) 2010, Andreas Holzammer, <andy@kdab.com>
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+
+if(WCECOMPAT_INCLUDE_DIR AND WCECOMPAT_LIB_FOUND)
+  set(Wcecompat_FIND_QUIETLY TRUE)
+endif(WCECOMPAT_INCLUDE_DIR AND WCECOMPAT_LIB_FOUND)
+
+find_path(WCECOMPAT_INCLUDE_DIR errno.h PATH_SUFFIXES wcecompat)
+
+set(WCECOMPAT_LIB_FOUND FALSE)
+
+if(WCECOMPAT_INCLUDE_DIR)
+    find_library(WCECOMPAT_LIBRARIES NAMES wcecompat wcecompatex )
+    if(WCECOMPAT_LIBRARIES)
+      set(WCECOMPAT_LIB_FOUND TRUE)
+    endif(WCECOMPAT_LIBRARIES)
+endif(WCECOMPAT_INCLUDE_DIR)
+
+# I have no idea what this is about, but it seems to be used quite often, so I add this here
+set(WCECOMPAT_CONST const)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(Wcecompat  DEFAULT_MSG  WCECOMPAT_LIBRARIES  WCECOMPAT_LIB_FOUND)
+
+mark_as_advanced(WCECOMPAT_INCLUDE_DIR  WCECOMPAT_LIBRARIES  WCECOMPAT_CONST  WCECOMPAT_LIB_FOUND)
diff -Nru libxml2-2.7.7.orig/config.h.cmake libxml2-2.7.7/config.h.cmake
--- libxml2-2.7.7.orig/config.h.cmake	Thu Jan  1 00:00:00 1970
+++ libxml2-2.7.7/config.h.cmake	Wed May 12 13:25:55 2010
@@ -0,0 +1,312 @@
+/* config.h.in.  Generated from configure.in by autoheader.  */
+#cmakedefine PACKAGE
+#cmakedefine VERSION
+#cmakedefine HAVE_LIBZ
+#cmakedefine HAVE_LIBM
+#cmakedefine HAVE_ISINF
+#cmakedefine HAVE_ISNAN
+#cmakedefine HAVE_LIBHISTORY
+#cmakedefine HAVE_LIBREADLINE
+#cmakedefine HAVE_LIBPTHREAD
+#cmakedefine HAVE_PTHREAD_H
+
+/* Define if IPV6 support is there */
+#cmakedefine SUPPORT_IP6
+
+/* Define if getaddrinfo is there */
+#cmakedefine HAVE_GETADDRINFO
+
+/* Define to 1 if you have the <ansidecl.h> header file. */
+#cmakedefine HAVE_ANSIDECL_H
+
+/* Define to 1 if you have the <arpa/inet.h> header file. */
+#cmakedefine HAVE_ARPA_INET_H
+
+/* Define to 1 if you have the <arpa/nameser.h> header file. */
+#cmakedefine HAVE_ARPA_NAMESER_H
+
+/* Whether struct sockaddr::__ss_family exists */
+#cmakedefine HAVE_BROKEN_SS_FAMILY
+
+/* Define to 1 if you have the `class' function. */
+#cmakedefine HAVE_CLASS
+
+/* Define to 1 if you have the <ctype.h> header file. */
+#cmakedefine HAVE_CTYPE_H
+
+/* Define to 1 if you have the <dirent.h> header file. */
+#cmakedefine HAVE_DIRENT_H
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#cmakedefine HAVE_DLFCN_H
+
+/* Have dlopen based dso */
+#cmakedefine HAVE_DLOPEN
+
+/* Define to 1 if you have the <dl.h> header file. */
+#cmakedefine HAVE_DL_H
+
+/* Define to 1 if you have the <errno.h> header file. */
+#cmakedefine HAVE_ERRNO_H
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#cmakedefine HAVE_FCNTL_H
+
+/* Define to 1 if you have the `finite' function. */
+#cmakedefine HAVE_FINITE
+
+/* Define to 1 if you have the <float.h> header file. */
+#cmakedefine HAVE_FLOAT_H
+
+/* Define to 1 if you have the `fpclass' function. */
+#cmakedefine HAVE_FPCLASS
+
+/* Define to 1 if you have the `fprintf' function. */
+#cmakedefine HAVE_FPRINTF
+
+/* Define to 1 if you have the `fp_class' function. */
+#cmakedefine HAVE_FP_CLASS
+
+/* Define to 1 if you have the <fp_class.h> header file. */
+#cmakedefine HAVE_FP_CLASS_H
+
+/* Define to 1 if you have the `ftime' function. */
+#cmakedefine HAVE_FTIME
+
+/* Define if getaddrinfo is there */
+#cmakedefine HAVE_GETADDRINFO
+
+/* Define to 1 if you have the `gettimeofday' function. */
+#cmakedefine HAVE_GETTIMEOFDAY
+
+/* Define to 1 if you have the <ieeefp.h> header file. */
+#cmakedefine HAVE_IEEEFP_H
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#cmakedefine HAVE_INTTYPES_H
+
+/* Define to 1 if you have the <inttypes.h.h> header file. */
+#cmakedefine HAVE_INTTYPES_H_H
+
+/* Define if isinf is there */
+#cmakedefine HAVE_ISINF
+
+/* Define if isnan is there */
+#cmakedefine HAVE_ISNAN
+
+/* Define to 1 if you have the `isnand' function. */
+#cmakedefine HAVE_ISNAND
+
+/* Define if history library is there (-lhistory) */
+#cmakedefine HAVE_LIBHISTORY
+
+/* Define if pthread library is there (-lpthread) */
+#cmakedefine HAVE_LIBPTHREAD
+
+/* Define if readline library is there (-lreadline) */
+#cmakedefine HAVE_LIBREADLINE
+
+/* Have compression library */
+#cmakedefine HAVE_LIBZ
+
+/* Define to 1 if you have the <limits.h> header file. */
+#cmakedefine HAVE_LIMITS_H
+
+/* Define to 1 if you have the `localtime' function. */
+#cmakedefine HAVE_LOCALTIME
+
+/* Define to 1 if you have the <malloc.h> header file. */
+#cmakedefine HAVE_MALLOC_H
+
+/* Define to 1 if you have the <math.h> header file. */
+#cmakedefine HAVE_MATH_H
+
+/* Define to 1 if you have the <memory.h> header file. */
+#cmakedefine HAVE_MEMORY_H
+
+/* Define to 1 if you have the <nan.h> header file. */
+#cmakedefine HAVE_NAN_H
+
+/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR'. */
+#cmakedefine HAVE_NDIR_H
+
+/* Define to 1 if you have the <netdb.h> header file. */
+#cmakedefine HAVE_NETDB_H
+
+/* Define to 1 if you have the <netinet/in.h> header file. */
+#cmakedefine HAVE_NETINET_IN_H
+
+/* Define to 1 if you have the <poll.h> header file. */
+#cmakedefine HAVE_POLL_H
+
+/* Define to 1 if you have the `printf' function. */
+#cmakedefine HAVE_PRINTF
+
+/* Define if <pthread.h> is there */
+#cmakedefine HAVE_PTHREAD_H
+
+/* Define to 1 if you have the <resolv.h> header file. */
+#cmakedefine HAVE_RESOLV_H
+
+/* Have shl_load based dso */
+#cmakedefine HAVE_SHLLOAD
+
+/* Define to 1 if you have the `signal' function. */
+#cmakedefine HAVE_SIGNAL
+
+/* Define to 1 if you have the <signal.h> header file. */
+#cmakedefine HAVE_SIGNAL_H
+
+/* Define to 1 if you have the `snprintf' function. */
+#cmakedefine HAVE_SNPRINTF
+
+/* Define to 1 if you have the `sprintf' function. */
+#cmakedefine HAVE_SPRINTF
+
+/* Define to 1 if you have the `sscanf' function. */
+#cmakedefine HAVE_SSCANF
+
+/* Define to 1 if you have the `stat' function. */
+#cmakedefine HAVE_STAT
+
+/* Define to 1 if you have the <stdarg.h> header file. */
+#cmakedefine HAVE_STDARG_H
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#cmakedefine HAVE_STDINT_H
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#cmakedefine HAVE_STDLIB_H
+
+/* Define to 1 if you have the `strdup' function. */
+#cmakedefine HAVE_STRDUP
+
+/* Define to 1 if you have the `strerror' function. */
+#cmakedefine HAVE_STRERROR
+
+/* Define to 1 if you have the `strftime' function. */
+#cmakedefine HAVE_STRFTIME
+
+/* Define to 1 if you have the <strings.h> header file. */
+#cmakedefine HAVE_STRINGS_H
+
+/* Define to 1 if you have the <string.h> header file. */
+#cmakedefine HAVE_STRING_H
+
+/* Define to 1 if you have the `strndup' function. */
+#cmakedefine HAVE_STRNDUP
+
+/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'.
+   */
+#cmakedefine HAVE_SYS_DIR_H
+
+/* Define to 1 if you have the <sys/mman.h> header file. */
+#cmakedefine HAVE_SYS_MMAN_H
+
+/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'.
+   */
+#cmakedefine HAVE_SYS_NDIR_H
+
+/* Define to 1 if you have the <sys/select.h> header file. */
+#cmakedefine HAVE_SYS_SELECT_H
+
+/* Define to 1 if you have the <sys/socket.h> header file. */
+#cmakedefine HAVE_SYS_SOCKET_H
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#cmakedefine HAVE_SYS_STAT_H
+
+/* Define to 1 if you have the <sys/timeb.h> header file. */
+#cmakedefine HAVE_SYS_TIMEB_H
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#cmakedefine HAVE_SYS_TIME_H
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#cmakedefine HAVE_SYS_TYPES_H
+
+/* Define to 1 if you have the <time.h> header file. */
+#cmakedefine HAVE_TIME_H
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#cmakedefine HAVE_UNISTD_H 1
+
+/* Whether va_copy() is available */
+#cmakedefine HAVE_VA_COPY
+
+/* Define to 1 if you have the `vfprintf' function. */
+#cmakedefine HAVE_VFPRINTF
+
+/* Define to 1 if you have the `vsnprintf' function. */
+#cmakedefine HAVE_VSNPRINTF
+
+/* Define to 1 if you have the `vsprintf' function. */
+#cmakedefine HAVE_VSPRINTF
+
+/* Define to 1 if you have the <zlib.h> header file. */
+#cmakedefine HAVE_ZLIB_H
+
+/* Define to 1 if you have the `_stat' function. */
+#cmakedefine HAVE__STAT
+
+/* Whether __va_copy() is available */
+#cmakedefine HAVE___VA_COPY
+
+/* Define as const if the declaration of iconv() needs const. */
+#cmakedefine ICONV_CONST @ICONV_CONST@
+
+/* Define to the sub-directory in which libtool stores uninstalled libraries.
+   */
+#cmakedefine LT_OBJDIR
+
+/* Name of package */
+#cmakedefine PACKAGE
+
+/* Define to the address where bug reports for this package should be sent. */
+#cmakedefine PACKAGE_BUGREPORT
+
+/* Define to the full name of this package. */
+#cmakedefine PACKAGE_NAME
+
+/* Define to the full name and version of this package. */
+#cmakedefine PACKAGE_STRING
+
+/* Define to the one symbol short name of this package. */
+#cmakedefine PACKAGE_TARNAME
+
+/* Define to the version of this package. */
+#cmakedefine PACKAGE_VERSION
+
+/* Define to 1 if the C compiler supports function prototypes. */
+#cmakedefine PROTOTYPES
+
+/* Define to 1 if you have the ANSI C header files. */
+#cmakedefine STDC_HEADERS
+
+/* Support for IPv6 */
+#cmakedefine SUPPORT_IP6
+
+/* Version number of package */
+#cmakedefine VERSION
+
+/* Determine what socket length (socklen_t) data type is */
+#cmakedefine XML_SOCKLEN_T
+
+/* Using the Win32 Socket implementation */
+#cmakedefine _WINSOCKAPI_
+
+/* Define like PROTOTYPES; this can be used by system headers. */
+#cmakedefine __PROTOTYPES
+
+/* Win32 Std C name mangling work-around */
+#cmakedefine snprintf
+
+/* ss_family is not defined here, use __ss_family instead */
+#cmakedefine ss_family
+
+/* Win32 Std C name mangling work-around */
+#cmakedefine vsnprintf
+
+#ifdef _MSC_VER
+#define snprintf _snprintf
+#endif
diff -Nru libxml2-2.7.7.orig/include/wsockcompat.h libxml2-2.7.7/include/wsockcompat.h
--- libxml2-2.7.7.orig/include/wsockcompat.h	Thu Sep 24 15:31:59 2009
+++ libxml2-2.7.7/include/wsockcompat.h	Wed May 12 14:27:35 2010
@@ -6,7 +6,7 @@
 #define __XML_WSOCKCOMPAT_H__
 
 #ifdef _WIN32_WCE
-#include <winsock.h>
+#include <winsock2.h>
 #else
 #undef HAVE_ERRNO_H
 #include <winsock2.h>
diff -Nru libxml2-2.7.7.orig/nanoftp.c libxml2-2.7.7/nanoftp.c
--- libxml2-2.7.7.orig/nanoftp.c	Thu Sep 24 15:31:59 2009
+++ libxml2-2.7.7/nanoftp.c	Wed May 12 15:37:59 2010
@@ -77,7 +77,7 @@
 #endif
 
 
-#if defined(__MINGW32__) || defined(_WIN32_WCE)
+#if defined(__MINGW32__) || defined(_WIN32_WCE) || defined(_WIN32)
 #define _WINSOCKAPI_
 #include <wsockcompat.h>
 #include <winsock2.h>
diff -Nru libxml2-2.7.7.orig/nanohttp.c libxml2-2.7.7/nanohttp.c
--- libxml2-2.7.7.orig/nanohttp.c	Mon Oct 19 11:55:48 2009
+++ libxml2-2.7.7/nanohttp.c	Wed May 12 15:38:21 2010
@@ -78,7 +78,7 @@
 #define SOCKET int
 #endif
 
-#if defined(__MINGW32__) || defined(_WIN32_WCE)
+#if defined(__MINGW32__) || defined(_WIN32_WCE) || defined(_WIN32)
 #define _WINSOCKAPI_
 #include <wsockcompat.h>
 #include <winsock2.h>
diff -Nru libxml2-2.7.7.orig/threads.c libxml2-2.7.7/threads.c
--- libxml2-2.7.7.orig/threads.c	Fri Oct  2 15:28:18 2009
+++ libxml2-2.7.7/threads.c	Wed May 12 15:04:12 2010
@@ -28,6 +28,9 @@
 #include <pthread.h>
 #elif defined HAVE_WIN32_THREADS
 #include <windows.h>
+#if _WIN32_WCE
+#include <process.h>
+#endif
 #ifndef HAVE_COMPILER_TLS
 #include <process.h>
 #endif
@@ -141,6 +144,14 @@
  *   - xmlLibraryLock a global lock
  *   - globalkey used for per-thread data
  */
+ 
+#ifdef _WIN32_WCE
+/* TLS_OUT_OF_INDEXES not defined on WinCE */
+#ifndef TLS_OUT_OF_INDEXES
+#define TLS_OUT_OF_INDEXES 0xffffffff
+#endif
+#endif
+
 
 #ifdef HAVE_PTHREAD_H
 static pthread_key_t globalkey;
