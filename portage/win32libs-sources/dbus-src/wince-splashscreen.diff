diff -Nru dbus-1.4.0.orig/bus/main.c dbus-1.4.0/bus/main.c
--- dbus-1.4.0.orig/bus/main.c	2011-01-31 09:24:31.124089200 +0100
+++ dbus-1.4.0/bus/main.c	2011-01-28 16:11:30.201191100 +0100
@@ -37,6 +37,11 @@
 #endif
 #include "selinux.h"
 
+#ifdef _WIN32_WCE
+#include <winbase.h>
+#include "splashscreen.h"
+#endif
+
 static BusContext *context;
 
 static int reload_pipe[2];
@@ -275,6 +280,10 @@
   dbus_bool_t is_session_bus;
   int force_fork;
   dbus_bool_t systemd_activation;
+  
+#ifdef _WIN32_WCE
+  CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)&showWinceSplashscreen, NULL, 0, NULL);
+#endif
 
   if (!_dbus_string_init (&config_file))
     return 1;
diff -Nru dbus-1.4.0.orig/bus/splashscreen.cpp dbus-1.4.0/bus/splashscreen.cpp
--- dbus-1.4.0.orig/bus/splashscreen.cpp	1970-01-01 01:00:00.000000000 +0100
+++ dbus-1.4.0/bus/splashscreen.cpp	2011-01-31 09:07:09.226609300 +0100
@@ -0,0 +1,154 @@
+/*
+    Copyright (c) 2010 Klarälvdalens Datakonsult AB, a KDAB Group company, info@kdab.com
+    Copyright (c) 2010 Andreas Holzammer <andreas.holzammer@kdab.com>
+
+    This library is free software; you can redistribute it and/or modify it
+    under the terms of the GNU Library General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or (at your
+    option) any later version.
+
+    This library is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
+    License for more details.
+
+    You should have received a copy of the GNU Library General Public License
+    along with this library; see the file COPYING.LIB.  If not, write to the
+    Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+    02110-1301, USA.
+*/
+
+#include <stdio.h>
+#include <windows.h>
+#include <aygshell.h>
+
+
+// Global Bitmap variable
+HBITMAP hbm;
+
+const wchar_t *szTitle = L"Kontact Touch";		// title bar text
+const wchar_t *szWindowClass = L"SplashScreen";	// main window class name
+
+// Load Splashscreen from resource dll
+BOOL onCreate(
+   HWND hwnd)
+{
+  // Load Splashscreen dll
+  HINSTANCE hinst = LoadLibrary(L"splashscreen.dll");
+
+	if (!hinst) {
+		printf("failed to load splashscreen dll!\n");
+		return false;
+	}
+  hbm = LoadBitmap(hinst,MAKEINTRESOURCE(101));
+  
+  return true;
+}
+
+// Clean up
+void onDestroy(
+  HWND hwnd)
+{
+  DeleteObject(hbm);
+  
+  PostQuitMessage(0);
+}
+
+void onPaint(
+  HWND hwnd)
+{
+  PAINTSTRUCT ps;
+  HDC hdc = BeginPaint(hwnd,&ps);
+  
+  HDC hdcMem = CreateCompatibleDC(NULL);
+  SelectObject(hdcMem, hbm);
+
+  BITMAP bm;
+  GetObject(hbm,sizeof(bm),&bm);
+  
+  BitBlt(hdc,0,0,bm.bmWidth,bm.bmHeight,hdcMem,0,0,SRCCOPY);
+
+  DeleteDC(hdcMem);
+  
+  EndPaint(hwnd,&ps);
+}  
+
+
+LRESULT CALLBACK windowProc(
+  HWND hwnd,
+  UINT uMsg,
+  WPARAM wParam,
+  LPARAM lParam)
+{
+  switch(uMsg)
+  {
+  case WM_CREATE:
+    onCreate(hwnd);
+    break;
+  case WM_DESTROY:
+    onDestroy(hwnd);
+    break;
+  case WM_PAINT:
+	  onPaint(hwnd);
+	  break;
+  }
+  return DefWindowProc(hwnd,uMsg,wParam,lParam);
+}  
+
+
+void registerClass(
+  HINSTANCE hInstance)
+{
+  WNDCLASS wc = {
+    CS_NOCLOSE,
+    windowProc,
+    0,0,
+    hInstance,
+    NULL,
+    NULL,
+    (HBRUSH) GetStockObject(WHITE_BRUSH),
+    NULL,
+    szWindowClass
+  };
+  RegisterClass(&wc);
+}
+
+
+extern "C" DWORD showWinceSplashscreen(LPVOID lpdwThreadParam )
+{
+  HWND hwnd;
+  MSG msg;
+
+
+    // If the splashscreen window is already loaded just skip that
+	hwnd = FindWindow(szWindowClass, szTitle);	
+  if (hwnd) { 
+     return 0;
+	} else {
+    HINSTANCE hInstance = GetModuleHandle(0);
+    SetCursor( LoadCursor( NULL, IDC_WAIT ) );
+	  registerClass(hInstance);
+	  
+	  hwnd = CreateWindow(szWindowClass, szTitle, WS_VISIBLE,
+			0, 0, 0, 0, NULL, NULL, hInstance, NULL);
+
+    RECT rc;
+    // Next resize the main window to the size of the screen.
+    if (GetSystemMetrics(SM_CXSCREEN) > GetSystemMetrics(SM_CYSCREEN)) {
+        SetRect(&rc, 0, 0, GetSystemMetrics(SM_CXSCREEN), GetSystemMetrics(SM_CYSCREEN));
+    } else {
+        SetRect(&rc, 0, 0, GetSystemMetrics(SM_CYSCREEN), GetSystemMetrics(SM_CXSCREEN));
+    }
+    MoveWindow(hwnd, rc.left, rc.top, rc.right-rc.left, rc.bottom-rc.top, TRUE);
+
+
+	  ShowWindow(hwnd,SW_HIDE);
+	}
+  
+  while (GetMessage(&msg, NULL, 0, 0)) 
+	{
+    TranslateMessage(&msg);
+    DispatchMessage(&msg);
+	}
+  return 0;
+}
diff -Nru dbus-1.4.0.orig/bus/splashscreen.h dbus-1.4.0/bus/splashscreen.h
--- dbus-1.4.0.orig/bus/splashscreen.h	1970-01-01 01:00:00.000000000 +0100
+++ dbus-1.4.0/bus/splashscreen.h	2011-01-28 16:22:41.056561900 +0100
@@ -0,0 +1,26 @@
+/*
+    Copyright (c) 2010 Klarälvdalens Datakonsult AB, a KDAB Group company, info@kdab.com
+    Copyright (c) 2010 Andreas Holzammer <andreas.holzammer@kdab.com>
+
+    This library is free software; you can redistribute it and/or modify it
+    under the terms of the GNU Library General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or (at your
+    option) any later version.
+
+    This library is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
+    License for more details.
+
+    You should have received a copy of the GNU Library General Public License
+    along with this library; see the file COPYING.LIB.  If not, write to the
+    Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+    02110-1301, USA.
+*/
+
+#ifndef __SPLASHSCREEN_WINCE_H__
+#define __SPLASHSCREEN_WINCE_H__
+
+DWORD showWinceSplashscreen(LPVOID lpdwThreadParam ) ;
+
+#endif //__SPLASHSCREEN_WINCE_H__
diff -Nru dbus-1.4.0.orig/cmake/bus/CMakeLists.txt dbus-1.4.0/cmake/bus/CMakeLists.txt
--- dbus-1.4.0.orig/cmake/bus/CMakeLists.txt	2010-09-06 19:30:42.000000000 +0200
+++ dbus-1.4.0/cmake/bus/CMakeLists.txt	2011-01-28 16:07:35.320756700 +0100
@@ -75,6 +75,13 @@
 	${DIR_WATCH_SOURCE}
 )
 
+if(WINCE)
+set (BUS_SOURCES 
+  ${BUS_SOURCES}
+	${BUS_DIR}/splashscreen.cpp
+)
+endif(WINCE)
+
 include_directories(${XML_INCLUDE_DIR})
 
 add_executable(dbus-daemon ${BUS_SOURCES} ${BUS_DIR}/main.c)
