From 4d40bd49801ec27dd03619351184e3fbc6cb0cba Mon Sep 17 00:00:00 2001
From: Romain Pokrzywka <romain@kdab.com>
Date: Mon, 29 Mar 2010 16:44:57 -0700
Subject: update WinCE cmake support

---
 cmake/CMakeLists.txt      |   60 ++++++++++++++------------------------------
 cmake/dbus/CMakeLists.txt |   20 +++++++++++++-
 2 files changed, 37 insertions(+), 43 deletions(-)

diff --git a/cmake/CMakeLists.txt b/cmake/CMakeLists.txt
index f464c29..7edc472 100644
--- a/cmake/CMakeLists.txt
+++ b/cmake/CMakeLists.txt
@@ -114,50 +114,28 @@ endif (UNIX AND NOT DBUS_DISABLE_ASSERTS)
 SET(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG}  -D_DEBUG")
 
 #########################################################################
-# Windows CE
+# Windows CE (>= 5.0.0)
 #
-# usage:
-#      cmake ..\trunk\cmake -Dwince=1 -Dwcelibcex=c:\wcelibcex
+# WinCE support now relies on the presence of platform files, found in cmake/modules/platform
+# Cmake 2.8.0 doesn't include WinCE platform files by default, but working ones can be found
+# on CMake's bugtracker :
+# http://public.kitware.com/Bug/view.php?id=7919
 #
-# change configuration in Visual Studio to 'Pocket PC 2003 (ARMV4)'
+# for cmake 2.8.0 get the following patch only :
+# http://public.kitware.com/Bug/file_download.php?file_id=2944&type=bug
 #
-if(wince)
-	project(${CMAKE_PROJECT_NAME}-wince)
-	# don't forget parameters
-	set(wince 1 CACHE TYPE STRING FORCE)
-	set(wcelibcex ${wcelibcex} CACHE TYPE STRING FORCE)
-
-	include_directories(${wcelibcex}/include/wcelibcex ${wcelibcex}/src)
-
-	add_definitions(
-# see config.h.cmake
-#			-DDBUS_WINCE
-			-DWINCE
-			-DWIN32_PLATFORM_PSPC
-			-D_WINDOWS
-			-D_UNICODE
-			-DUNICODE
-			-DPOCKETPC2003_UI_MODEL
-			)
-
-	# Windows CE Version
-	add_definitions(
-			-D_WIN32_WCE=0x420
-			-DWIN32_PLATFORM_PSPC=0x420
-			-DUNDER_CE=0x420
-			)
-
-	# Architecture
-	add_definitions(
-			-DARM
-			-D_ARM_
-			)
-
-	set(CMAKE_CXX_STANDARD_LIBRARIES "coredll.lib corelibc.lib ole32.lib oleaut32.lib uuid.lib commctrl.lib ws2.lib")
-
-	set(CMAKE_SHARED_LINKER_FLAGS "/subsystem:windowsce,4.20 /machine:THUMB")
-
-endif(wince)
+# after applying the patch, you can enable the WinCE build by specifying :
+# cmake [...] -DCMAKE_SYSTEM_NAME=WinCE -DCMAKE_SYSTEM_VERSION=X.XX
+# (where X.XX is your actual WinCE version, e.g. 5.02 for Windows Mobile 6)
+#
+# Note that you should have a proper cross-compilation environment set up prior to running
+# cmake, ie. the PATH, INCLUDE and LIB env vars pointing to your CE SDK/toolchain.
+#
+if(WINCE)
+
+MESSAGE("Building for WinCE (${CMAKE_SYSTEM_VERSION})")
+
+endif(WINCE)
 #########################################################################
 
 
diff --git a/cmake/dbus/CMakeLists.txt b/cmake/dbus/CMakeLists.txt
index 57c499f..45986d1 100644
--- a/cmake/dbus/CMakeLists.txt
+++ b/cmake/dbus/CMakeLists.txt
@@ -198,6 +198,14 @@ if (WIN32)
 		${DBUS_DIR}/dbus-spawn-win.c
 		${DBUS_DIR}/dbus-sysdeps-util-win.c
 	)
+	if(WINCE)
+	set (DBUS_SHARED_SOURCES ${DBUS_SHARED_SOURCES}
+		${DBUS_DIR}/dbus-sysdeps-wince-glue.c
+	)
+	set (DBUS_SHARED_HEADERS ${DBUS_SHARED_HEADERS}
+		${DBUS_DIR}/dbus-sysdeps-wince-glue.h
+	)
+	endif(WINCE)
 else (WIN32)
 	set (DBUS_SHARED_SOURCES ${DBUS_SHARED_SOURCES} 
 		${DBUS_DIR}/dbus-file-unix.c
@@ -256,7 +264,11 @@ add_library(dbus-1 SHARED
 			${DBUS_LIB_HEADERS}
 			${DBUS_SHARED_HEADERS})
 if(WIN32)
-	target_link_libraries(dbus-1 ws2_32 advapi32 netapi32)
+    if(WINCE)
+        target_link_libraries(dbus-1 ws2)
+    else(WINCE)
+        target_link_libraries(dbus-1 ws2_32 advapi32 netapi32)
+    endif(WINCE)
 endif(WIN32)
 
 install_targets(/lib dbus-1 )
@@ -275,7 +287,11 @@ add_library(dbus-internal ${DBUS_INTERNAL_ADD_LIBRARY_OPTIONS}
 target_link_libraries(dbus-internal)
 set_target_properties(dbus-internal PROPERTIES COMPILE_FLAGS ${DBUS_INTERNAL_LIBRARY_DEFINITIONS})
 if(WIN32)
-	target_link_libraries(dbus-internal ws2_32 advapi32 netapi32)
+    if(WINCE)
+        target_link_libraries(dbus-internal ws2)
+    else(WINCE)
+        target_link_libraries(dbus-internal ws2_32 advapi32 netapi32)
+    endif(WINCE)
 endif(WIN32)
 
 if (DBUS_BUILD_TESTS)
-- 
1.6.5.1.1367.gcd48


From ed6e1020022d73bd4061f5df4e665456e3b2c213 Mon Sep 17 00:00:00 2001
From: Romain Pokrzywka <romain@kdab.com>
Date: Mon, 29 Mar 2010 17:54:28 -0700
Subject: add more stuff not defined by the WM6 SDK

---
 dbus/dbus-sysdeps-wince-glue.c |   83 ++++++++++++++++++++--------------------
 dbus/dbus-sysdeps-wince-glue.h |   46 ++++++++++++++++++++++
 2 files changed, 87 insertions(+), 42 deletions(-)

diff --git a/dbus/dbus-sysdeps-wince-glue.c b/dbus/dbus-sysdeps-wince-glue.c
index 204e719..ccc5164 100644
--- a/dbus/dbus-sysdeps-wince-glue.c
+++ b/dbus/dbus-sysdeps-wince-glue.c
@@ -32,7 +32,8 @@
 #include "dbus-sysdeps-win.h"
 
 #include <windows.h>
-#include <shlobj.h>
+// wasn't available on msvc, doesn't seem needed anyway ?
+//#include <shlobj.h>
 
 /* Copy SRC to DEST, returning the address of the terminating '\0' in DEST.  */
 static char *
@@ -68,10 +69,13 @@ read_w32_registry_string (const char *root, const char *dir, const char *name)
     root_key = HKEY_LOCAL_MACHINE;
   else if ( !strcmp( root, "HKEY_USERS" ) )
     root_key = HKEY_USERS;
+// cegcc addition, not supported by the os
+#if 0
   else if ( !strcmp( root, "HKEY_PERFORMANCE_DATA" ) )
     root_key = HKEY_PERFORMANCE_DATA;
   else if ( !strcmp( root, "HKEY_CURRENT_CONFIG" ) )
     root_key = HKEY_CURRENT_CONFIG;
+#endif
   else
     return NULL;
 
@@ -88,27 +92,27 @@ read_w32_registry_string (const char *root, const char *dir, const char *name)
   if (RegQueryValueExA (key_handle, name, 0, NULL, NULL, &nbytes))
     {
       if (root)
-        goto leave;
+        goto out;
       /* Try to fallback to HKLM also for a missing value.  */
       RegCloseKey (key_handle);
       if (RegOpenKeyExA (HKEY_LOCAL_MACHINE, dir, 0, KEY_READ, &key_handle))
         return NULL; /* Nope.  */
       if (RegQueryValueExA (key_handle, name, 0, NULL, NULL, &nbytes))
-        goto leave;
+        goto out;
     }
   n1 = nbytes + 1;
   result = malloc (n1);
   if (!result)
-    goto leave;
+    goto out;
   if (RegQueryValueExA (key_handle, name, 0, &type, result, &n1))
     {
       free(result);
       result = NULL;
-      goto leave;
+      goto out;
     }
   result[nbytes] = 0; /* Make sure it is really a string.  */
 
- leave:
+ out:
   RegCloseKey (key_handle);
   return result;
 }
@@ -290,6 +294,12 @@ clock (void)
   return GetTickCount ();
 }
 
+void
+abort (void)
+{
+  // abort() triggers exit(3) on win32, do the same for lack of other references/alternatives
+  exit(3);
+}
 
 void
 GetSystemTimeAsFileTime (LPFILETIME ftp)
@@ -356,7 +366,7 @@ MoveFileExA (LPCSTR lpExistingFileName, LPCSTR lpNewFileName, DWORD dwFlags)
 BOOL
 SetHandleInformation (HANDLE hObject, DWORD dwMask, DWORD dwFlags)
 {
-  _dbus_assert (dwMask == (HANDLE_FLAG_INHERIT | HANDLE_FLAG_PROTECT_FROM_CLOSE));
+//  _dbus_assert (dwMask == (HANDLE_FLAG_INHERIT | HANDLE_FLAG_PROTECT_FROM_CLOSE));
 
   /* Not supported on Windows CE, this will throw a warning.  If the
      warning is obnoxious, we may have to disable it.  */
@@ -930,12 +940,12 @@ FormatMessageA (DWORD dwFlags, PCVOID lpSource, DWORD dwMessageId,
 DWORD
 GetModuleFileNameA (HINSTANCE hModule, LPSTR lpFilename, DWORD nSize)
 {
-  wchar_t filename_w[nSize];
+  wchar_t filename_w[256];
   char *filename_c;
   DWORD len;
 
   len = GetModuleFileNameW (hModule, filename_w, nSize);
-  if (len == 0)
+  if (len == 0 || len > 256)
     return 0;
 
   filename_w[nSize - 1] = '\0';
@@ -955,45 +965,34 @@ GetModuleFileNameA (HINSTANCE hModule, LPSTR lpFilename, DWORD nSize)
 DWORD
 GetTempPathA (DWORD nBufferLength, LPSTR lpBuffer)
 {
-  wchar_t dummy[1];
-  DWORD len;
-
-  len = GetTempPathW (0, dummy);
-  if (len == 0)
-    return 0;
+  wchar_t buffer_w[256];
+  DWORD len_w;
+  char *buffer_c;
+  DWORD len_c;
 
+  len_w = GetTempPathW (256, buffer_w);
   /* Better be safe than sorry.  MSDN doesn't say if len is with or
-     without terminating 0.  */
-  len++;
-
-  {
-    wchar_t buffer_w[len];
-    DWORD len_w;
-    char *buffer_c;
-    DWORD len_c;
-
-    len_w = GetTempPathW (len, buffer_w);
-    /* Give up if we still can't get at it.  */
-    if (len_w == 0 || len_w >= len)
-      return 0;
+   without terminating 0.  */
+  len_w++;
+  if (len_w == 0 || len_w >= 256)
+    return 0;
 
-    /* Better be really safe.  */
-    buffer_w[len_w] = '\0';
+  /* Better be really safe.  */
+  buffer_w[len_w] = '\0';
 
-    buffer_c = _dbus_win_utf16_to_utf8 (buffer_w, NULL);
-    if (! buffer_c)
-      return 0;
+  buffer_c = _dbus_win_utf16_to_utf8 (buffer_w, NULL);
+  if (! buffer_c)
+    return 0;
 
-    /* strlen is correct (not _mbstrlen), because we want storage and
-       not string length.  */
-    len_c = strlen (buffer_c) + 1;
-    if (len_c > nBufferLength)
-      return len_c;
+  /* strlen is correct (not _mbstrlen), because we want storage and
+     not string length.  */
+  len_c = strlen (buffer_c) + 1;
+  if (len_c > nBufferLength)
+    return len_c;
 
-    strcpy (lpBuffer, buffer_c);
-    dbus_free (buffer_c);
-    return len_c - 1;
-  }
+  strcpy (lpBuffer, buffer_c);
+  dbus_free (buffer_c);
+  return len_c - 1;
 }
 
 
diff --git a/dbus/dbus-sysdeps-wince-glue.h b/dbus/dbus-sysdeps-wince-glue.h
index da600ca..6908934 100644
--- a/dbus/dbus-sysdeps-wince-glue.h
+++ b/dbus/dbus-sysdeps-wince-glue.h
@@ -73,6 +73,10 @@ DBUS_BEGIN_DECLS
 
 /* Windows CE is missing more stuff that is pretty standard.  */
 
+#define strdup _strdup
+#define stricmp _stricmp
+#define strnicmp _strnicmp
+
 #define environ _dbus_wince_environ
 extern char *environ[];
 
@@ -85,6 +89,36 @@ int putenv (char *str);
 #define clock _dbus_wince_clock
 clock_t clock (void);
 
+#define abort _dbus_wince_abort
+void abort(void);
+
+#define _S_IFMT         0170000         /* file type mask */
+#define _S_IFDIR        0040000         /* directory */
+#define _S_IFCHR        0020000         /* character special */
+#define _S_IFIFO        0010000         /* pipe */
+#define _S_IFREG        0100000         /* regular */
+#define _S_IREAD        0000400         /* read permission, owner */
+#define _S_IWRITE       0000200         /* write permission, owner */
+#define _S_IEXEC        0000100         /* execute/search permission, owner */
+
+#ifndef __OFF_T_DEFINED
+typedef long off_t;
+#define __OFF_T_DEFINED
+#endif
+
+#ifndef _MAX_FNAME
+#define _MAX_FNAME 256
+#endif
+
+#ifndef _IOFBF
+#define _IOFBF	0
+#endif
+#ifndef _IOLBF
+#define _IOLBF	1
+#endif
+#ifndef _IONBF
+#define _IONBF	2
+#endif
 
 /* Windows CE is missing some Windows functions that we want.  */
 
@@ -99,6 +133,9 @@ HANDLE OpenFileMappingA(DWORD,BOOL,LPCSTR);
 
 #define MoveFileExA _dbus_wince_MoveFileExA
 BOOL MoveFileExA(LPCSTR,LPCSTR,DWORD);
+#ifndef MOVEFILE_REPLACE_EXISTING
+#define MOVEFILE_REPLACE_EXISTING 0x00000001
+#endif
 
 #define SetHandleInformation _dbus_wince_SetHandleInformation
 BOOL SetHandleInformation(HANDLE,DWORD,DWORD);
@@ -111,6 +148,12 @@ DWORD SearchPathA(LPCSTR,LPCSTR,LPCSTR,DWORD,LPSTR,LPSTR*);
 dbus_bool_t _dbus_getsid(char **sid);
 
 
+#define LookupAccountNameW _dbus_wince_LookupAccountNameW
+BOOL LookupAccountNameW(LPCWSTR,LPCWSTR,PSID,PDWORD,LPWSTR,PDWORD,PSID_NAME_USE);
+
+#define IsValidSid _dbus_wince_IsValidSid
+BOOL IsValidSid(PSID);
+
 /* Windows CE does only have the UNICODE interfaces (FooW), but we
    want to use the ASCII interfaces (FooA).  We implement them
    here.  */
@@ -147,6 +190,9 @@ HANDLE CreateMutexA(LPSECURITY_ATTRIBUTES,BOOL,LPCSTR);
 
 #define CreateProcessA _dbus_wince_CreateProcessA
 BOOL CreateProcessA(LPCSTR,LPSTR,LPSECURITY_ATTRIBUTES,LPSECURITY_ATTRIBUTES,BOOL,DWORD,PVOID,LPCSTR,LPSTARTUPINFOA,LPPROCESS_INFORMATION);
+#ifndef CREATE_NO_WINDOW
+#define CREATE_NO_WINDOW 0x08000000
+#endif
 
 #define RegOpenKeyExA _dbus_wince_RegOpenKeyExA
 LONG RegOpenKeyExA(HKEY,LPCSTR,DWORD,REGSAM,PHKEY);
-- 
1.6.5.1.1367.gcd48


From 8fa08a0c591c5cd03639a660f62d640fc6b88481 Mon Sep 17 00:00:00 2001
From: Romain Pokrzywka <romain@kdab.com>
Date: Mon, 29 Mar 2010 17:54:47 -0700
Subject: WinCE compatibility

---
 tools/dbus-launch-win.c |    6 ++++--
 tools/dbus-monitor.c    |    2 ++
 tools/dbus-send.c       |    6 ++++++
 3 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/tools/dbus-launch-win.c b/tools/dbus-launch-win.c
index b744228..6c144c5 100644
--- a/tools/dbus-launch-win.c
+++ b/tools/dbus-launch-win.c
@@ -28,10 +28,12 @@
 #include <windows.h>
 #include <stdio.h>
 #include <string.h>
-#include <mbstring.h>
 #include <assert.h>
+#ifndef DBUS_WINCE
+#include <mbstring.h>
+#endif
 
-#if defined __MINGW32__ || (defined _MSC_VER && _MSC_VER <= 1310)
+#if defined __MINGW32__ || (defined _MSC_VER && _MSC_VER <= 1310) || defined(DBUS_WINCE)
 /* save string functions version
 */ 
 #define errno_t int
diff --git a/tools/dbus-monitor.c b/tools/dbus-monitor.c
index 9db22a9..3ca1662 100644
--- a/tools/dbus-monitor.c
+++ b/tools/dbus-monitor.c
@@ -42,6 +42,8 @@
 #define DBUS_USEC_IN_SEC        1000000LL
 
 #ifdef DBUS_WINCE
+#include <dbus/dbus-sysdeps-wince-glue.h>
+
 void
 GetSystemTimeAsFileTime (LPFILETIME ftp)
 {
diff --git a/tools/dbus-send.c b/tools/dbus-send.c
index c9c9be2..b27bc32 100644
--- a/tools/dbus-send.c
+++ b/tools/dbus-send.c
@@ -28,6 +28,10 @@
 
 #include "dbus-print-message.h"
 
+#ifdef DBUS_WINCE
+#include <dbus/dbus-sysdeps-wince-glue.h>
+#endif
+
 static const char *appname;
 
 static void
@@ -83,6 +87,7 @@ append_arg (DBusMessageIter *iter, int type, const char *value)
       dbus_message_iter_append_basic (iter, DBUS_TYPE_UINT32, &uint32);
       break;
 
+#ifndef DBUS_WINCE
     case DBUS_TYPE_INT64:
       int64 = strtoll (value, NULL, 0);
       dbus_message_iter_append_basic (iter, DBUS_TYPE_INT64, &int64);
@@ -92,6 +97,7 @@ append_arg (DBusMessageIter *iter, int type, const char *value)
       uint64 = strtoull (value, NULL, 0);
       dbus_message_iter_append_basic (iter, DBUS_TYPE_UINT64, &uint64);
       break;
+#endif
 
     case DBUS_TYPE_STRING:
       dbus_message_iter_append_basic (iter, DBUS_TYPE_STRING, &value);
-- 
1.6.5.1.1367.gcd48


From 2ba2b922bcf5beb74aab0b6f9b618cb97da4b3d3 Mon Sep 17 00:00:00 2001
From: Romain Pokrzywka <romain@kdab.com>
Date: Mon, 29 Mar 2010 18:22:01 -0700
Subject: build fixes for WinCE with MSVC

---
 dbus/dbus-pipe-win.c           |   12 +++++++-----
 dbus/dbus-spawn-win.c          |    5 ++---
 dbus/dbus-sysdeps-thread-win.c |   16 ++++++++++++----
 dbus/dbus-sysdeps-util-win.c   |   12 ++++++------
 dbus/dbus-sysdeps-win.c        |   22 ++++++++++++----------
 dbus/dbus-sysdeps-win.h        |    6 ------
 dbus/dbus-sysdeps.c            |    4 ++--
 dbus/dbus-test-main.c          |    2 +-
 8 files changed, 42 insertions(+), 37 deletions(-)

diff --git a/dbus/dbus-pipe-win.c b/dbus/dbus-pipe-win.c
index ce85e73..149d1ee 100644
--- a/dbus/dbus-pipe-win.c
+++ b/dbus/dbus-pipe-win.c
@@ -28,7 +28,7 @@
 #include "dbus-internals.h"
 #include "dbus-pipe.h"
 
-#include <io.h>
+#include <windows.h>
 
 /**
  * write data to a pipe.
@@ -47,11 +47,13 @@ _dbus_pipe_write (DBusPipe         *pipe,
                   int               len,
                   DBusError        *error)
 {
-  int written;
+  DWORD written;
+  BOOL res;
+
   const char *buffer_c = _dbus_string_get_const_data (buffer);
 
-  written = _write (pipe->fd_or_handle, buffer_c + start, len);
-  if (written < 0)
+  res = WriteFile ((HANDLE) pipe->fd_or_handle, buffer_c + start, len, &written, NULL);
+  if (res == 0 || written < 0)
     {
       dbus_set_error (error, DBUS_ERROR_FAILED,
                       "Writing to pipe: %s\n",
@@ -73,7 +75,7 @@ _dbus_pipe_close  (DBusPipe         *pipe,
 {
   _DBUS_ASSERT_ERROR_IS_CLEAR (error);
 
-  if (_close (pipe->fd_or_handle) < 0)
+  if (CloseHandle ((HANDLE) pipe->fd_or_handle) == 0)
     {
       dbus_set_error (error, _dbus_error_from_system_errno (),
                       "Could not close pipe %d: %s", pipe->fd_or_handle,
diff --git a/dbus/dbus-spawn-win.c b/dbus/dbus-spawn-win.c
index b17a6f1..6c32ab2 100644
--- a/dbus/dbus-spawn-win.c
+++ b/dbus/dbus-spawn-win.c
@@ -9,9 +9,6 @@
 #endif
 
 #include <stdio.h>
-#ifdef DBUS_WINCE
-#include <process.h>
-#endif
 
 /* -*- mode: C; c-file-style: "gnu"; indent-tabs-mode: nil; -*- */
 /* dbus-spawn-win32.c Wrapper around g_spawn
@@ -53,7 +50,9 @@
 
 #include <stdlib.h>
 
+#ifndef DBUS_WINCE
 #include <process.h>
+#endif
 
 /**
  * Babysitter implementation details
diff --git a/dbus/dbus-sysdeps-thread-win.c b/dbus/dbus-sysdeps-thread-win.c
index 55c0bf7..cd1474b 100644
--- a/dbus/dbus-sysdeps-thread-win.c
+++ b/dbus/dbus-sysdeps-thread-win.c
@@ -35,6 +35,11 @@ struct DBusCondVar {
   CRITICAL_SECTION lock; /**< lock protecting the list */
 };
 
+/* TLS_OUT_OF_INDEXES not defined on WinCE */
+#ifndef TLS_OUT_OF_INDEXES
+#define TLS_OUT_OF_INDEXES 0xffffffff
+#endif
+
 static DWORD dbus_cond_event_tls = TLS_OUT_OF_INDEXES;
 
 
@@ -46,15 +51,18 @@ _dbus_win_get_dll_hmodule (void)
   return dbus_dll_hmodule;
 }
 
-BOOL WINAPI DllMain (HINSTANCE hinstDLL,
-		     DWORD     fdwReason,
-		     LPVOID    lpvReserved);
-
 /* We need this to free the TLS events on thread exit */
+#ifdef DBUS_WINCE
+BOOL WINAPI
+DllMain (HANDLE hinstDLL,
+	 DWORD     fdwReason,
+	 LPVOID    lpvReserved)
+#else
 BOOL WINAPI
 DllMain (HINSTANCE hinstDLL,
 	 DWORD     fdwReason,
 	 LPVOID    lpvReserved)
+#endif
 {
   HANDLE event;
   switch (fdwReason) 
diff --git a/dbus/dbus-sysdeps-util-win.c b/dbus/dbus-sysdeps-util-win.c
index 5b2c29c..23e3f1a 100644
--- a/dbus/dbus-sysdeps-util-win.c
+++ b/dbus/dbus-sysdeps-util-win.c
@@ -35,19 +35,19 @@
 #include "dbus-sockets-win.h"
 #include "dbus-memory.h"
 
-#include <io.h>
-#include <sys/stat.h>
-#include <aclapi.h>
-#include <winsock2.h>
-
 #include <stdio.h>
 #include <stdlib.h>
-#include <fcntl.h>
 #if HAVE_ERRNO_H
 #include <errno.h>
 #endif
 #include <winsock2.h>   // WSA error codes
 
+#ifndef DBUS_WINCE
+#include <io.h>
+#include <lm.h>
+#include <sys/stat.h>
+#endif
+
 /**
  * Does the chdir, fork, setsid, etc. to become a daemon process.
  *
diff --git a/dbus/dbus-sysdeps-win.c b/dbus/dbus-sysdeps-win.c
index b3fd9c0..b8c363d 100644
--- a/dbus/dbus-sysdeps-win.c
+++ b/dbus/dbus-sysdeps-win.c
@@ -57,19 +57,16 @@
 extern BOOL WINAPI ConvertStringSidToSidA (LPCSTR  StringSid, PSID *Sid);
 extern BOOL WINAPI ConvertSidToStringSidA (PSID Sid, LPSTR *StringSid);
 
-#include <fcntl.h>
-
-#include <process.h>
 #include <stdio.h>
-#include <io.h>
-
 #include <string.h>
-#include <mbstring.h>
 #if HAVE_ERRNO_H
 #include <errno.h>
 #endif
+
+#ifndef DBUS_WINCE
+#include <mbstring.h>
 #include <sys/stat.h>
-#include <sys/types.h>
+#endif
 
 #ifdef HAVE_WSPIAPI_H
 // needed for w2k compatibility (getaddrinfo/freeaddrinfo/getnameinfo)
@@ -91,7 +88,7 @@ typedef int socklen_t;
 void
 _dbus_win_set_errno (int err)
 {
-#if DBUS_WINCE
+#ifdef DBUS_WINCE
   SetLastError (err);
 #else
   errno = err;
@@ -324,12 +321,15 @@ _dbus_close_socket (int        fd,
 void
 _dbus_fd_set_close_on_exec (int handle)
 {
+//Windows CE doesn't support handle inheritance so nothing to do there
+#ifndef DBUS_WINCE
   if ( !SetHandleInformation( (HANDLE) handle,
                         HANDLE_FLAG_INHERIT | HANDLE_FLAG_PROTECT_FROM_CLOSE,
                         0 /*disable both flags*/ ) )
     {
       _dbus_win_warn_win_error ("Disabling socket handle inheritance failed:", GetLastError());
     }
+#endif
 }
 
 /**
@@ -1721,9 +1721,11 @@ _dbus_read_credentials_socket  (int              handle,
 dbus_bool_t
 _dbus_check_dir_is_private_to_user (DBusString *dir, DBusError *error)
 {
+#ifndef DBUS_WINCE
+    // TODO ?
   const char *directory;
   struct stat sb;
-
+#endif
   _DBUS_ASSERT_ERROR_IS_CLEAR (error);
 
   return TRUE;
@@ -2049,7 +2051,7 @@ _dbus_delete_file (const DBusString *filename,
 
   filename_c = _dbus_string_get_const_data (filename);
 
-  if (_unlink (filename_c) < 0)
+  if (DeleteFileA (filename_c) < 0)
     {
       dbus_set_error (error, DBUS_ERROR_FAILED,
                       "Failed to delete file %s: %s\n",
diff --git a/dbus/dbus-sysdeps-win.h b/dbus/dbus-sysdeps-win.h
index a2e2ad7..a8ff943 100644
--- a/dbus/dbus-sysdeps-win.h
+++ b/dbus/dbus-sysdeps-win.h
@@ -36,12 +36,6 @@ extern void *_dbus_win_get_dll_hmodule (void);
 #include <windows.h>
 #undef interface
 
-#include <aclapi.h>
-#include <lm.h>
-#include <io.h>
-#include <share.h>
-
-
 #define DBUS_CONSOLE_DIR "/var/run/console/"
 
 
diff --git a/dbus/dbus-sysdeps.c b/dbus/dbus-sysdeps.c
index 2132c34..48c726d 100644
--- a/dbus/dbus-sysdeps.c
+++ b/dbus/dbus-sysdeps.c
@@ -625,7 +625,7 @@ ascii_strtod (const char *nptr,
 
   fail_pos = NULL;
 
-#if HAVE_LOCALE_H
+#if HAVE_LOCALE_H && !defined(DBUS_WINCE)
   locale_data = localeconv ();
   decimal_point = locale_data->decimal_point;
 #else
@@ -1010,7 +1010,7 @@ _dbus_error_from_system_errno (void)
 void
 _dbus_set_errno_to_zero (void)
 {
-#if DBUS_WINCE
+#ifdef DBUS_WINCE
   SetLastError (0);
 #else
   errno = 0;
diff --git a/dbus/dbus-test-main.c b/dbus/dbus-test-main.c
index b04bebc..17188d7 100644
--- a/dbus/dbus-test-main.c
+++ b/dbus/dbus-test-main.c
@@ -38,7 +38,7 @@ main (int    argc,
   const char *test_data_dir;
   const char *specific_test;
 
-#if HAVE_LOCALE_H
+#if HAVE_LOCALE_H && !defined(DBUS_WINCE)
   setlocale(LC_ALL, "");
 #endif
   
-- 
1.6.5.1.1367.gcd48

