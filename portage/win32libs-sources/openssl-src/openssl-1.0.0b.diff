diff -Nru openssl-1.0.0.orig/apps/apps.c openssl-1.0.0/apps/apps.c
--- openssl-1.0.0.orig/apps/apps.c	2009-10-31 14:34:19.000000000 +0100
+++ openssl-1.0.0/apps/apps.c	2010-05-02 16:36:22.646457200 +0200
@@ -147,7 +147,7 @@
 #include "apps.h"
 #undef NON_MAIN
 
-#ifdef _WIN32
+#if defined(OPENSSL_SYS_WIN32) && !defined(WCECOMPAT)
 static int WIN32_rename(const char *from, const char *to);
 #define rename(from,to) WIN32_rename((from),(to))
 #endif
diff -Nru openssl-1.0.0.orig/crypto/buffer/buffer.h openssl-1.0.0/crypto/buffer/buffer.h
--- openssl-1.0.0.orig/crypto/buffer/buffer.h	2007-10-09 17:52:07.000000000 +0200
+++ openssl-1.0.0/crypto/buffer/buffer.h	2010-05-02 16:36:22.708460800 +0200
@@ -67,10 +67,6 @@
 
 #include <stddef.h>
 
-#if !defined(NO_SYS_TYPES_H)
-#include <sys/types.h>
-#endif
-
 /* Already declared in ossl_typ.h */
 /* typedef struct buf_mem_st BUF_MEM; */
 
diff -Nru openssl-1.0.0.orig/crypto/err/err.h openssl-1.0.0/crypto/err/err.h
--- openssl-1.0.0.orig/crypto/err/err.h	2008-10-26 19:40:51.000000000 +0100
+++ openssl-1.0.0/crypto/err/err.h	2010-05-02 16:36:22.728461900 +0200
@@ -137,8 +137,6 @@
 #define ERR_PUT_error(a,b,c,d,e)	ERR_put_error(a,b,c,NULL,0)
 #endif
 
-#include <errno.h>
-
 #define ERR_TXT_MALLOCED	0x01
 #define ERR_TXT_STRING		0x02
 
diff -Nru openssl-1.0.0.orig/crypto/rand/randfile.c openssl-1.0.0/crypto/rand/randfile.c
--- openssl-1.0.0.orig/crypto/rand/randfile.c	2010-01-26 19:07:41.000000000 +0100
+++ openssl-1.0.0/crypto/rand/randfile.c	2010-05-02 16:36:22.747463000 +0200
@@ -79,12 +79,20 @@
 # include <sys/stat.h>
 #endif
 
-#ifdef _WIN32
+#ifdef OPENSSL_SYS_WIN32
+#ifndef stat
 #define stat	_stat
+#endif
+#ifndef chmod
 #define chmod	_chmod
+#endif
+#ifndef open
 #define open	_open
+#endif
+#ifndef fdopen
 #define fdopen	_fdopen
 #endif
+#endif
 
 #undef BUFSIZE
 #define BUFSIZE	1024
diff -Nru openssl-1.0.0.orig/e_os.h openssl-1.0.0/e_os.h
--- openssl-1.0.0.orig/e_os.h	2009-08-26 17:13:43.000000000 +0200
+++ openssl-1.0.0/e_os.h	2010-07-18 16:16:22.093517500 +0200
@@ -150,7 +150,9 @@
 #define clear_socket_error()	WSASetLastError(0)
 #define readsocket(s,b,n)	recv((s),(b),(n),0)
 #define writesocket(s,b,n)	send((s),(b),(n),0)
+#if defined(_MSC_VER) && _MSC_VER < 1600
 #define EADDRINUSE		WSAEADDRINUSE
+#endif
 #elif defined(__DJGPP__)
 #define WATT32
 #define get_last_socket_error()	errno
@@ -272,7 +274,7 @@
 	*/
 #      define _WIN32_WINNT 0x0400
 #    endif
-#    if !defined(OPENSSL_NO_SOCK) && defined(_WIN32_WINNT)
+#    if !defined(OPENSSL_NO_SOCK) && defined(OPENSSL_SYS_WIN32)
        /*
         * Just like defining _WIN32_WINNT including winsock2.h implies
         * certain "discipline" for maintaining [broad] binary compatibility.
@@ -308,7 +310,7 @@
 #      undef isupper
 #      undef isxdigit
 #    endif
-#    if defined(_MSC_VER) && !defined(_DLL) && defined(stdin)
+#    if defined(_MSC_VER) && !defined(_DLL) && defined(stdin) && !defined(_WIN32_WCE)
 #      if _MSC_VER>=1300
 #        undef stdin
 #        undef stdout
@@ -337,7 +339,7 @@
 #  include <io.h>
 #  include <fcntl.h>
 
-#  ifdef OPENSSL_SYS_WINCE
+#  if defined(OPENSSL_SYS_WINCE) && !defined(WCECOMPAT)
 #    define OPENSSL_NO_POSIX_IO
 #  endif
 
@@ -499,7 +501,8 @@
 #      endif
 #      if !defined(IPPROTO_IP)
          /* winsock[2].h was included already? */
-#        include <winsock.h>
+#        include <winsock2.h>
+#        include <ws2tcpip.h>
 #      endif
 #      ifdef getservbyname
 #        undef getservbyname
diff -Nru openssl-1.0.0.orig/engines/ccgost/gost_lcl.h openssl-1.0.0/engines/ccgost/gost_lcl.h
--- openssl-1.0.0.orig/engines/ccgost/gost_lcl.h	2009-06-16 18:39:20.000000000 +0200
+++ openssl-1.0.0/engines/ccgost/gost_lcl.h	2010-05-02 16:36:22.787465300 +0200
@@ -18,6 +18,11 @@
 #include <openssl/ec.h>
 #include "gost89.h"
 #include "gosthash.h"
+
+#if !defined(NO_SYS_TYPES_H)
+#include <sys/types.h>
+#endif
+
 /* Control commands */
 #define GOST_PARAM_CRYPT_PARAMS 0
 #define GOST_PARAM_MAX 0
diff -Nru openssl-1.0.0.orig/include/openssl/buffer.h openssl-1.0.0/include/openssl/buffer.h
--- openssl-1.0.0.orig/include/openssl/buffer.h	2007-10-09 17:52:07.000000000 +0200
+++ openssl-1.0.0/include/openssl/buffer.h	2010-05-02 16:36:22.805466300 +0200
@@ -67,10 +67,6 @@
 
 #include <stddef.h>
 
-#if !defined(NO_SYS_TYPES_H)
-#include <sys/types.h>
-#endif
-
 /* Already declared in ossl_typ.h */
 /* typedef struct buf_mem_st BUF_MEM; */
 
diff -Nru openssl-1.0.0.orig/include/openssl/dtls1.h openssl-1.0.0/include/openssl/dtls1.h
--- openssl-1.0.0.orig/include/openssl/dtls1.h	2009-09-09 19:05:42.000000000 +0200
+++ openssl-1.0.0/include/openssl/dtls1.h	2010-04-25 16:27:01.187323700 +0200
@@ -68,7 +68,7 @@
 #endif
 #ifdef OPENSSL_SYS_WIN32
 /* Needed for struct timeval */
-#include <winsock.h>
+#include <winsock2.h>
 #elif defined(OPENSSL_SYS_NETWARE) && !defined(_WINSOCK2API_)
 #include <sys/timeval.h>
 #else
diff -Nru openssl-1.0.0.orig/include/openssl/err.h openssl-1.0.0/include/openssl/err.h
--- openssl-1.0.0.orig/include/openssl/err.h	2008-10-26 19:40:51.000000000 +0100
+++ openssl-1.0.0/include/openssl/err.h	2010-05-02 16:36:22.825467500 +0200
@@ -137,8 +137,6 @@
 #define ERR_PUT_error(a,b,c,d,e)	ERR_put_error(a,b,c,NULL,0)
 #endif
 
-#include <errno.h>
-
 #define ERR_TXT_MALLOCED	0x01
 #define ERR_TXT_STRING		0x02
 
diff -Nru openssl-1.0.0.orig/ssl/dtls1.h openssl-1.0.0/ssl/dtls1.h
--- openssl-1.0.0.orig/ssl/dtls1.h	2009-09-09 19:05:42.000000000 +0200
+++ openssl-1.0.0/ssl/dtls1.h	2010-04-25 16:26:18.163862900 +0200
@@ -68,7 +68,7 @@
 #endif
 #ifdef OPENSSL_SYS_WIN32
 /* Needed for struct timeval */
-#include <winsock.h>
+#include <winsock2.h>
 #elif defined(OPENSSL_SYS_NETWARE) && !defined(_WINSOCK2API_)
 #include <sys/timeval.h>
 #else
diff -Nru openssl-1.0.0.orig/ssl/ssltest.c openssl-1.0.0/ssl/ssltest.c
--- openssl-1.0.0.orig/ssl/ssltest.c	2010-01-24 17:57:38.000000000 +0100
+++ openssl-1.0.0/ssl/ssltest.c	2010-04-25 16:26:51.252755500 +0200
@@ -190,7 +190,7 @@
 				  */
 
 #ifdef OPENSSL_SYS_WINDOWS
-#include <winsock.h>
+#include <winsock2.h>
 #else
 #include OPENSSL_UNISTD
 #endif
diff -Nru openssl-1.0.0.orig/util/pl/VC-32.pl openssl-1.0.0/util/pl/VC-32.pl
--- openssl-1.0.0.orig/util/pl/VC-32.pl	2010-01-20 15:04:55.000000000 +0100
+++ openssl-1.0.0/util/pl/VC-32.pl	2010-05-02 16:36:22.909472300 +0200
@@ -103,12 +103,13 @@
     }
 
     $cc='$(CC)';
-    $base_cflags=' /W3 /WX /GF /Gy /nologo -DUNICODE -D_UNICODE -DOPENSSL_SYSNAME_WINCE -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -DDSO_WIN32 -DNO_CHMOD -DOPENSSL_SMALL_FOOTPRINT';
+    $base_cflags=' /W3 /WX /wd4748 /wd4101 /GF /Gy /nologo -DUNICODE -D_UNICODE -DOPENSSL_SYSNAME_WINCE -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -DDSO_WIN32 -DNO_CHMOD -DOPENSSL_SMALL_FOOTPRINT -DOPENSSL_NO_CAPIENG';
     $base_cflags.=" $wcecdefs";
+    $base_cflags.=' -DWCECOMPAT'    if (defined($ENV{'WCECOMPAT'}));
     $base_cflags.=' -I$(WCECOMPAT)/include'		if (defined($ENV{'WCECOMPAT'}));
     $base_cflags.=' -I$(PORTSDK_LIBPATH)/../../include'	if (defined($ENV{'PORTSDK_LIBPATH'}));
-    $opt_cflags=' /MC /O1i';	# optimize for space, but with intrinsics...
-    $dbg_clfags=' /MC /Od -DDEBUG -D_DEBUG';
+    $opt_cflags=' /O1i';	# optimize for space, but with intrinsics...
+    $dbg_clfags=' /Od -DDEBUG -D_DEBUG';
     $lflags="/nologo /opt:ref $wcelflag";
     }
 else	# Win32
@@ -147,14 +147,14 @@
 $efile="/out:";
 $exep='.exe';
 if ($no_sock)		{ $ex_libs=''; }
-elsif ($FLAVOR =~ /CE/)	{ $ex_libs='winsock.lib'; }
+elsif ($FLAVOR =~ /CE/)	{ $ex_libs='ws2.lib'; }
 else			{ $ex_libs='ws2_32.lib'; }
 
 if ($FLAVOR =~ /CE/)
 	{
-	$ex_libs.=' $(WCECOMPAT)/lib/wcecompatex.lib'	if (defined($ENV{'WCECOMPAT'}));
+	$ex_libs.=' $(WCECOMPAT)/lib/wcecompat.lib'	if (defined($ENV{'WCECOMPAT'}));
 	$ex_libs.=' $(PORTSDK_LIBPATH)/portlib.lib'	if (defined($ENV{'PORTSDK_LIBPATH'}));
-	$ex_libs.=' /nodefaultlib:oldnames.lib coredll.lib corelibc.lib' if ($ENV{'TARGETCPU'} eq "X86");
+	$ex_libs.=' /nodefaultlib:oldnames.lib coredll.lib corelibc.lib';
 	}
 else
 	{
@@ -261,12 +261,17 @@
 elsif ($shlib && $FLAVOR =~ /CE/)
 	{
 	$mlflags.=" $lflags /dll";
-	$lflags.=' /entry:mainCRTstartup' if(defined($ENV{'PORTSDK_LIBPATH'}));
 	$lib_cflag=" -D_WINDLL -D_DLL";
 	$out_def='out32dll_$(TARGETCPU)';
 	$tmp_def='tmp32dll_$(TARGETCPU)';
 	}
 
+if ($FLAVOR =~ /CE/)
+	{
+	$lflags.=' /entry:mainCRTstartup' if(defined($ENV{'PORTSDK_LIBPATH'}));
+	$lflags.=' /entry:mainACRTStartup' if(defined($ENV{'WCECOMPAT'}));
+	}
+
 $cflags.=" /Fd$out_def";
 
 sub do_lib_rule
