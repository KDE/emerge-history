diff -Nru openssl-1.0.0.orig/apps/apps.c openssl-1.0.0/apps/apps.c
--- openssl-1.0.0.orig/apps/apps.c	2009-10-31 14:34:19.000000000 +0100
+++ openssl-1.0.0/apps/apps.c	2010-05-02 16:36:22.646457200 +0200
@@ -147,7 +147,7 @@
 #include "apps.h"
 #undef NON_MAIN
 
-#ifdef _WIN32
+#if defined(OPENSSL_SYS_WIN32) && !defined(rename)
 static int WIN32_rename(const char *from, const char *to);
 #define rename(from,to) WIN32_rename((from),(to))
 #endif
diff -Nru openssl-1.0.0.orig/Configure openssl-1.0.0/Configure
--- openssl-1.0.0.orig/Configure	2010-01-19 22:40:54.000000000 +0100
+++ openssl-1.0.0/Configure	2010-05-02 16:36:22.685459500 +0200
@@ -584,7 +584,7 @@
 
 my @MK1MF_Builds=qw(VC-WIN64I VC-WIN64A
 		    VC-NT VC-CE VC-WIN32 debug-VC-WIN32
-		    BC-32 
+		    BC-32 mingw mingw64
 		    netware-clib netware-clib-bsdsock
 		    netware-libc netware-libc-bsdsock);
 
diff -Nru openssl-1.0.0.orig/crypto/buffer/buffer.h openssl-1.0.0/crypto/buffer/buffer.h
--- openssl-1.0.0.orig/crypto/buffer/buffer.h	2007-10-09 17:52:07.000000000 +0200
+++ openssl-1.0.0/crypto/buffer/buffer.h	2010-05-02 16:36:22.708460800 +0200
@@ -67,10 +67,6 @@
 
 #include <stddef.h>
 
-#if !defined(NO_SYS_TYPES_H)
-#include <sys/types.h>
-#endif
-
 /* Already declared in ossl_typ.h */
 /* typedef struct buf_mem_st BUF_MEM; */
 
diff -Nru openssl-1.0.0.orig/crypto/err/err.h openssl-1.0.0/crypto/err/err.h
--- openssl-1.0.0.orig/crypto/err/err.h	2008-10-26 19:40:51.000000000 +0100
+++ openssl-1.0.0/crypto/err/err.h	2010-05-02 16:36:22.728461900 +0200
@@ -137,8 +137,6 @@
 #define ERR_PUT_error(a,b,c,d,e)	ERR_put_error(a,b,c,NULL,0)
 #endif
 
-#include <errno.h>
-
 #define ERR_TXT_MALLOCED	0x01
 #define ERR_TXT_STRING		0x02
 
diff -Nru openssl-1.0.0.orig/crypto/rand/randfile.c openssl-1.0.0/crypto/rand/randfile.c
--- openssl-1.0.0.orig/crypto/rand/randfile.c	2010-01-26 19:07:41.000000000 +0100
+++ openssl-1.0.0/crypto/rand/randfile.c	2010-05-02 16:36:22.747463000 +0200
@@ -79,12 +79,20 @@
 # include <sys/stat.h>
 #endif
 
-#ifdef _WIN32
+#ifdef OPENSSL_SYS_WIN32
+#ifndef stat
 #define stat	_stat
+#endif
+#ifndef chmod
 #define chmod	_chmod
+#endif
+#ifndef open
 #define open	_open
+#endif
+#ifndef fdopen
 #define fdopen	_fdopen
 #endif
+#endif
 
 #undef BUFSIZE
 #define BUFSIZE	1024
diff -Nru openssl-1.0.0.orig/e_os.h openssl-1.0.0/e_os.h
--- openssl-1.0.0.orig/e_os.h	2009-08-26 17:13:43.000000000 +0200
+++ openssl-1.0.0/e_os.h	2010-05-02 16:36:22.767464200 +0200
@@ -272,7 +272,7 @@
 	*/
 #      define _WIN32_WINNT 0x0400
 #    endif
-#    if !defined(OPENSSL_NO_SOCK) && defined(_WIN32_WINNT)
+#    if !defined(OPENSSL_NO_SOCK) && defined(OPENSSL_SYS_WIN32)
        /*
         * Just like defining _WIN32_WINNT including winsock2.h implies
         * certain "discipline" for maintaining [broad] binary compatibility.
@@ -308,7 +308,7 @@
 #      undef isupper
 #      undef isxdigit
 #    endif
-#    if defined(_MSC_VER) && !defined(_DLL) && defined(stdin)
+#    if defined(_MSC_VER) && !defined(_DLL) && defined(stdin) && !defined(_WIN32_WCE)
 #      if _MSC_VER>=1300
 #        undef stdin
 #        undef stdout
@@ -337,7 +337,7 @@
 #  include <io.h>
 #  include <fcntl.h>
 
-#  ifdef OPENSSL_SYS_WINCE
+#  if defined(OPENSSL_SYS_WINCE) && !defined(open)
 #    define OPENSSL_NO_POSIX_IO
 #  endif
 
diff -Nru openssl-1.0.0.orig/engines/ccgost/gost_lcl.h openssl-1.0.0/engines/ccgost/gost_lcl.h
--- openssl-1.0.0.orig/engines/ccgost/gost_lcl.h	2009-06-16 18:39:20.000000000 +0200
+++ openssl-1.0.0/engines/ccgost/gost_lcl.h	2010-05-02 16:36:22.787465300 +0200
@@ -18,6 +18,11 @@
 #include <openssl/ec.h>
 #include "gost89.h"
 #include "gosthash.h"
+
+#if !defined(NO_SYS_TYPES_H)
+#include <sys/types.h>
+#endif
+
 /* Control commands */
 #define GOST_PARAM_CRYPT_PARAMS 0
 #define GOST_PARAM_MAX 0
diff -Nru openssl-1.0.0.orig/include/openssl/buffer.h openssl-1.0.0/include/openssl/buffer.h
--- openssl-1.0.0.orig/include/openssl/buffer.h	2007-10-09 17:52:07.000000000 +0200
+++ openssl-1.0.0/include/openssl/buffer.h	2010-05-02 16:36:22.805466300 +0200
@@ -67,10 +67,6 @@
 
 #include <stddef.h>
 
-#if !defined(NO_SYS_TYPES_H)
-#include <sys/types.h>
-#endif
-
 /* Already declared in ossl_typ.h */
 /* typedef struct buf_mem_st BUF_MEM; */
 
diff -Nru openssl-1.0.0.orig/include/openssl/err.h openssl-1.0.0/include/openssl/err.h
--- openssl-1.0.0.orig/include/openssl/err.h	2008-10-26 19:40:51.000000000 +0100
+++ openssl-1.0.0/include/openssl/err.h	2010-05-02 16:36:22.825467500 +0200
@@ -137,8 +137,6 @@
 #define ERR_PUT_error(a,b,c,d,e)	ERR_put_error(a,b,c,NULL,0)
 #endif
 
-#include <errno.h>
-
 #define ERR_TXT_MALLOCED	0x01
 #define ERR_TXT_STRING		0x02
 
diff -Nru openssl-1.0.0.orig/ms/mingw64.bat openssl-1.0.0/ms/mingw64.bat
--- openssl-1.0.0.orig/ms/mingw64.bat	1970-01-01 01:00:00.000000000 +0100
+++ openssl-1.0.0/ms/mingw64.bat	2010-05-02 16:36:22.844468600 +0200
@@ -0,0 +1,90 @@
+@rem OpenSSL with Mingw32+GNU as
+@rem ---------------------------
+
+perl Configure mingw64 %1 %2 %3 %4 %5 %6 %7 %8
+
+@echo off
+
+perl -e "exit 1 if '%1' eq 'no-asm'"
+if errorlevel 1 goto noasm
+
+echo Generating x86_64 for GNU assember
+
+echo Bignum
+cd crypto\bn\asm
+perl bn-586.pl gaswin > bn-win32.s
+perl co-586.pl gaswin > co-win32.s
+cd ..\..\..
+
+echo DES
+cd crypto\des\asm
+perl des-586.pl gaswin > d-win32.s
+cd ..\..\..
+
+echo crypt
+cd crypto\des\asm
+perl crypt586.pl gaswin > y-win32.s
+cd ..\..\..
+
+echo Blowfish
+cd crypto\bf\asm
+perl bf-586.pl gaswin > b-win32.s
+cd ..\..\..
+
+echo CAST5
+cd crypto\cast\asm
+perl cast-586.pl gaswin > c-win32.s
+cd ..\..\..
+
+echo RC4
+cd crypto\rc4\asm
+perl rc4-586.pl gaswin > r4-win32.s
+cd ..\..\..
+
+echo MD5
+cd crypto\md5\asm
+perl md5-586.pl gaswin > m5-win32.s
+cd ..\..\..
+
+echo SHA1
+cd crypto\sha\asm
+perl sha1-586.pl gaswin > s1-win32.s
+cd ..\..\..
+
+echo RIPEMD160
+cd crypto\ripemd\asm
+perl rmd-586.pl gaswin > rm-win32.s
+cd ..\..\..
+
+echo RC5\32
+cd crypto\rc5\asm
+perl rc5-586.pl gaswin > r5-win32.s
+cd ..\..\..
+
+:noasm
+
+echo Generating makefile
+perl util\mkfiles.pl >MINFO
+perl util\mk1mf.pl gaswin Mingw64 >ms\mingw32a.mak
+echo Generating DLL definition files
+perl util\mkdef.pl 32 libeay >ms\libeay32.def
+if errorlevel 1 goto end
+perl util\mkdef.pl 32 ssleay >ms\ssleay32.def
+if errorlevel 1 goto end
+
+rem copy ms\tlhelp32.h outinc
+
+echo Building the libraries
+mingw32-make -f ms/mingw32a.mak
+if errorlevel 1 goto end
+
+echo Generating the DLLs and input libraries
+dllwrap --dllname libeay32.dll --output-lib out/libeay32.a --def ms/libeay32.def out/libcrypto.a -lws2_32 -lgdi32 -lcrypt32
+if errorlevel 1 goto end
+dllwrap --dllname libssl32.dll --output-lib out/libssl32.a --def ms/ssleay32.def out/libssl.a out/libeay32.a
+if errorlevel 1 goto end
+
+echo Done compiling OpenSSL
+
+:end
+
diff -Nru openssl-1.0.0.orig/util/mk1mf.pl openssl-1.0.0/util/mk1mf.pl
--- openssl-1.0.0.orig/util/mk1mf.pl	2009-09-20 14:47:04.000000000 +0200
+++ openssl-1.0.0/util/mk1mf.pl	2010-05-02 16:36:22.857469300 +0200
@@ -68,6 +68,7 @@
 	"VC-NT",   "Microsoft Visual C++ [4-6] - Windows NT ONLY",
 	"Mingw32", "GNU C++ - Windows NT or 9x",
 	"Mingw32-files", "Create files with DOS copy ...",
+	"Mingw64", "GNU C++ - Win64",
 	"BC-NT",   "Borland C++ 4.5 - Windows NT",
 	"linux-elf","Linux elf",
 	"ultrix-mips","DEC mips ultrix",
@@ -181,6 +182,10 @@
 	{
 	require 'Mingw32.pl';
 	}
+elsif ($platform eq "Mingw64")
+	{
+	require 'Mingw64.pl';
+	}
 elsif ($platform eq "Mingw32-files")
 	{
 	require 'Mingw32f.pl';
diff -Nru openssl-1.0.0.orig/util/pl/Mingw32.pl openssl-1.0.0/util/pl/Mingw32.pl
--- openssl-1.0.0.orig/util/pl/Mingw32.pl	2008-04-17 12:19:16.000000000 +0200
+++ openssl-1.0.0/util/pl/Mingw32.pl	2010-05-02 16:36:22.879470600 +0200
@@ -19,7 +19,7 @@
 if ($debug)
 	{ $cflags="-DL_ENDIAN -DDSO_WIN32 -g2 -ggdb"; }
 else
-	{ $cflags="-DL_ENDIAN -DDSO_WIN32 -fomit-frame-pointer -O3 -mcpu=i486 -Wall"; }
+	{ $cflags="-DL_ENDIAN -DDSO_WIN32 -fomit-frame-pointer -O3 -march=i486 -Wall"; }
 
 if ($gaswin and !$no_asm)
 	{
diff -Nru openssl-1.0.0.orig/util/pl/Mingw64.pl openssl-1.0.0/util/pl/Mingw64.pl
--- openssl-1.0.0.orig/util/pl/Mingw64.pl	1970-01-01 01:00:00.000000000 +0100
+++ openssl-1.0.0/util/pl/Mingw64.pl	2010-05-02 16:36:22.896471500 +0200
@@ -0,0 +1,104 @@
+#!/usr/local/bin/perl
+#
+# Mingw64.pl -- Mingw-w64
+#
+
+$o='/';
+$cp='cp';
+$rm='rm -f';
+$mkdir='gmkdir';
+
+$o='\\';
+$cp='copy';
+$rm='del';
+$mkdir='mkdir';
+
+# C compiler stuff
+
+$cc='gcc';
+if ($debug)
+	{ $cflags="-DL_ENDIAN -DDSO_WIN32 -DWIN32_LEAN_AND_MEAN -g2 -ggdb"; }
+else
+	{ $cflags="-DL_ENDIAN -DDSO_WIN32 -fomit-frame-pointer -DWIN32_LEAN_AND_MEAN  -O3 -Wall"; }
+
+if ($gaswin and !$no_asm)
+	{
+        $bn_asm_obj='$(OBJ_D)\bn-win32.o';
+        $bn_asm_src='crypto/bn/asm/bn-win32.s';
+        $bnco_asm_obj='$(OBJ_D)\co-win32.o';
+        $bnco_asm_src='crypto/bn/asm/co-win32.s';
+        $des_enc_obj='$(OBJ_D)\d-win32.o $(OBJ_D)\y-win32.o';
+        $des_enc_src='crypto/des/asm/d-win32.s crypto/des/asm/y-win32.s';
+        $bf_enc_obj='$(OBJ_D)\b-win32.o';
+        $bf_enc_src='crypto/bf/asm/b-win32.s';
+#       $cast_enc_obj='$(OBJ_D)\c-win32.o';
+#       $cast_enc_src='crypto/cast/asm/c-win32.s';
+        $rc4_enc_obj='$(OBJ_D)\r4-win32.o';
+        $rc4_enc_src='crypto/rc4/asm/r4-win32.s';
+        $rc5_enc_obj='$(OBJ_D)\r5-win32.o';
+        $rc5_enc_src='crypto/rc5/asm/r5-win32.s';
+        $md5_asm_obj='$(OBJ_D)\m5-win32.o';
+        $md5_asm_src='crypto/md5/asm/m5-win32.s';
+        $rmd160_asm_obj='$(OBJ_D)\rm-win32.o';
+        $rmd160_asm_src='crypto/ripemd/asm/rm-win32.s';
+        $sha1_asm_obj='$(OBJ_D)\s1-win32.o';
+        $sha1_asm_src='crypto/sha/asm/s1-win32.s';
+	$cflags.=" -DBN_ASM -DMD5_ASM -DSHA1_ASM -DOPENSSL_BN_ASM_PART_WORDS";
+	}
+
+
+$obj='.o';
+$ofile='-o ';
+
+# EXE linking stuff
+$link='${CC}';
+$lflags='${CFLAGS}';
+$efile='-o ';
+$exep='';
+$ex_libs="-lws2_32 -lgdi32 -lcrypt32";
+
+# static library stuff
+$mklib='ar r';
+$mlflags='';
+$ranlib='ranlib';
+$plib='lib';
+$libp=".a";
+$shlibp=".a";
+$lfile='';
+
+$asm='as';
+$afile='-o ';
+#$bn_asm_obj="";
+#$bn_asm_src="";
+#$des_enc_obj="";
+#$des_enc_src="";
+#$bf_enc_obj="";
+#$bf_enc_src="";
+
+sub do_lib_rule
+	{
+	local($obj,$target,$name,$shlib)=@_;
+	local($ret,$_,$Name);
+
+	$target =~ s/\//$o/g if $o ne '/';
+	$target="$target";
+	($Name=$name) =~ tr/a-z/A-Z/;
+
+	$ret.="$target: \$(${Name}OBJ)\n";
+	$ret.="\tif exist $target \$(RM) $target\n";
+	$ret.="\t\$(MKLIB) $target \$(${Name}OBJ)\n";
+	$ret.="\t\$(RANLIB) $target\n\n";
+	}
+
+sub do_link_rule
+	{
+	local($target,$files,$dep_libs,$libs)=@_;
+	local($ret,$_);
+	
+	$file =~ s/\//$o/g if $o ne '/';
+	$n=&bname($target);
+	$ret.="$target: $files $dep_libs\n";
+	$ret.="\t\$(LINK) ${efile}$target \$(LFLAGS) $files $libs\n\n";
+	return($ret);
+	}
+1;
diff -Nru openssl-1.0.0.orig/util/pl/VC-32.pl openssl-1.0.0/util/pl/VC-32.pl
--- openssl-1.0.0.orig/util/pl/VC-32.pl	2010-01-20 15:04:55.000000000 +0100
+++ openssl-1.0.0/util/pl/VC-32.pl	2010-05-02 16:36:22.909472300 +0200
@@ -103,12 +103,12 @@
     }
 
     $cc='$(CC)';
-    $base_cflags=' /W3 /WX /GF /Gy /nologo -DUNICODE -D_UNICODE -DOPENSSL_SYSNAME_WINCE -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -DDSO_WIN32 -DNO_CHMOD -DOPENSSL_SMALL_FOOTPRINT';
+    $base_cflags=' /W3 /WX /wd4748 /wd4101 /GF /Gy /nologo -DUNICODE -D_UNICODE -DOPENSSL_SYSNAME_WINCE -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -DDSO_WIN32 -DNO_CHMOD -DOPENSSL_SMALL_FOOTPRINT -DOPENSSL_NO_CAPIENG';
     $base_cflags.=" $wcecdefs";
     $base_cflags.=' -I$(WCECOMPAT)/include'		if (defined($ENV{'WCECOMPAT'}));
     $base_cflags.=' -I$(PORTSDK_LIBPATH)/../../include'	if (defined($ENV{'PORTSDK_LIBPATH'}));
-    $opt_cflags=' /MC /O1i';	# optimize for space, but with intrinsics...
-    $dbg_clfags=' /MC /Od -DDEBUG -D_DEBUG';
+    $opt_cflags=' /O1i';	# optimize for space, but with intrinsics...
+    $dbg_clfags=' /Od -DDEBUG -D_DEBUG';
     $lflags="/nologo /opt:ref $wcelflag";
     }
 else	# Win32
@@ -147,14 +147,14 @@
 $efile="/out:";
 $exep='.exe';
 if ($no_sock)		{ $ex_libs=''; }
-elsif ($FLAVOR =~ /CE/)	{ $ex_libs='winsock.lib'; }
+elsif ($FLAVOR =~ /CE/)	{ $ex_libs='ws2.lib'; }
 else			{ $ex_libs='ws2_32.lib'; }
 
 if ($FLAVOR =~ /CE/)
 	{
-	$ex_libs.=' $(WCECOMPAT)/lib/wcecompatex.lib'	if (defined($ENV{'WCECOMPAT'}));
+	$ex_libs.=' $(WCECOMPAT)/lib/wcecompat.lib'	if (defined($ENV{'WCECOMPAT'}));
 	$ex_libs.=' $(PORTSDK_LIBPATH)/portlib.lib'	if (defined($ENV{'PORTSDK_LIBPATH'}));
-	$ex_libs.=' /nodefaultlib:oldnames.lib coredll.lib corelibc.lib' if ($ENV{'TARGETCPU'} eq "X86");
+	$ex_libs.=' /nodefaultlib:oldnames.lib coredll.lib corelibc.lib';
 	}
 else
 	{
@@ -261,12 +261,17 @@
 elsif ($shlib && $FLAVOR =~ /CE/)
 	{
 	$mlflags.=" $lflags /dll";
-	$lflags.=' /entry:mainCRTstartup' if(defined($ENV{'PORTSDK_LIBPATH'}));
 	$lib_cflag=" -D_WINDLL -D_DLL";
 	$out_def='out32dll_$(TARGETCPU)';
 	$tmp_def='tmp32dll_$(TARGETCPU)';
 	}
 
+if ($FLAVOR =~ /CE/)
+	{
+	$lflags.=' /entry:mainCRTstartup' if(defined($ENV{'PORTSDK_LIBPATH'}));
+	$lflags.=' /entry:mainACRTStartup' if(defined($ENV{'WCECOMPAT'}));
+	}
+
 $cflags.=" /Fd$out_def";
 
 sub do_lib_rule
